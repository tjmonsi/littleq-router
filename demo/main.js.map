{"version":3,"sources":["webpack:///webpack/bootstrap 41a9fe0530d3faceaf40","webpack:///../node_modules/@polymer/polymer/lib/utils/boot.js","webpack:///../node_modules/@littleq/state-manager/index.js","webpack:///../node_modules/@polymer/polymer/lib/utils/resolve-url.js","webpack:///../node_modules/@polymer/polymer/lib/utils/mixin.js","webpack:///../node_modules/redux/es/index.js","webpack:///../node_modules/@polymer/polymer/lib/utils/case-map.js","webpack:///(webpack)/buildin/global.js","webpack:///../node_modules/global/window.js","webpack:///../node_modules/@polymer/polymer/polymer-element.js","webpack:///../node_modules/@polymer/polymer/lib/utils/settings.js","webpack:///../node_modules/@polymer/polymer/lib/utils/path.js","webpack:///../node_modules/path-to-regexp/index.js","webpack:///../node_modules/@littleq/location-mixin/index.js","webpack:///./node_modules/process/browser.js","webpack:///../node_modules/redux/es/createStore.js","webpack:///../node_modules/lodash-es/isPlainObject.js","webpack:///../node_modules/lodash-es/_Symbol.js","webpack:///../node_modules/redux/es/utils/warning.js","webpack:///../node_modules/redux/es/compose.js","webpack:///../node_modules/@littleq/location-mixin/lib/reducer.js","webpack:///../node_modules/@littleq/query-params-mixin/index.js","webpack:///./index.js","webpack:///../index.js","webpack:///../littleq-router.js","webpack:///../node_modules/@polymer/polymer/lib/mixins/element-mixin.js","webpack:///../node_modules/@polymer/polymer/lib/utils/style-gather.js","webpack:///../node_modules/@polymer/polymer/lib/elements/dom-module.js","webpack:///../node_modules/@polymer/polymer/lib/mixins/property-effects.js","webpack:///../node_modules/@polymer/polymer/lib/mixins/property-accessors.js","webpack:///../node_modules/@polymer/polymer/lib/utils/async.js","webpack:///../node_modules/@polymer/polymer/lib/mixins/template-stamp.js","webpack:///../node_modules/lodash-es/_baseGetTag.js","webpack:///../node_modules/lodash-es/_root.js","webpack:///../node_modules/lodash-es/_freeGlobal.js","webpack:///../node_modules/lodash-es/_getRawTag.js","webpack:///../node_modules/lodash-es/_objectToString.js","webpack:///../node_modules/lodash-es/_getPrototype.js","webpack:///../node_modules/lodash-es/_overArg.js","webpack:///../node_modules/lodash-es/isObjectLike.js","webpack:///../node_modules/symbol-observable/index.js","webpack:///../node_modules/symbol-observable/lib/index.js","webpack:///(webpack)/buildin/module.js","webpack:///../node_modules/symbol-observable/lib/ponyfill.js","webpack:///../node_modules/redux/es/combineReducers.js","webpack:///../node_modules/redux/es/bindActionCreators.js","webpack:///../node_modules/redux/es/applyMiddleware.js","webpack:///../node_modules/@littleq/state-manager/mixins/polymer-redux.js","webpack:///../node_modules/@littleq/location-mixin/lib/resolve-url.js","webpack:///../node_modules/@littleq/query-params-mixin/lib/reducer.js","webpack:///../littleq-route.js","webpack:///../lib/reducer.js","webpack:///../lib/get-routes.js","webpack:///../node_modules/@polymer/polymer/lib/utils/debounce.js","webpack:///./pages/landing-page/index.js","webpack:///./pages/landing-page/index.html","webpack:///./node_modules/polymer-webpack-loader/register-html-template.js","webpack:///../lib/get-transition-event.js"],"names":["window","JSCompiler_renameProperty","prop","obj","Polymer","reducers","initial","store","state","action","ReduxMixin","CSS_URL_RX","ABS_URL","workingURL","resolveDoc","resolveUrl","url","baseURI","test","undefined","u","URL","pathname","href","e","document","location","implementation","createHTMLDocument","base","createElement","head","appendChild","anchor","body","resolveCss","cssText","replace","m","pre","post","pathFromUrl","substring","lastIndexOf","dedupeId","MixinFunction","prototype","__mixinApplications","__mixinSet","dedupingMixin","mixin","mixinApplications","WeakMap","mixinDedupeId","baseSet","map","extended","get","set","mixinSet","Object","create","isCrushed","process","env","NODE_ENV","name","createStore","combineReducers","bindActionCreators","applyMiddleware","compose","dashToCamelCase","camelToDashCase","caseMap","DASH_TO_CAMEL","CAMEL_TO_DASH","dash","indexOf","toUpperCase","camel","toLowerCase","g","Function","eval","module","exports","win","global","self","Element","HTMLElement","settings","useShadow","ShadyDOM","useNativeCSSProperties","Boolean","ShadyCSS","nativeCss","useNativeCustomElements","customElements","polyfillWrapFlushCallback","Settings","rootPath","setRootPath","path","sanitizeDOMValue","setSanitizeDOMValue","newSanitizeDOMValue","isPath","root","isAncestor","isDescendant","translate","matches","normalize","split","dotIndex","slice","newBase","length","Array","isArray","parts","i","args","toString","j","push","join","info","part","value","last","isDeep","pathToRegexp","parse","compile","tokensToFunction","tokensToRegExp","DEFAULT_DELIMITER","DEFAULT_DELIMITERS","PATH_REGEXP","RegExp","str","options","tokens","key","index","defaultDelimiter","delimiter","delimiters","pathEscaped","res","exec","escaped","offset","prev","next","capture","group","modifier","k","partial","repeat","optional","pattern","prefix","escapeGroup","escapeString","substr","data","encode","encodeURIComponent","token","segment","TypeError","String","flags","sensitive","regexpToRegexp","keys","groups","source","match","arrayToRegexp","stringToRegexp","strict","end","endsWith","concat","route","isEndDelimited","superClass","type","observer","statePath","query","urlSpaceRegex","hash","dwellTime","Number","_urlSpaceRegExp","computed","_lastChangedAt","_initialized","_boundHashChanged","_hashChanged","bind","_boundUrlChanged","_urlChanged","_boundGlobalOnClick","_globalOnClick","addEventListener","performance","now","removeEventListener","dispatch","HASH","decodeURIComponent","_dontUpdateUrl","PATH","QUERY","search","_updateUrl","partiallyEncodedPath","encodeURI","partiallyEncodedQuery","partiallyEncodedHash","newUrl","_getUrl","fullNewUrl","protocol","host","shouldReplace","history","replaceState","pushState","dispatchEvent","CustomEvent","event","defaultPrevented","_getSameOriginLinkHref","preventDefault","button","metaKey","ctrlKey","eventPath","composedPath","element","tagName","target","ga","top","origin","urlOrigin","normalizedHref","fullNormalizedHref","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","nextTick","arguments","Item","array","apply","title","browser","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","ActionTypes","INIT","reducer","preloadedState","enhancer","_ref2","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","getState","subscribe","listener","isSubscribed","unsubscribe","splice","replaceReducer","nextReducer","observable","_ref","outerSubscribe","observeState","objectTag","funcProto","objectProto","funcToString","hasOwnProperty","objectCtorString","isPlainObject","proto","Ctor","constructor","Symbol","warning","message","console","error","_len","funcs","_key","arg","reduce","a","b","LOCATION_ACTION","assign","paramsObject","_dontReact","paramsString","UPDATE","params","_decodeParams","_encodeParams","encodedParams","paramString","paramList","param","LittleqRouter","currentRoute","querySelector","style","id","innerHTML","getElementsByTagName","append","_debouncer","debounce","after","re","ROUTE","oldPage","transition","fn","_timeOut","contains","removeChild","_showPage","_removePageAfterTransition","classList","remove","_removePageListenerFallback","add","page","setAttribute","is","define","warn","_regLog","register","dumpRegistrations","caseMap$0","ElementMixin","polymerElementBase","ownPropertiesForClass","klass","__ownProperties","properties","ownObserversForClass","__ownObservers","observers","flattenProperties","flattenedProps","props","p","o","propertiesForClass","__classProperties","superCtor","getPrototypeOf","PolymerElement","propertyDefaultsForClass","__classPropertyDefaults","hasClassFinalized","finalizeClassAndSuper","finalize","finalizeClass","__finalized","finalizeProperties","finalizeObservers","template","t","cloneNode","_template","createPropertyFromConfig","dynamicFns","_createMethodObserver","allProps","readOnly","_hasReadOnlyEffect","_createComputedProperty","_createReadOnlyProperty","reflectToAttribute","_hasReflectEffect","_createReflectedProperty","notify","_hasNotifyEffect","_createNotifyingProperty","_createPropertyObserver","finalizeTemplate","ext","textContent","content","insertBefore","firstChild","prepareTemplate","_bindTemplate","list","__observedAttributes","import","_importPath","assetpath","importPath","$","instanceCount","__polymerFinalized","__proto__","localName","p$","_hasAccessor","_setPendingProperty","styleElement","_enableProperties","_stampTemplate","_attachDom","dom","attachShadow","shadowRoot","mode","old","property","_attributeToProperty","styleSubtree","templateInfo","nodeInfo","registrations","log","forEach","updateStyles","styleDocument","cssFromModules","cssFromModule","cssFromTemplate","cssFromModuleImports","_cssFromModuleImports","MODULE_STYLE_LINK_SELECTOR","INCLUDE_ATTR","importModule","moduleId","PolymerDomModule","templateWithAssetPath","moduleIds","modules","trim","_cssText","e$","querySelectorAll","include","getAttribute","parentNode","importDoc","container","lcModules","findModule","styleOutsideTemplateCheck","inst","DomModule","__assetpath","owner","HTMLImports","importForElement","ownerDocument","selector","CaseMap","TYPES","COMPUTE","REFLECT","NOTIFY","PROPAGATE","OBSERVE","READ_ONLY","DataTrigger","DataEffect","PropertyEffectsType","ensureOwnEffectMap","model","effects","protoFx","instFx","runEffects","oldProps","hasPaths","extraArgs","ran","runEffectsForProperty","rootProperty","fxs","l","fx","lastRun","pathMatchesTrigger","trigger","triggerPath","structured","wildcard","runObserverEffect","methodName","changedProp","__data","dynamicFn","runNotifyEffects","notifyProps","notified","notifyPath","__dataHost","_invalidateProperties","eventName","dispatchNotifyEvent","detail","queueProperty","runNotifyEffect","handleNotification","fromProp","toPath","negate","fromPath","_setPendingPropertyOrPath","runReflectEffect","attrName","_propertyToAttribute","runComputedEffects","changedProps","computeEffects","inputProps","__dataOld","__dataPending","runComputedEffect","result","runMethodEffect","computedProp","methodInfo","__dataHasAccessor","computeLinkedPaths","links","__dataLinkedPaths","link","addBinding","kind","literal","bindings","isCompound","shouldAddListener","listenerEvent","listenerNegate","nodeInfoList","compoundIndex","addEffectForBindingPart","dependencies","evaluator","parseArg","_addTemplatePropertyEffect","runBindingEffect","nodeList","node","_enqueueClient","_evaluateBinding","applyBindingValue","computeBindingValue","_valueToNodeAttribute","_setUnmanagedPropertyToNode","storage","__dataCompoundStorage","setupBindings","setupCompoundStorage","addNotifyListener","literals","createMethodEffect","sig","effectFn","static","_addPropertyEffect","context","_methodHost","marshalArgs","emptyArray","IDENT","NUMBER","SQUOTE_STRING","DQUOTE_STRING","STRING","ARGUMENT","ARGUMENTS","ARGUMENT_LIST","BINDING","OPEN_BRACKET","CLOSE_BRACKET","NEGATE","EXPRESSION","bindingRegex","literalFromParts","s","parseMethod","expression","parseArgs","argList","rawArg","fc","values","v","baseChanged","notifySplices","splices","splicesPath","indexSplices","notifySplice","addedCount","removed","object","upper","PropertyEffects","propertyEffectsBase","__dataClientsReady","__dataPendingClients","__dataToNotify","__dataHasPaths","__dataTemp","__dataClientsInitialized","__computeEffects","__reflectEffects","__notifyEffects","__propagateEffects","__observeEffects","__readOnly","__dataCounter","__templateInfo","hostStack","registerHost","effect","_createPropertyAccessor","idx","_hasPropertyEffect","shouldNotify","isPathNotification","prevProps","_shouldPropertyChange","__dataReady","_flushProperties","client","_readyClients","__enableOrFlushClients","clients","__dataEnabled","setReadOnly","_flushClients","currentProps","_propagatePropertyChanges","propertyEffects","nextTemplateInfo","to","from","items","ret","hadLength","pop","start","deleteCount","Math","floor","shift","unshift","propPath","protectedSetter","_setProperty","attr","instanceBinding","_parseTemplate","wasPreBound","__templateInfoLast","previousTemplateInfo","beginHosting","endHosting","nodes","childNodes","n","nextSibling","hostProps","propEffects","noted","nodeType","Node","TEXT_NODE","_parseBindings","origName","removeAttribute","text","lastIndex","customEvent","notifyEvent","colon","signature","stack","stackLen","microtask","nativeProperties","getOwnPropertyNames","saveAccessorValue","__dataProto","PropertyAccessors","a$","observedAttributes","__serializing","__dataInvalid","__dataInstanceProps","_initializeProperties","_initializeProtoProperties","attribute","hasAttribute","_deserializeValue","_serializeValue","Date","JSON","stringify","x","outValue","defineProperty","changed","_initializeInstanceProperties","ready","_propertiesChanged","AsyncInterface","microtaskCurrHandle","microtaskLastHandle","microtaskCallbacks","microtaskNodeContent","microtaskNode","createTextNode","MutationObserver","microtaskFlush","observe","characterData","cb","timeOut","delay","cancel","animationFrame","requestAnimationFrame","cancelAnimationFrame","idlePeriod","requestIdleCallback","handle","cancelIdleCallback","microTask","callback","templateExtensions","wrapTemplateExtension","replaceChild","attributes","findTemplateNode","parent","parentInfo","parentIndex","applyIdToMap","applyEventListener","events","_addMethodEventListenerToNode","applyTemplateContent","_templateInfo","createNodeEventHandler","handler","TemplateStamp","HTMLTemplateElement","decorate","importNode","__noInsertionPoint","hasInsertionPoint","_addEventListenerToNode","outerTemplateInfo","stripWhiteSpace","_parseTemplateContent","_parseTemplateNode","_parseTemplateNestedTemplate","_parseTemplateChildNodes","hasAttributes","_parseTemplateNodeAttributes","childInfo","infoIndex","createDocumentFragment","attrs","_parseTemplateNodeAttribute","nullTag","undefinedTag","symToStringTag","toStringTag","baseGetTag","freeSelf","freeGlobal","nativeObjectToString","getRawTag","isOwn","tag","unmasked","objectToString","getPrototype","overArg","func","transform","isObjectLike","require","_ponyfill","_ponyfill2","_interopRequireDefault","__esModule","webpackPolyfill","deprecate","paths","children","enumerable","symbolObservablePonyfill","_Symbol","getUndefinedStateErrorMessage","actionType","actionName","getUnexpectedStateShapeWarningMessage","inputState","unexpectedKeyCache","reducerKeys","argumentName","unexpectedKeys","filter","assertReducerShape","initialState","random","finalReducers","finalReducerKeys","shapeAssertionError","combination","warningMessage","hasChanged","nextState","_i","previousStateForKey","nextStateForKey","errorMessage","bindActionCreator","actionCreator","actionCreators","boundActionCreators","_extends","middlewares","_dispatch","chain","middlewareAPI","middleware","PolymerRedux","every","subscribers","Map","update","propertiesChanged","unbind","collect","what","which","actions","configurable","_reduxActions","originalAction","urlDoc","urlBase","QUERYPARAMS_ACTION","LittleqRoute","router","_removePage","_processPage","PARAMS","_routeMatches","_checkIfRouteMatches","ROUTER_ACTION","getRoutes","el","AsyncModule","Debouncer","_asyncModule","_callback","_timer","asyncModule","isActive","debouncer","setConfig","Landing","RegisterHtmlTemplate","val","trimmedVal","div","animations"],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 41a9fe0530d3faceaf40","window.JSCompiler_renameProperty = function(prop, obj) { return prop; }\n\n/** @namespace */\nlet Polymer;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/boot.js","import { createStore } from 'redux';\nimport PolymerRedux from './mixins/polymer-redux';\n\nconst reducers = {};\nconst initial = {};\nconst store = createStore((state = initial, action) => state);\nconst ReduxMixin = PolymerRedux(store);\n\nexport { reducers, store, ReduxMixin };\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@littleq/state-manager/index.js","import './boot.js';\n\nlet CSS_URL_RX = /(url\\()([^)]*)(\\))/g;\nlet ABS_URL = /(^\\/)|(^#)|(^[\\w-\\d]*:)/;\nlet workingURL;\nlet resolveDoc;\n/**\n * Resolves the given URL against the provided `baseUri'.\n *\n * @memberof Polymer.ResolveUrl\n * @param {string} url Input URL to resolve\n * @param {?string=} baseURI Base URI to resolve the URL against\n * @return {string} resolved URL\n */\nfunction resolveUrl(url, baseURI) {\n  if (url && ABS_URL.test(url)) {\n    return url;\n  }\n  // Lazy feature detection.\n  if (workingURL === undefined) {\n    workingURL = false;\n    try {\n      const u = new URL('b', 'http://a');\n      u.pathname = 'c%20d';\n      workingURL = (u.href === 'http://a/c%20d');\n    } catch (e) {\n      // silently fail\n    }\n  }\n  if (!baseURI) {\n    baseURI = document.baseURI || window.location.href;\n  }\n  if (workingURL) {\n    return (new URL(url, baseURI)).href;\n  }\n  // Fallback to creating an anchor into a disconnected document.\n  if (!resolveDoc) {\n    resolveDoc = document.implementation.createHTMLDocument('temp');\n    resolveDoc.base = resolveDoc.createElement('base');\n    resolveDoc.head.appendChild(resolveDoc.base);\n    resolveDoc.anchor = resolveDoc.createElement('a');\n    resolveDoc.body.appendChild(resolveDoc.anchor);\n  }\n  resolveDoc.base.href = baseURI;\n  resolveDoc.anchor.href = url;\n  return resolveDoc.anchor.href || url;\n\n}\n\n/**\n * Resolves any relative URL's in the given CSS text against the provided\n * `ownerDocument`'s `baseURI`.\n *\n * @memberof Polymer.ResolveUrl\n * @param {string} cssText CSS text to process\n * @param {string} baseURI Base URI to resolve the URL against\n * @return {string} Processed CSS text with resolved URL's\n */\nfunction resolveCss(cssText, baseURI) {\n  return cssText.replace(CSS_URL_RX, function(m, pre, url, post) {\n    return pre + '\\'' +\n      resolveUrl(url.replace(/[\"']/g, ''), baseURI) +\n      '\\'' + post;\n  });\n}\n\n/**\n * Returns a path from a given `url`. The path includes the trailing\n * `/` from the url.\n *\n * @memberof Polymer.ResolveUrl\n * @param {string} url Input URL to transform\n * @return {string} resolved path\n */\nfunction pathFromUrl(url) {\n  return url.substring(0, url.lastIndexOf('/') + 1);\n}\n\nexport { resolveCss };\nexport { resolveUrl };\nexport { pathFromUrl };\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/resolve-url.js","import './boot.js';\n\n// unique global id for deduping mixins.\nlet dedupeId = 0;\n\n/**\n * @constructor\n * @extends {Function}\n */\nfunction MixinFunction(){}\n/** @type {(WeakMap | undefined)} */\nMixinFunction.prototype.__mixinApplications;\n/** @type {(Object | undefined)} */\nMixinFunction.prototype.__mixinSet;\n\nexport const dedupingMixin = function(mixin) {\n  let mixinApplications = /** @type {!MixinFunction} */(mixin).__mixinApplications;\n  if (!mixinApplications) {\n    mixinApplications = new WeakMap();\n    /** @type {!MixinFunction} */(mixin).__mixinApplications = mixinApplications;\n  }\n  // maintain a unique id for each mixin\n  let mixinDedupeId = dedupeId++;\n  function dedupingMixin(base) {\n    let baseSet = /** @type {!MixinFunction} */(base).__mixinSet;\n    if (baseSet && baseSet[mixinDedupeId]) {\n      return base;\n    }\n    let map = mixinApplications;\n    let extended = map.get(base);\n    if (!extended) {\n      extended = /** @type {!Function} */(mixin)(base);\n      map.set(base, extended);\n    }\n    // copy inherited mixin set from the extended class, or the base class\n    // NOTE: we avoid use of Set here because some browser (IE11)\n    // cannot extend a base Set via the constructor.\n    let mixinSet = Object.create(/** @type {!MixinFunction} */(extended).__mixinSet || baseSet || null);\n    mixinSet[mixinDedupeId] = true;\n    /** @type {!MixinFunction} */(extended).__mixinSet = mixinSet;\n    return extended;\n  }\n\n  return dedupingMixin;\n};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/mixin.js","import createStore from './createStore';\nimport combineReducers from './combineReducers';\nimport bindActionCreators from './bindActionCreators';\nimport applyMiddleware from './applyMiddleware';\nimport compose from './compose';\nimport warning from './utils/warning';\n\n/*\n* This is a dummy function to check if the function name has been altered by minification.\n* If the function has been minified and NODE_ENV !== 'production', warn the user.\n*/\nfunction isCrushed() {}\n\nif (process.env.NODE_ENV !== 'production' && typeof isCrushed.name === 'string' && isCrushed.name !== 'isCrushed') {\n  warning('You are currently using minified code outside of NODE_ENV === \\'production\\'. ' + 'This means that you are running a slower development build of Redux. ' + 'You can use loose-envify (https://github.com/zertosh/loose-envify) for browserify ' + 'or DefinePlugin for webpack (http://stackoverflow.com/questions/30030031) ' + 'to ensure you have the correct code for your production build.');\n}\n\nexport { createStore, combineReducers, bindActionCreators, applyMiddleware, compose };\n\n\n// WEBPACK FOOTER //\n// ../node_modules/redux/es/index.js","import './boot.js';\n\nconst caseMap = {};\nconst DASH_TO_CAMEL = /-[a-z]/g;\nconst CAMEL_TO_DASH = /([A-Z])/g;\n\nexport function dashToCamelCase(dash) {\n  return caseMap[dash] || (\n    caseMap[dash] = dash.indexOf('-') < 0 ? dash : dash.replace(DASH_TO_CAMEL,\n      (m) => m[1].toUpperCase()\n    )\n  );\n}\n\nexport function camelToDashCase(camel) {\n  return caseMap[camel] || (\n    caseMap[camel] = camel.replace(CAMEL_TO_DASH, '-$1').toLowerCase()\n  );\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/case-map.js","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/global.js","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/global/window.js","import { ElementMixin } from './lib/mixins/element-mixin.js';\n\n/**\n * Base class that provides the core API for Polymer's meta-programming\n * features including template stamping, data-binding, attribute deserialization,\n * and property change observation.\n *\n * @customElement\n * @polymer\n * @memberof Polymer\n * @constructor\n * @implements {Polymer_ElementMixin}\n * @extends HTMLElement\n * @appliesMixin Polymer.ElementMixin\n * @summary Custom element base class that provides the core API for Polymer's\n *   key meta-programming features including template stamping, data-binding,\n *   attribute deserialization, and property change observation\n */\nconst Element = ElementMixin(HTMLElement);\nexport { Element };\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/polymer-element.js","import './boot.js';\nimport { pathFromUrl } from './resolve-url.js';\n\n/**\n * Legacy settings.\n * @namespace\n * @memberof Polymer\n */\nconst settings = undefined || {};\nexport const useShadow = !(window.ShadyDOM);\nexport const useNativeCSSProperties = Boolean(!window.ShadyCSS || window.ShadyCSS.nativeCss);\nexport const useNativeCustomElements = !(window.customElements.polyfillWrapFlushCallback);\nexport { settings as Settings };\n\n/**\n * Globally settable property that is automatically assigned to\n * `Polymer.ElementMixin` instances, useful for binding in templates to\n * make URL's relative to an application's root.  Defaults to the main\n * document URL, but can be overridden by users.  It may be useful to set\n * `Polymer.rootPath` to provide a stable application mount path when\n * using client side routing.\n *\n * @memberof Polymer\n */\nlet rootPath = undefined ||\n  pathFromUrl(document.baseURI || window.location.href);\n\nexport { rootPath };\n\nexport const setRootPath = function(path) {\n  rootPath = path;\n};\n\n/**\n * A global callback used to sanitize any value before inserting it into the DOM. The callback signature is:\n *\n *     Polymer = {\n *       sanitizeDOMValue: function(value, name, type, node) { ... }\n *     }\n *\n * Where:\n *\n * `value` is the value to sanitize.\n * `name` is the name of an attribute or property (for example, href).\n * `type` indicates where the value is being inserted: one of property, attribute, or text.\n * `node` is the node where the value is being inserted.\n *\n * @type {(function(*,string,string,Node):*)|undefined}\n * @memberof Polymer\n */\nlet sanitizeDOMValue = undefined;\n\nexport { sanitizeDOMValue };\n\nexport const setSanitizeDOMValue = function(newSanitizeDOMValue) {\n  sanitizeDOMValue = newSanitizeDOMValue;\n};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/settings.js","import './boot.js';\n\nexport function isPath(path) {\n  return path.indexOf('.') >= 0;\n}\n\nexport function root(path) {\n  let dotIndex = path.indexOf('.');\n  if (dotIndex === -1) {\n    return path;\n  }\n  return path.slice(0, dotIndex);\n}\n\nexport function isAncestor(base, path) {\n  //     base.startsWith(path + '.');\n  return base.indexOf(path + '.') === 0;\n}\n\nexport function isDescendant(base, path) {\n  //     path.startsWith(base + '.');\n  return path.indexOf(base + '.') === 0;\n}\n\nexport function translate(base, newBase, path) {\n  return newBase + path.slice(base.length);\n}\n\nexport function matches(base, path) {\n  return (base === path) ||\n         isAncestor(base, path) ||\n         isDescendant(base, path);\n}\n\nexport function normalize(path) {\n  if (Array.isArray(path)) {\n    let parts = [];\n    for (let i=0; i<path.length; i++) {\n      let args = path[i].toString().split('.');\n      for (let j=0; j<args.length; j++) {\n        parts.push(args[j]);\n      }\n    }\n    return parts.join('.');\n  } else {\n    return path;\n  }\n}\n\nexport function split(path) {\n  if (Array.isArray(path)) {\n    return normalize(path).split('.');\n  }\n  return path.toString().split('.');\n}\n\nexport function get(root, path, info) {\n  let prop = root;\n  let parts = split(path);\n  // Loop over path parts[0..n-1] and dereference\n  for (let i=0; i<parts.length; i++) {\n    if (!prop) {\n      return;\n    }\n    let part = parts[i];\n    prop = prop[part];\n  }\n  if (info) {\n    info.path = parts.join('.');\n  }\n  return prop;\n}\n\nexport function set(root, path, value) {\n  let prop = root;\n  let parts = split(path);\n  let last = parts[parts.length-1];\n  if (parts.length > 1) {\n    // Loop over path parts[0..n-2] and dereference\n    for (let i=0; i<parts.length-1; i++) {\n      let part = parts[i];\n      prop = prop[part];\n      if (!prop) {\n        return;\n      }\n    }\n    // Set value to object at end of path\n    prop[last] = value;\n  } else {\n    // Simple property set\n    prop[path] = value;\n  }\n  return parts.join('.');\n}\n\nexport const isDeep = isPath;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/path.js","/**\n * Expose `pathToRegexp`.\n */\nmodule.exports = pathToRegexp\nmodule.exports.parse = parse\nmodule.exports.compile = compile\nmodule.exports.tokensToFunction = tokensToFunction\nmodule.exports.tokensToRegExp = tokensToRegExp\n\n/**\n * Default configs.\n */\nvar DEFAULT_DELIMITER = '/'\nvar DEFAULT_DELIMITERS = './'\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\"]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined]\n  '(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?'\n].join('|'), 'g')\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = []\n  var key = 0\n  var index = 0\n  var path = ''\n  var defaultDelimiter = (options && options.delimiter) || DEFAULT_DELIMITER\n  var delimiters = (options && options.delimiters) || DEFAULT_DELIMITERS\n  var pathEscaped = false\n  var res\n\n  while ((res = PATH_REGEXP.exec(str)) !== null) {\n    var m = res[0]\n    var escaped = res[1]\n    var offset = res.index\n    path += str.slice(index, offset)\n    index = offset + m.length\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1]\n      pathEscaped = true\n      continue\n    }\n\n    var prev = ''\n    var next = str[index]\n    var name = res[2]\n    var capture = res[3]\n    var group = res[4]\n    var modifier = res[5]\n\n    if (!pathEscaped && path.length) {\n      var k = path.length - 1\n\n      if (delimiters.indexOf(path[k]) > -1) {\n        prev = path[k]\n        path = path.slice(0, k)\n      }\n    }\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path)\n      path = ''\n      pathEscaped = false\n    }\n\n    var partial = prev !== '' && next !== undefined && next !== prev\n    var repeat = modifier === '+' || modifier === '*'\n    var optional = modifier === '?' || modifier === '*'\n    var delimiter = prev || defaultDelimiter\n    var pattern = capture || group\n\n    tokens.push({\n      name: name || key++,\n      prefix: prev,\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      pattern: pattern ? escapeGroup(pattern) : '[^' + escapeString(delimiter) + ']+?'\n    })\n  }\n\n  // Push any remaining characters.\n  if (path || index < str.length) {\n    tokens.push(path + str.substr(index))\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length)\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$')\n    }\n  }\n\n  return function (data, options) {\n    var path = ''\n    var encode = (options && options.encode) || encodeURIComponent\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i]\n\n      if (typeof token === 'string') {\n        path += token\n        continue\n      }\n\n      var value = data ? data[token.name] : undefined\n      var segment\n\n      if (Array.isArray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but got array')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) continue\n\n          throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j])\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\"')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment\n        }\n\n        continue\n      }\n\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        segment = encode(String(value))\n\n        if (!matches[i].test(segment)) {\n          throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but got \"' + segment + '\"')\n        }\n\n        path += token.prefix + segment\n        continue\n      }\n\n      if (token.optional) {\n        // Prepend partial segment prefixes.\n        if (token.partial) path += token.prefix\n\n        continue\n      }\n\n      throw new TypeError('Expected \"' + token.name + '\" to be ' + (token.repeat ? 'an array' : 'a string'))\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$/()])/g, '\\\\$1')\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options && options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {Array=}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  if (!keys) return path\n\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g)\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        pattern: null\n      })\n    }\n  }\n\n  return path\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = []\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source)\n  }\n\n  return new RegExp('(?:' + parts.join('|') + ')', flags(options))\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}  tokens\n * @param  {Array=}  keys\n * @param  {Object=} options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  options = options || {}\n\n  var strict = options.strict\n  var end = options.end !== false\n  var delimiter = escapeString(options.delimiter || DEFAULT_DELIMITER)\n  var delimiters = options.delimiters || DEFAULT_DELIMITERS\n  var endsWith = [].concat(options.endsWith || []).map(escapeString).concat('$').join('|')\n  var route = ''\n  var isEndDelimited = false\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i]\n\n    if (typeof token === 'string') {\n      route += escapeString(token)\n      isEndDelimited = i === tokens.length - 1 && delimiters.indexOf(token[token.length - 1]) > -1\n    } else {\n      var prefix = escapeString(token.prefix)\n      var capture = token.repeat\n        ? '(?:' + token.pattern + ')(?:' + prefix + '(?:' + token.pattern + '))*'\n        : token.pattern\n\n      if (keys) keys.push(token)\n\n      if (token.optional) {\n        if (token.partial) {\n          route += prefix + '(' + capture + ')?'\n        } else {\n          route += '(?:' + prefix + '(' + capture + '))?'\n        }\n      } else {\n        route += prefix + '(' + capture + ')'\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += '(?:' + delimiter + ')?'\n\n    route += endsWith === '$' ? '$' : '(?=' + endsWith + ')'\n  } else {\n    if (!strict) route += '(?:' + delimiter + '(?=' + endsWith + '))?'\n    if (!isEndDelimited) route += '(?=' + delimiter + '|' + endsWith + ')'\n  }\n\n  return new RegExp('^' + route, flags(options))\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {Array=}                keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, keys)\n  }\n\n  if (Array.isArray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), keys, options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), keys, options)\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/path-to-regexp/index.js","import { ReduxMixin } from '@littleq/state-manager';\nimport { LOCATION_ACTION } from './lib/reducer';\nimport resolveUrl from './lib/resolve-url';\n\nexport default (superClass) => {\n  return class extends ReduxMixin(superClass) {\n    static get properties () {\n      return {\n        // location-mixin\n        path: {\n          type: String,\n          observer: '_pathChanged',\n          statePath: 'location.path'\n        },\n\n        query: {\n          type: String,\n          observer: '_queryChanged',\n          statePath: 'location.query'\n        },\n\n        urlSpaceRegex: {\n          type: String\n        },\n\n        hash: {\n          type: String,\n          statePath: 'location.hash'\n        },\n\n        dwellTime: {\n          type: Number\n        },\n\n        _urlSpaceRegExp: {\n          type: String,\n          computed: '_makeRegExp(urlSpaceRegex)'\n        },\n\n        _lastChangedAt: {\n          type: String\n        },\n\n        _initialized: {\n          type: Boolean\n        }\n      };\n    }\n\n    constructor () {\n      super();\n      this._boundHashChanged = this._hashChanged.bind(this);\n      this._boundUrlChanged = this._urlChanged.bind(this);\n      this._boundGlobalOnClick = this._globalOnClick.bind(this);\n    }\n\n    connectedCallback () {\n      if (super.disconnectedCallback) {\n        super.connectedCallback();\n      }\n      window.addEventListener('hashchange', this._boundHashChanged);\n      window.addEventListener('location-changed', this._boundUrlChanged);\n      window.addEventListener('popstate', this._boundUrlChanged);\n      document.body.addEventListener('click', this._boundGlobalOnClick, true);\n      this._lastChangedAt = window.performance.now() - (this.dwellTime - 200);\n      this._initialized = true;\n\n      // set initialize values\n      // this.path = window.decodeURIComponent(window.location.pathname);\n      // this.query = window.location.search.slice(1);\n      // this.hash = window.decodeURIComponent(window.location.hash.slice(1));\n      this.dwellTime = 2000;\n      this._initialized = false;\n      this._urlChanged();\n    }\n\n    disconnectedCallback () {\n      if (super.disconnectedCallback) {\n        super.disconnectedCallback();\n      }\n      window.removeEventListener('hashchange', this._boundHashChanged);\n      window.removeEventListener('location-changed', this._boundUrlChanged);\n      window.removeEventListener('popstate', this._boundUrlChanged);\n      document.body.removeEventListener('click', this._boundGlobalOnClick);\n      this._initialized = false;\n    }\n\n    _pathChanged (path) {}\n\n    _queryChanged (query) {}\n\n    _hashChanged () {\n      this.dispatch({\n        type: LOCATION_ACTION.HASH,\n        path: window.decodeURIComponent(window.location.hash.substring(1))\n      });\n      // this.hash = window.decodeURIComponent(window.location.hash.substring(1));\n    }\n\n    _urlChanged () {\n      // We want to extract all info out of the updated URL before we\n      // try to write anything back into it.\n      //\n      // i.e. without _dontUpdateUrl we'd overwrite the new path with the old\n      // one when we set this.hash. Likewise for query.\n      this._dontUpdateUrl = true;\n      this._hashChanged();\n\n      this.dispatch({\n        type: LOCATION_ACTION.PATH,\n        path: window.decodeURIComponent(window.location.pathname)\n      });\n\n      this.dispatch({\n        type: LOCATION_ACTION.QUERY,\n        query: window.location.search.substring(1)\n      });\n\n      // this.path =\n      // this.query =\n      this._dontUpdateUrl = false;\n      this._updateUrl();\n    }\n\n    _getUrl () {\n      var partiallyEncodedPath = window.encodeURI(this.path).replace(/\\#/g, '%23').replace(/\\?/g, '%3F'); // eslint-disable-line no-useless-escape\n      var partiallyEncodedQuery = '';\n      if (this.query) {\n        partiallyEncodedQuery = '?' + this.query.replace(/\\#/g, '%23'); // eslint-disable-line no-useless-escape\n      }\n      var partiallyEncodedHash = '';\n      if (this.hash) {\n        partiallyEncodedHash = '#' + window.encodeURI(this.hash);\n      }\n      return (partiallyEncodedPath + partiallyEncodedQuery + partiallyEncodedHash);\n    }\n\n    _updateUrl () {\n      if (this._dontUpdateUrl || !this._initialized) {\n        return;\n      }\n\n      if (this.path === window.decodeURIComponent(window.location.pathname) &&\n          this.query === window.location.search.substring(1) &&\n          this.hash === window.decodeURIComponent(window.location.hash.substring(1))) {\n        // Nothing to do, the current URL is a representation of our properties.\n        return;\n      }\n      var newUrl = this._getUrl();\n      // Need to use a full URL in case the containing page has a base URI.\n      var fullNewUrl = resolveUrl(newUrl, window.location.protocol + '//' + window.location.host).href;\n      var now = window.performance.now();\n      var shouldReplace = this._lastChangedAt + this.dwellTime > now;\n      this._lastChangedAt = now;\n      if (shouldReplace) {\n        window.history.replaceState({}, '', fullNewUrl);\n      } else {\n        window.history.pushState({}, '', fullNewUrl);\n      }\n      window.dispatchEvent(new window.CustomEvent('location-changed'));\n    }\n\n    /**\n     * A necessary evil so that links work as expected. Does its best to\n     * bail out early if possible.\n     *\n     * @param {MouseEvent} event .\n     */\n    _globalOnClick (event) {\n      // If another event handler has stopped this event then there's nothing\n      // for us to do. This can happen e.g. when there are multiple\n      // iron-location elements in a page.\n      if (event.defaultPrevented) {\n        return;\n      }\n      var href = this._getSameOriginLinkHref(event);\n      if (!href) {\n        return;\n      }\n      event.preventDefault();\n      // If the navigation is to the current page we shouldn't add a history\n      // entry or fire a change event.\n      if (href === window.location.href) {\n        return;\n      }\n\n      window.history.pushState({}, '', href);\n      window.dispatchEvent(new window.CustomEvent('location-changed'));\n    }\n\n    /**\n     * Returns the absolute URL of the link (if any) that this click event\n     * is clicking on, if we can and should override the resulting full\n     * page navigation. Returns null otherwise.\n     *\n     * @param {MouseEvent} event .\n     * @return {string?} .\n     */\n    _getSameOriginLinkHref (event) {\n      // We only care about left-clicks.\n      if (event.button !== 0) {\n        return null;\n      }\n      // We don't want modified clicks, where the intent is to open the page\n      // in a new tab.\n      if (event.metaKey || event.ctrlKey) {\n        return null;\n      }\n      var eventPath = event.composedPath();\n      var anchor = null;\n      for (var i = 0; i < eventPath.length; i++) {\n        var element = eventPath[i];\n        if (element.tagName === 'A' && element.href) {\n          anchor = element;\n          break;\n        }\n      }\n      // If there's no link there's nothing to do.\n      if (!anchor) {\n        return null;\n      }\n      // Target blank is a new tab, don't intercept.\n      if (anchor.target === '_blank') {\n        // capture link click\n        if (anchor.href && window.ga) {\n          window.ga('send', 'event', 'Link', 'Click', anchor.href, 1);\n        }\n        return null;\n      }\n      // If the link is for an existing parent frame, don't intercept.\n      if ((anchor.target === '_top' ||\n          anchor.target === '_parent') &&\n          window.top !== window) {\n        return null;\n      }\n      var href = anchor.href;\n      // It only makes sense for us to intercept same-origin navigations.\n      // pushState/replaceState don't work with cross-origin links.\n      var url;\n      if (document.baseURI != null) {\n        url = resolveUrl(href, /** @type {string} */(document.baseURI));\n      } else {\n        url = resolveUrl(href);\n      }\n      var origin;\n      // IE Polyfill\n      if (window.location.origin) {\n        origin = window.location.origin;\n      } else {\n        origin = window.location.protocol + '//' + window.location.host;\n      }\n      var urlOrigin;\n      if (url.origin) {\n        urlOrigin = url.origin;\n      } else {\n        urlOrigin = url.protocol + '//' + url.host;\n      }\n      if (urlOrigin !== origin) {\n        return null;\n      }\n      var normalizedHref = url.pathname + url.search + url.hash;\n      // pathname should start with '/', but may not if `new URL` is not supported\n      if (normalizedHref[0] !== '/') {\n        normalizedHref = '/' + normalizedHref;\n      }\n      // If we've been configured not to handle this url... don't handle it!\n      if (this._urlSpaceRegExp &&\n          !this._urlSpaceRegExp.test(normalizedHref)) {\n        return null;\n      }\n      // Need to use a full URL in case the containing page has a base URI.\n      var fullNormalizedHref = resolveUrl(normalizedHref, window.location.href).href;\n      return fullNormalizedHref;\n    }\n\n    _makeRegExp (urlSpaceRegex) {\n      return RegExp(urlSpaceRegex);\n    }\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@littleq/location-mixin/index.js","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/process/browser.js","import isPlainObject from 'lodash-es/isPlainObject';\nimport $$observable from 'symbol-observable';\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nexport var ActionTypes = {\n  INIT: '@@redux/INIT'\n\n  /**\n   * Creates a Redux store that holds the state tree.\n   * The only way to change the data in the store is to call `dispatch()` on it.\n   *\n   * There should only be a single store in your app. To specify how different\n   * parts of the state tree respond to actions, you may combine several reducers\n   * into a single reducer function by using `combineReducers`.\n   *\n   * @param {Function} reducer A function that returns the next state tree, given\n   * the current state tree and the action to handle.\n   *\n   * @param {any} [preloadedState] The initial state. You may optionally specify it\n   * to hydrate the state from the server in universal apps, or to restore a\n   * previously serialized user session.\n   * If you use `combineReducers` to produce the root reducer function, this must be\n   * an object with the same shape as `combineReducers` keys.\n   *\n   * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n   * to enhance the store with third-party capabilities such as middleware,\n   * time travel, persistence, etc. The only store enhancer that ships with Redux\n   * is `applyMiddleware()`.\n   *\n   * @returns {Store} A Redux store that lets you read the state, dispatch actions\n   * and subscribe to changes.\n   */\n};export default function createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error('Expected the enhancer to be a function.');\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error('Expected the reducer to be a function.');\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n  function getState() {\n    return currentState;\n  }\n\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('Expected listener to be a function.');\n    }\n\n    var isSubscribed = true;\n\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      isSubscribed = false;\n\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n    };\n  }\n\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error('Actions must be plain objects. ' + 'Use custom middleware for async actions.');\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error('Actions may not have an undefined \"type\" property. ' + 'Have you misspelled a constant?');\n    }\n\n    if (isDispatching) {\n      throw new Error('Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error('Expected the nextReducer to be a function.');\n    }\n\n    currentReducer = nextReducer;\n    dispatch({ type: ActionTypes.INIT });\n  }\n\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object') {\n          throw new TypeError('Expected the observer to be an object.');\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return { unsubscribe: unsubscribe };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  }\n\n  // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n  dispatch({ type: ActionTypes.INIT });\n\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/redux/es/createStore.js","import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/isPlainObject.js","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/_Symbol.js","/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nexport default function warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/redux/es/utils/warning.js","/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\n\nexport default function compose() {\n  for (var _len = arguments.length, funcs = Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(undefined, arguments));\n    };\n  });\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/redux/es/compose.js","import { reducers, store } from '@littleq/state-manager';\nimport { combineReducers } from 'redux';\n\nconst LOCATION_ACTION = {\n  PATH: 'LOCATION_UPDATE_PATH',\n  QUERY: 'LOCATION_UPDATE_QUERY',\n  HASH: 'LOCATION_UPDATE_HASH'\n};\n\nreducers.location = (location = {}, action) => {\n  switch (action.type) {\n    case LOCATION_ACTION.PATH:\n      return Object.assign({}, location, {\n        path: action.path\n      });\n    case LOCATION_ACTION.QUERY:\n      return Object.assign({}, location, {\n        query: action.query\n      });\n    case LOCATION_ACTION.HASH:\n      return Object.assign({}, location, {\n        hash: action.query\n      });\n    default:\n      return location;\n  }\n};\n\nstore.replaceReducer(combineReducers(reducers));\n\nexport { LOCATION_ACTION };\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@littleq/location-mixin/lib/reducer.js","import { ReduxMixin } from '@littleq/state-manager';\nimport { QUERYPARAMS_ACTION } from './lib/reducer';\n\nexport default (superClass) => {\n  return class extends ReduxMixin(superClass) {\n    static get properties () {\n      return {\n        // query params 'paramsString', 'paramsObject', '_dontReact'\n        paramsString: {\n          type: String,\n          observer: '_paramsStringChanged'\n        },\n\n        paramsObject: {\n          type: Object,\n          statePath: 'query.params'\n        },\n\n        _dontReact: {\n          type: Boolean\n        }\n      };\n    }\n\n    connectedCallback () {\n      if (super.connectedCallback) {\n        super.connectedCallback();\n      }\n\n      // initialize values\n      this.paramsObject = {};\n      this._dontReact = false;\n    }\n\n    _queryChanged (query) {\n      this.paramsString = query;\n    }\n\n    _paramsStringChanged () {\n      this._dontReact = true;\n      this.dispatch({\n        type: QUERYPARAMS_ACTION.UPDATE,\n        params: this._decodeParams(this.paramsString)\n      });\n\n      // this.paramsObject =\n      this._dontReact = false;\n    }\n\n    paramsObjectChanged () {\n      if (this._dontReact) {\n        return;\n      }\n      this.paramsString = this._encodeParams(this.paramsObject)\n        .replace(/%3F/g, '?').replace(/%2F/g, '/').replace(/'/g, '%27');\n    }\n\n    _encodeParams (params) {\n      var encodedParams = [];\n      for (var key in params) {\n        var value = params[key];\n        if (value === '') {\n          encodedParams.push(encodeURIComponent(key));\n        } else if (value) {\n          encodedParams.push(\n            encodeURIComponent(key) +\n            '=' +\n            encodeURIComponent(value.toString())\n          );\n        }\n      }\n      return encodedParams.join('&');\n    }\n\n    _decodeParams (paramString) {\n      var params = {};\n      // Work around a bug in decodeURIComponent where + is not\n      // converted to spaces:\n      paramString = (paramString || '').replace(/\\+/g, '%20');\n      var paramList = paramString.split('&');\n      for (var i = 0; i < paramList.length; i++) {\n        var param = paramList[i].split('=');\n        if (param[0]) {\n          params[decodeURIComponent(param[0])] =\n              decodeURIComponent(param[1] || '');\n        }\n      }\n      return params;\n    }\n  };\n};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@littleq/query-params-mixin/index.js","import '../index';\nimport './pages/landing-page';\n\n\n// WEBPACK FOOTER //\n// ./index.js","import './littleq-router';\nimport './littleq-route';\n\n\n\n// WEBPACK FOOTER //\n// ../index.js","import { Element } from '@polymer/polymer/polymer-element';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce';\nimport { timeOut } from '@polymer/polymer/lib/utils/async';\nimport { ReduxMixin } from '@littleq/state-manager';\nimport { customElements } from 'global/window';\nimport { ROUTER_ACTION } from './lib/reducer';\nimport getTrainsitionEvent from './lib/get-transition-event';\nimport pathToRegexp from 'path-to-regexp';\nimport LocationMixin from '@littleq/location-mixin';\nimport QueryParamsMixin from '@littleq/query-params-mixin';\n\nclass LittleqRouter extends ReduxMixin(QueryParamsMixin(LocationMixin(Element))) {\n  static get is () { return 'littleq-router'; }\n\n  static get template () {\n    return `\n    <style>\n      ::slotted(.animated) {\n        animation-duration: 0.2s;\n        animation-fill-mode: both;\n      }\n\n      ::slotted(*) > .animated {\n        animation-duration: 1s;\n        animation-fill-mode: both;\n      }\n\n      ::slotted(.fadeOut) {\n        animation-name: fadeOut;\n      }\n\n      ::slotted(*) > .fadeOut {\n        animation-name: fadeOut;\n      }\n\n      ::slotted(.fadeIn) {\n        animation-name: fadeIn;\n      }\n\n      ::slotted(*) > .fadeIn {\n        animation-name: fadeIn;\n      }\n    </style>\n    <main role=\"main\">\n      <slot name=\"page\"></slot>\n    </main>\n    `;\n  }\n\n  static get properties () {\n    return {\n      params: {\n        type: Object,\n        statePath: 'router.params'\n      },\n\n      currentRoute: {\n        type: String,\n        statePath: 'router.route'\n      }\n    };\n  }\n\n  constructor () {\n    super();\n    if (!document.querySelector('#littlq-router-animation-styles')) {\n      const style = document.createElement('style');\n      style.id = 'littlq-router-animation-styles';\n      style.innerHTML = `\n        @keyframes fadeOut {\n          from {\n            opacity: 1;\n          }\n\n          to {\n            opacity: 0;\n          }\n        }\n\n        @keyframes fadeIn {\n          from {\n            opacity: 0;\n          }\n\n          to {\n            opacity: 1;\n          }\n        }\n      `;\n      const head = document.getElementsByTagName('head')[0];\n      head.append(style);\n    }\n  }\n\n  static get observers () {\n    return [\n      '_checkPathRouteIfExists(path, currentRoute)'\n    ];\n  }\n\n  /**\n   * Check path and route if it matches. Because the matching happens in the routes\n   * themselves, it will wait for 200 milliseconds before showing the default, which\n   * is the not-found route.\n   *\n   * @param {any} path\n   * @param {any} route\n   * @memberof LittleqRouter\n   */\n\n  _checkPathRouteIfExists (path, route) {\n    this._debouncer = Debouncer.debounce(\n      this._debouncer,\n      timeOut.after(200),\n      () => {\n        const keys = [];\n        const re = pathToRegexp(route || '', keys);\n        const exec = re.exec(path);\n        if (!exec) {\n          this.dispatch({\n            type: ROUTER_ACTION.ROUTE,\n            route: 'not-found'\n          });\n        }\n      }\n    );\n  }\n\n  _removePageAfterTransition (oldPage, route, transition, fn) {\n    if (this._timeOut) {\n      clearTimeout(this._timeOut);\n    }\n\n    if (transition && fn) {\n      oldPage.removeEventListener(transition, fn);\n    }\n\n    if (this.contains(oldPage)) {\n      this.removeChild(oldPage);\n    }\n\n    this._showPage(route);\n  }\n\n  _removePageListenerFallback (oldPage, route, transition) {\n    this._timeOut = setTimeout(() => {\n      this._removePageAfterTransition(oldPage, route, transition);\n    }, 250);\n    const fn = () => {\n      this._removePageAfterTransition(oldPage, route, transition, fn);\n    };\n    oldPage.addEventListener(transition, fn);\n  }\n\n  _removePage (oldPage, route) {\n    const transition = getTrainsitionEvent(oldPage);\n    oldPage.classList.remove('fadeIn');\n    !transition ? this._removePageAfterTransition(oldPage, route) : this._removePageListenerFallback(oldPage, route, transition);\n    oldPage.classList.add('animated');\n    oldPage.classList.add('fadeOut');\n  }\n\n  _showPage (route) {\n    if (!this.querySelector('[slot=\"page\"]')) {\n      const page = document.createElement(route.page);\n      page.setAttribute('slot', 'page');\n      page.classList.add('animated');\n      page.classList.add('fadeIn');\n      this.append(page);\n    }\n  }\n}\n\nif (!customElements.get(LittleqRouter.is)) {\n  customElements.define(LittleqRouter.is, LittleqRouter);\n} else {\n  console.warn(`${LittleqRouter.is} is already defined`);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../littleq-router.js","import '../utils/boot.js';\nimport { rootPath as rootPath$0 } from '../utils/settings.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport * as caseMap$0 from '../utils/case-map.js';\nimport { camelToDashCase } from '../utils/case-map.js';\nimport { cssFromModuleImports, cssFromTemplate } from '../utils/style-gather.js';\nimport { resolveUrl as resolveUrl$0 } from '../utils/resolve-url.js';\nimport { DomModule } from '../elements/dom-module.js';\nimport { PropertyEffects } from './property-effects.js';\n\nexport const ElementMixin = dedupingMixin(base => {\n\n  /**\n   * @constructor\n   * @extends {base}\n   * @implements {Polymer_PropertyEffects}\n   */\n  const polymerElementBase = PropertyEffects(base);\n\n  let caseMap = caseMap$0;\n\n  /**\n   * Returns the `properties` object specifically on `klass`. Use for:\n   * (1) super chain mixes togther to make `propertiesForClass` which is\n   * then used to make `observedAttributes`.\n   * (2) properties effects and observers are created from it at `finalize` time.\n   *\n   * @param {HTMLElement} klass Element class\n   * @return {Object} Object containing own properties for this class\n   * @private\n   */\n  function ownPropertiesForClass(klass) {\n    if (!klass.hasOwnProperty(\n      JSCompiler_renameProperty('__ownProperties', klass))) {\n      klass.__ownProperties =\n        klass.hasOwnProperty(JSCompiler_renameProperty('properties', klass)) ?\n        /** @type PolymerElementConstructor */ (klass).properties : {};\n    }\n    return klass.__ownProperties;\n  }\n\n  /**\n   * Returns the `observers` array specifically on `klass`. Use for\n   * setting up observers.\n   *\n   * @param {HTMLElement} klass Element class\n   * @return {Array} Array containing own observers for this class\n   * @private\n   */\n  function ownObserversForClass(klass) {\n    if (!klass.hasOwnProperty(\n      JSCompiler_renameProperty('__ownObservers', klass))) {\n      klass.__ownObservers =\n        klass.hasOwnProperty(JSCompiler_renameProperty('observers', klass)) ?\n        /** @type PolymerElementConstructor */ (klass).observers : [];\n    }\n    return klass.__ownObservers;\n  }\n\n  /**\n   * Mixes `props` into `flattenedProps` but upgrades shorthand type\n   * syntax to { type: Type}.\n   *\n   * @param {Object} flattenedProps Bag to collect flattened properties into\n   * @param {Object} props Bag of properties to add to `flattenedProps`\n   * @return {Object} The input `flattenedProps` bag\n   * @private\n   */\n  function flattenProperties(flattenedProps, props) {\n    for (let p in props) {\n      let o = props[p];\n      if (typeof o == 'function') {\n        o = { type: o };\n      }\n      flattenedProps[p] = o;\n    }\n    return flattenedProps;\n  }\n\n  /**\n   * Returns a flattened list of properties mixed together from the chain of all\n   * constructor's `config.properties`. This list is used to create\n   * (1) observedAttributes,\n   * (2) class property default values\n   *\n   * @param {PolymerElementConstructor} klass Element class\n   * @return {PolymerElementProperties} Flattened properties for this class\n   * @suppress {missingProperties} class.prototype is not a property for some reason?\n   * @private\n   */\n  function propertiesForClass(klass) {\n    if (!klass.hasOwnProperty(\n      JSCompiler_renameProperty('__classProperties', klass))) {\n      klass.__classProperties =\n      flattenProperties({}, ownPropertiesForClass(klass));\n      let superCtor = Object.getPrototypeOf(klass.prototype).constructor;\n      if (superCtor.prototype instanceof PolymerElement) {\n        klass.__classProperties = Object.assign(\n          Object.create(propertiesForClass(/** @type PolymerElementConstructor */(superCtor))),\n          klass.__classProperties);\n      }\n    }\n    return klass.__classProperties;\n  }\n\n  /**\n   * Returns a list of properties with default values.\n   * This list is created as an optimization since it is a subset of\n   * the list returned from `propertiesForClass`.\n   * This list is used in `_initializeProperties` to set property defaults.\n   *\n   * @param {PolymerElementConstructor} klass Element class\n   * @return {PolymerElementProperties} Flattened properties for this class\n   *   that have default values\n   * @private\n   */\n  function propertyDefaultsForClass(klass) {\n    if (!klass.hasOwnProperty(\n      JSCompiler_renameProperty('__classPropertyDefaults', klass))) {\n      klass.__classPropertyDefaults = null;\n      let props = propertiesForClass(klass);\n      for (let p in props) {\n        let info = props[p];\n        if ('value' in info) {\n          klass.__classPropertyDefaults = klass.__classPropertyDefaults || {};\n          klass.__classPropertyDefaults[p] = info;\n        }\n      }\n    }\n    return klass.__classPropertyDefaults;\n  }\n\n  /**\n   * Returns true if a `klass` has finalized. Called in `ElementClass.finalize()`\n   * @param {PolymerElementConstructor} klass Element class\n   * @return {boolean} True if all metaprogramming for this class has been\n   *   completed\n   * @private\n   */\n  function hasClassFinalized(klass) {\n    return klass.hasOwnProperty(JSCompiler_renameProperty('__finalized', klass));\n  }\n\n  /**\n   * Called by `ElementClass.finalize()`. Ensures this `klass` and\n   * *all superclasses* are finalized by traversing the prototype chain\n   * and calling `klass.finalize()`.\n   *\n   * @param {PolymerElementConstructor} klass Element class\n   * @private\n   */\n  function finalizeClassAndSuper(klass) {\n    let proto = /** @type PolymerElementConstructor */ (klass).prototype;\n    let superCtor = Object.getPrototypeOf(proto).constructor;\n    if (superCtor.prototype instanceof PolymerElement) {\n      superCtor.finalize();\n    }\n    finalizeClass(klass);\n  }\n\n  /**\n   * Configures a `klass` based on a staic `klass.config` object and\n   * a `template`. This includes creating accessors and effects\n   * for properties in `config` and the `template` as well as preparing the\n   * `template` for stamping.\n   *\n   * @param {PolymerElementConstructor} klass Element class\n   * @private\n   */\n  function finalizeClass(klass) {\n    klass.__finalized = true;\n    let proto = /** @type PolymerElementConstructor */ (klass).prototype;\n    if (klass.hasOwnProperty(\n      JSCompiler_renameProperty('is', klass)) && klass.is) {\n      register(proto);\n    }\n    let props = ownPropertiesForClass(klass);\n    if (props) {\n      finalizeProperties(proto, props);\n    }\n    let observers = ownObserversForClass(klass);\n    if (observers) {\n      finalizeObservers(proto, observers, props);\n    }\n    // note: create \"working\" template that is finalized at instance time\n    let template = /** @type PolymerElementConstructor */ (klass).template;\n    if (template) {\n      if (typeof template === 'string') {\n        let t = document.createElement('template');\n        t.innerHTML = template;\n        template = t;\n      } else {\n        template = template.cloneNode(true);\n      }\n      proto._template = template;\n    }\n  }\n\n  /**\n   * Configures a `proto` based on a `properties` object.\n   * Leverages `PropertyEffects` to create property accessors and effects\n   * supporting, observers, reflecting to attributes, change notification,\n   * computed properties, and read only properties.\n   * @param {PolymerElement} proto Element class prototype to add accessors\n   *    and effects to\n   * @param {Object} properties Flattened bag of property descriptors for\n   *    this class\n   * @private\n   */\n  function finalizeProperties(proto, properties) {\n    for (let p in properties) {\n      createPropertyFromConfig(proto, p, properties[p], properties);\n    }\n  }\n\n  /**\n   * Configures a `proto` based on a `observers` array.\n   * Leverages `PropertyEffects` to create observers.\n   * @param {PolymerElement} proto Element class prototype to add accessors\n   *   and effects to\n   * @param {Object} observers Flattened array of observer descriptors for\n   *   this class\n   * @param {Object} dynamicFns Object containing keys for any properties\n   *   that are functions and should trigger the effect when the function\n   *   reference is changed\n   * @private\n   */\n  function finalizeObservers(proto, observers, dynamicFns) {\n    for (let i=0; i < observers.length; i++) {\n      proto._createMethodObserver(observers[i], dynamicFns);\n    }\n  }\n\n  /**\n   * Creates effects for a property.\n   *\n   * Note, once a property has been set to\n   * `readOnly`, `computed`, `reflectToAttribute`, or `notify`\n   * these values may not be changed. For example, a subclass cannot\n   * alter these settings. However, additional `observers` may be added\n   * by subclasses.\n   *\n   * The info object should may contain property metadata as follows:\n   *\n   * * `type`: {function} type to which an attribute matching the property\n   * is deserialized. Note the property is camel-cased from a dash-cased\n   * attribute. For example, 'foo-bar' attribute is dersialized to a\n   * property named 'fooBar'.\n   *\n   * * `readOnly`: {boolean} creates a readOnly property and\n   * makes a private setter for the private of the form '_setFoo' for a\n   * property 'foo',\n   *\n   * * `computed`: {string} creates a computed property. A computed property\n   * also automatically is set to `readOnly: true`. The value is calculated\n   * by running a method and arguments parsed from the given string. For\n   * example 'compute(foo)' will compute a given property when the\n   * 'foo' property changes by executing the 'compute' method. This method\n   * must return the computed value.\n   *\n   * * `reflectToAttriute`: {boolean} If true, the property value is reflected\n   * to an attribute of the same name. Note, the attribute is dash-cased\n   * so a property named 'fooBar' is reflected as 'foo-bar'.\n   *\n   * * `notify`: {boolean} sends a non-bubbling notification event when\n   * the property changes. For example, a property named 'foo' sends an\n   * event named 'foo-changed' with `event.detail` set to the value of\n   * the property.\n   *\n   * * observer: {string} name of a method that runs when the property\n   * changes. The arguments of the method are (value, previousValue).\n   *\n   * Note: Users may want control over modifying property\n   * effects via subclassing. For example, a user might want to make a\n   * reflectToAttribute property not do so in a subclass. We've chosen to\n   * disable this because it leads to additional complication.\n   * For example, a readOnly effect generates a special setter. If a subclass\n   * disables the effect, the setter would fail unexpectedly.\n   * Based on feedback, we may want to try to make effects more malleable\n   * and/or provide an advanced api for manipulating them.\n   * Also consider adding warnings when an effect cannot be changed.\n   *\n   * @param {PolymerElement} proto Element class prototype to add accessors\n   *   and effects to\n   * @param {string} name Name of the property.\n   * @param {Object} info Info object from which to create property effects.\n   * Supported keys:\n   * @param {Object} allProps Flattened map of all properties defined in this\n   *   element (including inherited properties)\n   * @private\n   */\n  function createPropertyFromConfig(proto, name, info, allProps) {\n    // computed forces readOnly...\n    if (info.computed) {\n      info.readOnly = true;\n    }\n    // Note, since all computed properties are readOnly, this prevents\n    // adding additional computed property effects (which leads to a confusing\n    // setup where multiple triggers for setting a property)\n    // While we do have `hasComputedEffect` this is set on the property's\n    // dependencies rather than itself.\n    if (info.computed  && !proto._hasReadOnlyEffect(name)) {\n      proto._createComputedProperty(name, info.computed, allProps);\n    }\n    if (info.readOnly && !proto._hasReadOnlyEffect(name)) {\n      proto._createReadOnlyProperty(name, !info.computed);\n    }\n    if (info.reflectToAttribute && !proto._hasReflectEffect(name)) {\n      proto._createReflectedProperty(name);\n    }\n    if (info.notify && !proto._hasNotifyEffect(name)) {\n      proto._createNotifyingProperty(name);\n    }\n    // always add observer\n    if (info.observer) {\n      proto._createPropertyObserver(name, info.observer, allProps[info.observer]);\n    }\n  }\n\n  /**\n   * Configures an element `proto` to function with a given `template`.\n   * The element name `is` and extends `ext` must be specified for ShadyCSS\n   * style scoping.\n   *\n   * @param {PolymerElement} proto Element class prototype to add accessors\n   *   and effects to\n   * @param {!HTMLTemplateElement} template Template to process and bind\n   * @param {string} baseURI URL against which to resolve urls in\n   *   style element cssText\n   * @param {string} is Tag name (or type extension name) for this element\n   * @param {string=} ext For type extensions, the tag name that was extended\n   * @private\n   */\n  function finalizeTemplate(proto, template, baseURI, is, ext) {\n    // support `include=\"module-name\"`\n    let cssText =\n      cssFromModuleImports(is) +\n      cssFromTemplate(template, baseURI);\n    if (cssText) {\n      let style = document.createElement('style');\n      style.textContent = cssText;\n      template.content.insertBefore(style, template.content.firstChild);\n    }\n    if (window.ShadyCSS) {\n      window.ShadyCSS.prepareTemplate(template, is, ext);\n    }\n    proto._bindTemplate(template);\n  }\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @unrestricted\n   * @implements {Polymer_ElementMixin}\n   */\n  class PolymerElement extends polymerElementBase {\n\n    /**\n     * Standard Custom Elements V1 API.  The default implementation returns\n     * a list of dash-cased attributes based on a flattening of all properties\n     * declared in `static get properties()` for this element and any\n     * superclasses.\n     *\n     * @return {Array} Observed attribute list\n     */\n    static get observedAttributes() {\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('__observedAttributes', this))) {\n        let list = [];\n        let properties = propertiesForClass(this);\n        for (let prop in properties) {\n          list.push(camelToDashCase(prop));\n        }\n        this.__observedAttributes = list;\n      }\n      return this.__observedAttributes;\n    }\n\n    /**\n     * Called automatically when the first element instance is created to\n     * ensure that class finalization work has been completed.\n     * May be called by users to eagerly perform class finalization work\n     * prior to the creation of the first element instance.\n     *\n     * Class finalization work generally includes meta-programming such as\n     * creating property accessors and any property effect metadata needed for\n     * the features used.\n     *\n     * @public\n     */\n    static finalize() {\n      if (!hasClassFinalized(this)) {\n        finalizeClassAndSuper(this);\n      }\n    }\n\n    /**\n     * Returns the template that will be stamped into this element's shadow root.\n     *\n     * If a `static get is()` getter is defined, the default implementation\n     * will return the first `<template>` in a `dom-module` whose `id`\n     * matches this element's `is`.\n     *\n     * Users may override this getter to return an arbitrary template\n     * (in which case the `is` getter is unnecessary). The template returned\n     * may be either an `HTMLTemplateElement` or a string that will be\n     * automatically parsed into a template.\n     *\n     * Note that when subclassing, if the super class overrode the default\n     * implementation and the subclass would like to provide an alternate\n     * template via a `dom-module`, it should override this getter and\n     * return `Polymer.DomModule.import(this.is, 'template')`.\n     *\n     * If a subclass would like to modify the super class template, it should\n     * clone it rather than modify it in place.  If the getter does expensive\n     * work such as cloning/modifying a template, it should memoize the\n     * template for maximum performance:\n     *\n     *   let memoizedTemplate;\n     *   class MySubClass extends MySuperClass {\n     *     static get template() {\n     *       if (!memoizedTemplate) {\n     *         memoizedTemplate = super.template.cloneNode(true);\n     *         let subContent = document.createElement('div');\n     *         subContent.textContent = 'This came from MySubClass';\n     *         memoizedTemplate.content.appendChild(subContent);\n     *       }\n     *       return memoizedTemplate;\n     *     }\n     *   }\n     *\n     * @return {HTMLTemplateElement|string} Template to be stamped\n     */\n    static get template() {\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('_template', this))) {\n        this._template = DomModule && DomModule.import(\n          /** @type PolymerElementConstructor*/ (this).is, 'template') ||\n          // note: implemented so a subclass can retrieve the super\n          // template; call the super impl this way so that `this` points\n          // to the superclass.\n          Object.getPrototypeOf(/** @type PolymerElementConstructor*/ (this).prototype).constructor.template;\n      }\n      return this._template;\n    }\n\n    /**\n     * Path matching the url from which the element was imported.\n     * This path is used to resolve url's in template style cssText.\n     * The `importPath` property is also set on element instances and can be\n     * used to create bindings relative to the import path.\n     * Defaults to the path matching the url containing a `dom-module` element\n     * matching this element's static `is` property.\n     * Note, this path should contain a trailing `/`.\n     *\n     * @return {string} The import path for this element class\n     */\n    static get importPath() {\n      if (!this.hasOwnProperty(JSCompiler_renameProperty('_importPath', this))) {\n          const module = DomModule && DomModule.import(/** @type PolymerElementConstructor */ (this).is);\n          this._importPath = module ? module.assetpath : '' ||\n          Object.getPrototypeOf(/** @type PolymerElementConstructor*/ (this).prototype).constructor.importPath;\n      }\n      return this._importPath;\n    }\n\n    constructor() {\n      super();\n      /** @type {HTMLTemplateElement} */\n      this._template;\n      /** @type {string} */\n      this._importPath;\n      /** @type {string} */\n      this.rootPath;\n      /** @type {string} */\n      this.importPath;\n      /** @type {StampedTemplate | HTMLElement | ShadowRoot} */\n      this.root;\n      /** @type {!Object<string, !Node>} */\n      this.$;\n    }\n\n    /**\n     * Overrides the default `Polymer.PropertyAccessors` to ensure class\n     * metaprogramming related to property accessors and effects has\n     * completed (calls `finalize`).\n     *\n     * It also initializes any property defaults provided via `value` in\n     * `properties` metadata.\n     *\n     * @override\n     * @suppress {invalidCasts}\n     */\n    _initializeProperties() {\n      instanceCount++;\n      this.constructor.finalize();\n      const importPath = this.constructor.importPath;\n      // note: finalize template when we have access to `localName` to\n      // avoid dependence on `is` for polyfilling styling.\n      if (this._template && !this._template.__polymerFinalized) {\n        this._template.__polymerFinalized = true;\n        const baseURI =\n          importPath ? resolveUrl$0(importPath) : '';\n        finalizeTemplate(/** @type {!PolymerElement} */(this.__proto__), this._template, baseURI,\n          /**@type {!HTMLElement}*/(this).localName);\n      }\n      super._initializeProperties();\n      // set path defaults\n      this.rootPath = rootPath$0;\n      this.importPath = importPath;\n      // apply property defaults...\n      let p$ = propertyDefaultsForClass(this.constructor);\n      if (!p$) {\n        return;\n      }\n      for (let p in p$) {\n        let info = p$[p];\n        // Don't set default value if there is already an own property, which\n        // happens when a `properties` property with default but no effects had\n        // a property set (e.g. bound) by its host before upgrade\n        if (!this.hasOwnProperty(p)) {\n          let value = typeof info.value == 'function' ?\n            info.value.call(this) :\n            info.value;\n          // Set via `_setProperty` if there is an accessor, to enable\n          // initializing readOnly property defaults\n          if (this._hasAccessor(p)) {\n            this._setPendingProperty(p, value, true);\n          } else {\n            this[p] = value;\n          }\n        }\n      }\n    }\n\n    /**\n     * Provides a default implementation of the standard Custom Elements\n     * `connectedCallback`.\n     *\n     * The default implementation enables the property effects system and\n     * flushes any pending properties, and updates shimmed CSS properties\n     * when using the ShadyCSS scoping/custom properties polyfill.\n     *\n     * @suppress {invalidCasts}\n     */\n    connectedCallback() {\n      if (window.ShadyCSS && this._template) {\n        window.ShadyCSS.styleElement(/** @type {!HTMLElement} */(this));\n      }\n      this._enableProperties();\n    }\n\n    /**\n     * Provides a default implementation of the standard Custom Elements\n     * `disconnectedCallback`.\n     */\n    disconnectedCallback() {}\n\n    /**\n     * Stamps the element template.\n     *\n     * @override\n     */\n    ready() {\n      if (this._template) {\n        this.root = this._stampTemplate(this._template);\n        this.$ = this.root.$;\n      }\n      super.ready();\n    }\n\n    /**\n     * Implements `PropertyEffects`'s `_readyClients` call. Attaches\n     * element dom by calling `_attachDom` with the dom stamped from the\n     * element's template via `_stampTemplate`. Note that this allows\n     * client dom to be attached to the element prior to any observers\n     * running.\n     *\n     * @override\n     */\n    _readyClients() {\n      if (this._template) {\n        this.root = this._attachDom(/** @type {StampedTemplate} */(this.root));\n      }\n      // The super._readyClients here sets the clients initialized flag.\n      // We must wait to do this until after client dom is created/attached\n      // so that this flag can be checked to prevent notifications fired\n      // during this process from being handled before clients are ready.\n      super._readyClients();\n    }\n\n\n    /**\n     * Attaches an element's stamped dom to itself. By default,\n     * this method creates a `shadowRoot` and adds the dom to it.\n     * However, this method may be overridden to allow an element\n     * to put its dom in another location.\n     *\n     * @throws {Error}\n     * @suppress {missingReturn}\n     * @param {StampedTemplate} dom to attach to the element.\n     * @return {ShadowRoot} node to which the dom has been attached.\n     */\n    _attachDom(dom) {\n      if (this.attachShadow) {\n        if (dom) {\n          if (!this.shadowRoot) {\n            this.attachShadow({mode: 'open'});\n          }\n          this.shadowRoot.appendChild(dom);\n          return this.shadowRoot;\n        }\n        return null;\n      } else {\n        throw new Error('ShadowDOM not available. ' +\n          // TODO(sorvell): move to compile-time conditional when supported\n        'Polymer.Element can create dom as children instead of in ' +\n        'ShadowDOM by setting `this.root = this;\\` before \\`ready\\`.');\n      }\n    }\n\n    /**\n     * Provides a default implementation of the standard Custom Elements\n     * `attributeChangedCallback`.\n     *\n     * By default, attributes declared in `properties` metadata are\n     * deserialized using their `type` information to properties of the\n     * same name.  \"Dash-cased\" attributes are deserialzed to \"camelCase\"\n     * properties.\n     *\n     * @param {string} name Name of attribute.\n     * @param {?string} old Old value of attribute.\n     * @param {?string} value Current value of attribute.\n     * @override\n     */\n    attributeChangedCallback(name, old, value) {\n      if (old !== value) {\n        let property = caseMap.dashToCamelCase(name);\n        let type = propertiesForClass(this.constructor)[property].type;\n        if (!this._hasReadOnlyEffect(property)) {\n          this._attributeToProperty(name, value, type);\n        }\n      }\n    }\n\n    /**\n     * When using the ShadyCSS scoping and custom property shim, causes all\n     * shimmed styles in this element (and its subtree) to be updated\n     * based on current custom property values.\n     *\n     * The optional parameter overrides inline custom property styles with an\n     * object of properties where the keys are CSS properties, and the values\n     * are strings.\n     *\n     * Example: `this.updateStyles({'--color': 'blue'})`\n     *\n     * These properties are retained unless a value of `null` is set.\n     *\n     * @param {Object=} properties Bag of custom property key/values to\n     *   apply to this element.\n     * @suppress {invalidCasts}\n     */\n    updateStyles(properties) {\n      if (window.ShadyCSS) {\n        window.ShadyCSS.styleSubtree(/** @type {!HTMLElement} */(this), properties);\n      }\n    }\n\n    /**\n     * Rewrites a given URL relative to a base URL. The base URL defaults to\n     * the original location of the document containing the `dom-module` for\n     * this element. This method will return the same URL before and after\n     * bundling.\n     *\n     * @param {string} url URL to resolve.\n     * @param {string=} base Optional base URL to resolve against, defaults\n     * to the element's `importPath`\n     * @return {string} Rewritten URL relative to base\n     */\n    resolveUrl(url, base) {\n      if (!base && this.importPath) {\n        base = resolveUrl$0(this.importPath);\n      }\n      return resolveUrl$0(url, base);\n    }\n\n    /**\n     * Overrides `PropertyAccessors` to add map of dynamic functions on\n     * template info, for consumption by `PropertyEffects` template binding\n     * code. This map determines which method templates should have accessors\n     * created for them.\n     *\n     * @override\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _parseTemplateContent(template, templateInfo, nodeInfo) {\n      templateInfo.dynamicFns = templateInfo.dynamicFns || propertiesForClass(this);\n      return super._parseTemplateContent(template, templateInfo, nodeInfo);\n    }\n\n  }\n\n  return PolymerElement;\n});\n\nexport let instanceCount = 0;\nexport const registrations = [];\n\nexport function _regLog(prototype) {\n  console.log('[' + prototype.is + ']: registered');\n}\n\nexport function register(prototype) {\n  registrations.push(prototype);\n  undefined && _regLog(prototype);\n}\n\nexport function dumpRegistrations() {\n  registrations.forEach(_regLog);\n}\n\nexport const updateStyles = function(props) {\n  if (window.ShadyCSS) {\n    window.ShadyCSS.styleDocument(props);\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/mixins/element-mixin.js","import { resolveCss } from './resolve-url.js';\n\nconst MODULE_STYLE_LINK_SELECTOR = 'link[rel=import][type~=css]';\nconst INCLUDE_ATTR = 'include';\n\nfunction importModule(moduleId) {\n  const /** Polymer.DomModule */ PolymerDomModule = customElements.get('dom-module');\n  if (!PolymerDomModule) {\n    return null;\n  }\n  return PolymerDomModule.import(moduleId);\n}\n\n/** @typedef {{assetpath: string}} */\nlet templateWithAssetPath; // eslint-disable-line no-unused-vars\n\nexport function cssFromModules(moduleIds) {\n  let modules = moduleIds.trim().split(/\\s+/);\n  let cssText = '';\n  for (let i=0; i < modules.length; i++) {\n    cssText += cssFromModule(modules[i]);\n  }\n  return cssText;\n}\n\nexport function cssFromModule(moduleId) {\n  let m = importModule(moduleId);\n  if (m && m._cssText === undefined) {\n    // module imports: <link rel=\"import\" type=\"css\">\n    let cssText = _cssFromModuleImports(m);\n    // include css from the first template in the module\n    let t = m.querySelector('template');\n    if (t) {\n      cssText += cssFromTemplate(t, /** @type {templateWithAssetPath} */(m).assetpath);\n    }\n    m._cssText = cssText || null;\n  }\n  if (!m) {\n    console.warn('Could not find style data in module named', moduleId);\n  }\n  return m && m._cssText || '';\n}\n\nexport function cssFromTemplate(template, baseURI) {\n  let cssText = '';\n  // if element is a template, get content from its .content\n  let e$ = template.content.querySelectorAll('style');\n  for (let i=0; i < e$.length; i++) {\n    let e = e$[i];\n    // support style sharing by allowing styles to \"include\"\n    // other dom-modules that contain styling\n    let include = e.getAttribute(INCLUDE_ATTR);\n    if (include) {\n      cssText += cssFromModules(include);\n    }\n    e.parentNode.removeChild(e);\n    cssText += baseURI ?\n      resolveCss(e.textContent, baseURI) : e.textContent;\n  }\n  return cssText;\n}\n\nexport function cssFromModuleImports(moduleId) {\n  let m = importModule(moduleId);\n  return m ? _cssFromModuleImports(m) : '';\n}\n\nexport function _cssFromModuleImports(module) {\n  let cssText = '';\n  let p$ = module.querySelectorAll(MODULE_STYLE_LINK_SELECTOR);\n  for (let i=0; i < p$.length; i++) {\n    let p = p$[i];\n    if (p.import) {\n      let importDoc = p.import;\n      // NOTE: polyfill affordance.\n      // under the HTMLImports polyfill, there will be no 'body',\n      // but the import pseudo-doc can be used directly.\n      let container = importDoc.body ? importDoc.body : importDoc;\n      cssText +=\n        resolveCss(container.textContent,\n          importDoc.baseURI);\n    }\n  }\n  return cssText;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/style-gather.js","import '../utils/boot.js';\nimport { resolveUrl, pathFromUrl } from '../utils/resolve-url.js';\n\nlet modules = {};\nlet lcModules = {};\nfunction findModule(id) {\n  return modules[id] || lcModules[id.toLowerCase()];\n}\n\nfunction styleOutsideTemplateCheck(inst) {\n  if (inst.querySelector('style')) {\n    console.warn('dom-module %s has style outside template', inst.id);\n  }\n}\n\n/**\n * The `dom-module` element registers the dom it contains to the name given\n * by the module's id attribute. It provides a unified database of dom\n * accessible via its static `import` API.\n *\n * A key use case of `dom-module` is for providing custom element `<template>`s\n * via HTML imports that are parsed by the native HTML parser, that can be\n * relocated during a bundling pass and still looked up by `id`.\n *\n * Example:\n *\n *     <dom-module id=\"foo\">\n *       <img src=\"stuff.png\">\n *     </dom-module>\n *\n * Then in code in some other location that cannot access the dom-module above\n *\n *     let img = customElements.get('dom-module').import('foo', 'img');\n *\n * @customElement\n * @extends HTMLElement\n * @memberof Polymer\n * @summary Custom element that provides a registry of relocatable DOM content\n *   by `id` that is agnostic to bundling.\n * @unrestricted\n */\nclass DomModule extends HTMLElement {\n\n  static get observedAttributes() { return ['id']; }\n\n  /**\n   * Retrieves the element specified by the css `selector` in the module\n   * registered by `id`. For example, this.import('foo', 'img');\n   * @param {string} id The id of the dom-module in which to search.\n   * @param {string=} selector The css selector by which to find the element.\n   * @return {Element} Returns the element which matches `selector` in the\n   * module registered at the specified `id`.\n   */\n  static import(id, selector) {\n    if (id) {\n      let m = findModule(id);\n      if (m && selector) {\n        return m.querySelector(selector);\n      }\n      return m;\n    }\n    return null;\n  }\n\n  attributeChangedCallback(name, old, value) {\n    if (old !== value) {\n      this.register();\n    }\n  }\n\n  /**\n   * The absolute URL of the original location of this `dom-module`.\n   *\n   * This value will differ from this element's `ownerDocument` in the\n   * following ways:\n   * - Takes into account any `assetpath` attribute added during bundling\n   *   to indicate the original location relative to the bundled location\n   * - Uses the HTMLImports polyfill's `importForElement` API to ensure\n   *   the path is relative to the import document's location since\n   *   `ownerDocument` is not currently polyfilled\n   */\n  get assetpath() {\n    // Don't override existing assetpath.\n    if (!this.__assetpath) {\n      // note: assetpath set via an attribute must be relative to this\n      // element's location; accomodate polyfilled HTMLImports\n      const owner = window.HTMLImports && HTMLImports.importForElement ?\n        HTMLImports.importForElement(this) || document : this.ownerDocument;\n      const url = resolveUrl(\n        this.getAttribute('assetpath') || '', owner.baseURI);\n      this.__assetpath = pathFromUrl(url);\n    }\n    return this.__assetpath;\n  }\n\n  /**\n   * Registers the dom-module at a given id. This method should only be called\n   * when a dom-module is imperatively created. For\n   * example, `document.createElement('dom-module').register('foo')`.\n   * @param {string=} id The id at which to register the dom-module.\n   */\n  register(id) {\n    id = id || this.id;\n    if (id) {\n      this.id = id;\n      // store id separate from lowercased id so that\n      // in all cases mixedCase id will stored distinctly\n      // and lowercase version is a fallback\n      modules[id] = this;\n      lcModules[id.toLowerCase()] = this;\n      styleOutsideTemplateCheck(this);\n    }\n  }\n}\n\nDomModule.prototype['modules'] = modules;\n\ncustomElements.define('dom-module', DomModule);\n\nexport { DomModule };\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/elements/dom-module.js","import '../utils/boot.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport { root as root$0, isAncestor, isDescendant, get as get$0, translate, isPath as isPath$0, set as set$0, normalize } from '../utils/path.js';\nimport * as caseMap from '../utils/case-map.js';\nimport { camelToDashCase as camelToDashCase$0, dashToCamelCase } from '../utils/case-map.js';\nimport { PropertyAccessors } from './property-accessors.js';\nimport { TemplateStamp } from './template-stamp.js';\nimport { sanitizeDOMValue } from '../utils/settings.js';\n\n/** @const {Object} */\nconst CaseMap = caseMap;\n\n// Monotonically increasing unique ID used for de-duping effects triggered\n// from multiple properties in the same turn\nlet dedupeId = 0;\n\n/**\n * Property effect types; effects are stored on the prototype using these keys\n * @enum {string}\n */\nconst TYPES = {\n  COMPUTE: '__computeEffects',\n  REFLECT: '__reflectEffects',\n  NOTIFY: '__notifyEffects',\n  PROPAGATE: '__propagateEffects',\n  OBSERVE: '__observeEffects',\n  READ_ONLY: '__readOnly'\n};\n\n/**\n * @typedef {{\n * name: (string | undefined),\n * structured: (boolean | undefined),\n * wildcard: (boolean | undefined)\n * }}\n */\nlet DataTrigger; //eslint-disable-line no-unused-vars\n\n/**\n * @typedef {{\n * info: ?,\n * trigger: (!DataTrigger | undefined),\n * fn: (!Function | undefined)\n * }}\n */\nlet DataEffect; //eslint-disable-line no-unused-vars\n\nlet PropertyEffectsType; //eslint-disable-line no-unused-vars\n\n/**\n * Ensures that the model has an own-property map of effects for the given type.\n * The model may be a prototype or an instance.\n *\n * Property effects are stored as arrays of effects by property in a map,\n * by named type on the model. e.g.\n *\n *   __computeEffects: {\n *     foo: [ ... ],\n *     bar: [ ... ]\n *   }\n *\n * If the model does not yet have an effect map for the type, one is created\n * and returned.  If it does, but it is not an own property (i.e. the\n * prototype had effects), the the map is deeply cloned and the copy is\n * set on the model and returned, ready for new effects to be added.\n *\n * @param {Object} model Prototype or instance\n * @param {string} type Property effect type\n * @return {Object} The own-property map of effects for the given type\n * @private\n */\nfunction ensureOwnEffectMap(model, type) {\n  let effects = model[type];\n  if (!effects) {\n    effects = model[type] = {};\n  } else if (!model.hasOwnProperty(type)) {\n    effects = model[type] = Object.create(model[type]);\n    for (let p in effects) {\n      let protoFx = effects[p];\n      let instFx = effects[p] = Array(protoFx.length);\n      for (let i=0; i<protoFx.length; i++) {\n        instFx[i] = protoFx[i];\n      }\n    }\n  }\n  return effects;\n}\n\n// -- effects ----------------------------------------------\n\n/**\n * Runs all effects of a given type for the given set of property changes\n * on an instance.\n *\n * @param {!PropertyEffectsType} inst The instance with effects to run\n * @param {Object} effects Object map of property-to-Array of effects\n * @param {Object} props Bag of current property changes\n * @param {Object=} oldProps Bag of previous values for changed properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nfunction runEffects(inst, effects, props, oldProps, hasPaths, extraArgs) {\n  if (effects) {\n    let ran = false;\n    let id = dedupeId++;\n    for (let prop in props) {\n      if (runEffectsForProperty(inst, effects, id, prop, props, oldProps, hasPaths, extraArgs)) {\n        ran = true;\n      }\n    }\n    return ran;\n  }\n  return false;\n}\n\n/**\n * Runs a list of effects for a given property.\n *\n * @param {!PropertyEffectsType} inst The instance with effects to run\n * @param {Object} effects Object map of property-to-Array of effects\n * @param {number} dedupeId Counter used for de-duping effects\n * @param {string} prop Name of changed property\n * @param {*} props Changed properties\n * @param {*} oldProps Old properties\n * @param {boolean=} hasPaths True with `props` contains one or more paths\n * @param {*=} extraArgs Additional metadata to pass to effect function\n * @return {boolean} True if an effect ran for this property\n * @private\n */\nfunction runEffectsForProperty(inst, effects, dedupeId, prop, props, oldProps, hasPaths, extraArgs) {\n  let ran = false;\n  let rootProperty = hasPaths ? root$0(prop) : prop;\n  let fxs = effects[rootProperty];\n  if (fxs) {\n    for (let i=0, l=fxs.length, fx; (i<l) && (fx=fxs[i]); i++) {\n      if ((!fx.info || fx.info.lastRun !== dedupeId) &&\n          (!hasPaths || pathMatchesTrigger(prop, fx.trigger))) {\n        if (fx.info) {\n          fx.info.lastRun = dedupeId;\n        }\n        fx.fn(inst, prop, props, oldProps, fx.info, hasPaths, extraArgs);\n        ran = true;\n      }\n    }\n  }\n  return ran;\n}\n\n/**\n * Determines whether a property/path that has changed matches the trigger\n * criteria for an effect.  A trigger is a descriptor with the following\n * structure, which matches the descriptors returned from `parseArg`.\n * e.g. for `foo.bar.*`:\n * ```\n * trigger: {\n *   name: 'a.b',\n *   structured: true,\n *   wildcard: true\n * }\n * ```\n * If no trigger is given, the path is deemed to match.\n *\n * @param {string} path Path or property that changed\n * @param {DataTrigger} trigger Descriptor\n * @return {boolean} Whether the path matched the trigger\n */\nfunction pathMatchesTrigger(path, trigger) {\n  if (trigger) {\n    let triggerPath = trigger.name;\n    return (triggerPath == path) ||\n      (trigger.structured && isAncestor(triggerPath, path)) ||\n      (trigger.wildcard && isDescendant(triggerPath, path));\n  } else {\n    return true;\n  }\n}\n\n/**\n * Implements the \"observer\" effect.\n *\n * Calls the method with `info.methodName` on the instance, passing the\n * new and old values.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @private\n */\nfunction runObserverEffect(inst, property, props, oldProps, info) {\n  let fn = inst[info.methodName];\n  let changedProp = info.property;\n  if (fn) {\n    fn.call(inst, inst.__data[changedProp], oldProps[changedProp]);\n  } else if (!info.dynamicFn) {\n    console.warn('observer method `' + info.methodName + '` not defined');\n  }\n}\n\n/**\n * Runs \"notify\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * will dispatch path notification events in the case that the property\n * changed was a path and the root property for that path didn't have a\n * \"notify\" effect.  This is to maintain 1.0 behavior that did not require\n * `notify: true` to ensure object sub-property notifications were\n * sent.\n *\n * @param {!PropertyEffectsType} inst The instance with effects to run\n * @param {Object} notifyProps Bag of properties to notify\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @private\n */\nfunction runNotifyEffects(inst, notifyProps, props, oldProps, hasPaths) {\n  // Notify\n  let fxs = inst[TYPES.NOTIFY];\n  let notified;\n  let id = dedupeId++;\n  // Try normal notify effects; if none, fall back to try path notification\n  for (let prop in notifyProps) {\n    if (notifyProps[prop]) {\n      if (fxs && runEffectsForProperty(inst, fxs, id, prop, props, oldProps, hasPaths)) {\n        notified = true;\n      } else if (hasPaths && notifyPath(inst, prop, props)) {\n        notified = true;\n      }\n    }\n  }\n  // Flush host if we actually notified and host was batching\n  // And the host has already initialized clients; this prevents\n  // an issue with a host observing data changes before clients are ready.\n  let host;\n  if (notified && (host = inst.__dataHost) && host._invalidateProperties) {\n    host._invalidateProperties();\n  }\n}\n\n/**\n * Dispatches {property}-changed events with path information in the detail\n * object to indicate a sub-path of the property was changed.\n *\n * @param {!PropertyEffectsType} inst The element from which to fire the event\n * @param {string} path The path that was changed\n * @param {Object} props Bag of current property changes\n * @return {boolean} Returns true if the path was notified\n * @private\n */\nfunction notifyPath(inst, path, props) {\n  let rootProperty = root$0(path);\n  if (rootProperty !== path) {\n    let eventName = camelToDashCase$0(rootProperty) + '-changed';\n    dispatchNotifyEvent(inst, eventName, props[path], path);\n    return true;\n  }\n  return false;\n}\n\n/**\n * Dispatches {property}-changed events to indicate a property (or path)\n * changed.\n *\n * @param {!PropertyEffectsType} inst The element from which to fire the event\n * @param {string} eventName The name of the event to send ('{property}-changed')\n * @param {*} value The value of the changed property\n * @param {string | null | undefined} path If a sub-path of this property changed, the path\n *   that changed (optional).\n * @private\n * @suppress {invalidCasts}\n */\nfunction dispatchNotifyEvent(inst, eventName, value, path) {\n  let detail = {\n    value: value,\n    queueProperty: true\n  };\n  if (path) {\n    detail.path = path;\n  }\n  /** @type {!HTMLElement} */(inst).dispatchEvent(new CustomEvent(eventName, { detail }));\n}\n\n/**\n * Implements the \"notify\" effect.\n *\n * Dispatches a non-bubbling event named `info.eventName` on the instance\n * with a detail object containing the new `value`.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @private\n */\nfunction runNotifyEffect(inst, property, props, oldProps, info, hasPaths) {\n  let rootProperty = hasPaths ? root$0(property) : property;\n  let path = rootProperty != property ? property : null;\n  let value = path ? get$0(inst, path) : inst.__data[property];\n  if (path && value === undefined) {\n    value = props[property];  // specifically for .splices\n  }\n  dispatchNotifyEvent(inst, info.eventName, value, path);\n}\n\n/**\n * Handler function for 2-way notification events. Receives context\n * information captured in the `addNotifyListener` closure from the\n * `__notifyListeners` metadata.\n *\n * Sets the value of the notified property to the host property or path.  If\n * the event contained path information, translate that path to the host\n * scope's name for that path first.\n *\n * @param {CustomEvent} event Notification event (e.g. '<property>-changed')\n * @param {!PropertyEffectsType} inst Host element instance handling the notification event\n * @param {string} fromProp Child element property that was bound\n * @param {string} toPath Host property/path that was bound\n * @param {boolean} negate Whether the binding was negated\n * @private\n */\nfunction handleNotification(event, inst, fromProp, toPath, negate) {\n  let value;\n  let detail = /** @type {Object} */(event.detail);\n  let fromPath = detail && detail.path;\n  if (fromPath) {\n    toPath = translate(fromProp, toPath, fromPath);\n    value = detail && detail.value;\n  } else {\n    value = event.target[fromProp];\n  }\n  value = negate ? !value : value;\n  if (!inst[TYPES.READ_ONLY] || !inst[TYPES.READ_ONLY][toPath]) {\n    if (inst._setPendingPropertyOrPath(toPath, value, true, Boolean(fromPath))\n      && (!detail || !detail.queueProperty)) {\n      inst._invalidateProperties();\n    }\n  }\n}\n\n/**\n * Implements the \"reflect\" effect.\n *\n * Sets the attribute named `info.attrName` to the given property value.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @private\n */\nfunction runReflectEffect(inst, property, props, oldProps, info) {\n  let value = inst.__data[property];\n  if (sanitizeDOMValue) {\n    value = sanitizeDOMValue(value, info.attrName, 'attribute', /** @type {Node} */(inst));\n  }\n  inst._propertyToAttribute(property, info.attrName, value);\n}\n\n/**\n * Runs \"computed\" effects for a set of changed properties.\n *\n * This method differs from the generic `runEffects` method in that it\n * continues to run computed effects based on the output of each pass until\n * there are no more newly computed properties.  This ensures that all\n * properties that will be computed by the initial set of changes are\n * computed before other effects (binding propagation, observers, and notify)\n * run.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {!Object} changedProps Bag of changed properties\n * @param {!Object} oldProps Bag of previous values for changed properties\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @private\n */\nfunction runComputedEffects(inst, changedProps, oldProps, hasPaths) {\n  let computeEffects = inst[TYPES.COMPUTE];\n  if (computeEffects) {\n    let inputProps = changedProps;\n    while (runEffects(inst, computeEffects, inputProps, oldProps, hasPaths)) {\n      Object.assign(oldProps, inst.__dataOld);\n      Object.assign(changedProps, inst.__dataPending);\n      inputProps = inst.__dataPending;\n      inst.__dataPending = null;\n    }\n  }\n}\n\n/**\n * Implements the \"computed property\" effect by running the method with the\n * values of the arguments specified in the `info` object and setting the\n * return value to the computed property specified.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @private\n */\nfunction runComputedEffect(inst, property, props, oldProps, info) {\n  let result = runMethodEffect(inst, property, props, oldProps, info);\n  let computedProp = info.methodInfo;\n  if (inst.__dataHasAccessor && inst.__dataHasAccessor[computedProp]) {\n    inst._setPendingProperty(computedProp, result, true);\n  } else {\n    inst[computedProp] = result;\n  }\n}\n\n/**\n * Computes path changes based on path links set up using the `linkPaths`\n * API.\n *\n * @param {!PropertyEffectsType} inst The instance whose props are changing\n * @param {string | !Array<(string|number)>} path Path that has changed\n * @param {*} value Value of changed path\n * @private\n */\nfunction computeLinkedPaths(inst, path, value) {\n  let links = inst.__dataLinkedPaths;\n  if (links) {\n    let link;\n    for (let a in links) {\n      let b = links[a];\n      if (isDescendant(a, path)) {\n        link = translate(a, b, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      } else if (isDescendant(b, path)) {\n        link = translate(b, a, path);\n        inst._setPendingPropertyOrPath(link, value, true, true);\n      }\n    }\n  }\n}\n\n// -- bindings ----------------------------------------------\n\n/**\n * Adds binding metadata to the current `nodeInfo`, and binding effects\n * for all part dependencies to `templateInfo`.\n *\n * @param {Function} constructor Class that `_parseTemplate` is currently\n *   running on\n * @param {TemplateInfo} templateInfo Template metadata for current template\n * @param {NodeInfo} nodeInfo Node metadata for current template node\n * @param {string} kind Binding kind, either 'property', 'attribute', or 'text'\n * @param {string} target Target property name\n * @param {!Array<!BindingPart>} parts Array of binding part metadata\n * @param {string=} literal Literal text surrounding binding parts (specified\n *   only for 'property' bindings, since these must be initialized as part\n *   of boot-up)\n * @private\n */\nfunction addBinding(constructor, templateInfo, nodeInfo, kind, target, parts, literal) {\n  // Create binding metadata and add to nodeInfo\n  nodeInfo.bindings = nodeInfo.bindings || [];\n  let /** Binding */ binding = { kind, target, parts, literal, isCompound: (parts.length !== 1) };\n  nodeInfo.bindings.push(binding);\n  // Add listener info to binding metadata\n  if (shouldAddListener(binding)) {\n    let {event, negate} = binding.parts[0];\n    binding.listenerEvent = event || (CaseMap.camelToDashCase(target) + '-changed');\n    binding.listenerNegate = negate;\n  }\n  // Add \"propagate\" property effects to templateInfo\n  let index = templateInfo.nodeInfoList.length;\n  for (let i=0; i<binding.parts.length; i++) {\n    let part = binding.parts[i];\n    part.compoundIndex = i;\n    addEffectForBindingPart(constructor, templateInfo, binding, part, index);\n  }\n}\n\n/**\n * Adds property effects to the given `templateInfo` for the given binding\n * part.\n *\n * @param {Function} constructor Class that `_parseTemplate` is currently\n *   running on\n * @param {TemplateInfo} templateInfo Template metadata for current template\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @param {number} index Index into `nodeInfoList` for this node\n */\nfunction addEffectForBindingPart(constructor, templateInfo, binding, part, index) {\n  if (!part.literal) {\n    if (binding.kind === 'attribute' && binding.target[0] === '-') {\n      console.warn('Cannot set attribute ' + binding.target +\n        ' because \"-\" is not a valid attribute starting character');\n    } else {\n      let dependencies = part.dependencies;\n      let info = { index, binding, part, evaluator: constructor };\n      for (let j=0; j<dependencies.length; j++) {\n        let trigger = dependencies[j];\n        if (typeof trigger == 'string') {\n          trigger = parseArg(trigger);\n          trigger.wildcard = true;\n        }\n        constructor._addTemplatePropertyEffect(templateInfo, trigger.rootProperty, {\n          fn: runBindingEffect,\n          info, trigger\n        });\n      }\n    }\n  }\n}\n\n/**\n * Implements the \"binding\" (property/path binding) effect.\n *\n * Note that binding syntax is overridable via `_parseBindings` and\n * `_evaluateBinding`.  This method will call `_evaluateBinding` for any\n * non-literal parts returned from `_parseBindings`.  However,\n * there is no support for _path_ bindings via custom binding parts,\n * as this is specific to Polymer's path binding syntax.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} path Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @param {boolean} hasPaths True with `props` contains one or more paths\n * @param {Array} nodeList List of nodes associated with `nodeInfoList` template\n *   metadata\n * @private\n */\nfunction runBindingEffect(inst, path, props, oldProps, info, hasPaths, nodeList) {\n  let node = nodeList[info.index];\n  let binding = info.binding;\n  let part = info.part;\n  // Subpath notification: transform path and set to client\n  // e.g.: foo=\"{{obj.sub}}\", path: 'obj.sub.prop', set 'foo.prop'=obj.sub.prop\n  if (hasPaths && part.source && (path.length > part.source.length) &&\n      (binding.kind == 'property') && !binding.isCompound &&\n      node.__dataHasAccessor && node.__dataHasAccessor[binding.target]) {\n    let value = props[path];\n    path = translate(part.source, binding.target, path);\n    if (node._setPendingPropertyOrPath(path, value, false, true)) {\n      inst._enqueueClient(node);\n    }\n  } else {\n    let value = info.evaluator._evaluateBinding(inst, part, path, props, oldProps, hasPaths);\n    // Propagate value to child\n    applyBindingValue(inst, node, binding, part, value);\n  }\n}\n\n/**\n * Sets the value for an \"binding\" (binding) effect to a node,\n * either as a property or attribute.\n *\n * @param {!PropertyEffectsType} inst The instance owning the binding effect\n * @param {Node} node Target node for binding\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @param {*} value Value to set\n * @private\n */\nfunction applyBindingValue(inst, node, binding, part, value) {\n  value = computeBindingValue(node, value, binding, part);\n  if (sanitizeDOMValue) {\n    value = sanitizeDOMValue(value, binding.target, binding.kind, node);\n  }\n  if (binding.kind == 'attribute') {\n    // Attribute binding\n    inst._valueToNodeAttribute(/** @type {Element} */(node), value, binding.target);\n  } else {\n    // Property binding\n    let prop = binding.target;\n    if (node.__dataHasAccessor && node.__dataHasAccessor[prop]) {\n      if (!node[TYPES.READ_ONLY] || !node[TYPES.READ_ONLY][prop]) {\n        if (node._setPendingProperty(prop, value)) {\n          inst._enqueueClient(node);\n        }\n      }\n    } else  {\n      inst._setUnmanagedPropertyToNode(node, prop, value);\n    }\n  }\n}\n\n/**\n * Transforms an \"binding\" effect value based on compound & negation\n * effect metadata, as well as handling for special-case properties\n *\n * @param {Node} node Node the value will be set to\n * @param {*} value Value to set\n * @param {!Binding} binding Binding metadata\n * @param {!BindingPart} part Binding part metadata\n * @return {*} Transformed value to set\n * @private\n */\nfunction computeBindingValue(node, value, binding, part) {\n  if (binding.isCompound) {\n    let storage = node.__dataCompoundStorage[binding.target];\n    storage[part.compoundIndex] = value;\n    value = storage.join('');\n  }\n  if (binding.kind !== 'attribute') {\n    // Some browsers serialize `undefined` to `\"undefined\"`\n    if (binding.target === 'textContent' ||\n        (node.localName == 'input' && binding.target == 'value')) {\n      value = value == undefined ? '' : value;\n    }\n  }\n  return value;\n}\n\n/**\n * Returns true if a binding's metadata meets all the requirements to allow\n * 2-way binding, and therefore a `<property>-changed` event listener should be\n * added:\n * - used curly braces\n * - is a property (not attribute) binding\n * - is not a textContent binding\n * - is not compound\n *\n * @param {!Binding} binding Binding metadata\n * @return {boolean} True if 2-way listener should be added\n * @private\n */\nfunction shouldAddListener(binding) {\n  return Boolean(binding.target) &&\n         binding.kind != 'attribute' &&\n         binding.kind != 'text' &&\n         !binding.isCompound &&\n         binding.parts[0].mode === '{';\n}\n\n/**\n * Setup compound binding storage structures, notify listeners, and dataHost\n * references onto the bound nodeList.\n *\n * @param {!PropertyEffectsType} inst Instance that bas been previously bound\n * @param {TemplateInfo} templateInfo Template metadata\n * @private\n */\nfunction setupBindings(inst, templateInfo) {\n  // Setup compound storage, dataHost, and notify listeners\n  let {nodeList, nodeInfoList} = templateInfo;\n  if (nodeInfoList.length) {\n    for (let i=0; i < nodeInfoList.length; i++) {\n      let info = nodeInfoList[i];\n      let node = nodeList[i];\n      let bindings = info.bindings;\n      if (bindings) {\n        for (let i=0; i<bindings.length; i++) {\n          let binding = bindings[i];\n          setupCompoundStorage(node, binding);\n          addNotifyListener(node, inst, binding);\n        }\n      }\n      node.__dataHost = inst;\n    }\n  }\n}\n\n/**\n * Initializes `__dataCompoundStorage` local storage on a bound node with\n * initial literal data for compound bindings, and sets the joined\n * literal parts to the bound property.\n *\n * When changes to compound parts occur, they are first set into the compound\n * storage array for that property, and then the array is joined to result in\n * the final value set to the property/attribute.\n *\n * @param {Node} node Bound node to initialize\n * @param {Binding} binding Binding metadata\n * @private\n */\nfunction setupCompoundStorage(node, binding) {\n  if (binding.isCompound) {\n    // Create compound storage map\n    let storage = node.__dataCompoundStorage ||\n      (node.__dataCompoundStorage = {});\n    let parts = binding.parts;\n    // Copy literals from parts into storage for this binding\n    let literals = new Array(parts.length);\n    for (let j=0; j<parts.length; j++) {\n      literals[j] = parts[j].literal;\n    }\n    let target = binding.target;\n    storage[target] = literals;\n    // Configure properties with their literal parts\n    if (binding.literal && binding.kind == 'property') {\n      node[target] = binding.literal;\n    }\n  }\n}\n\n/**\n * Adds a 2-way binding notification event listener to the node specified\n *\n * @param {Object} node Child element to add listener to\n * @param {!PropertyEffectsType} inst Host element instance to handle notification event\n * @param {Binding} binding Binding metadata\n * @private\n */\nfunction addNotifyListener(node, inst, binding) {\n  if (binding.listenerEvent) {\n    let part = binding.parts[0];\n    node.addEventListener(binding.listenerEvent, function(e) {\n      handleNotification(e, inst, binding.target, part.source, part.negate);\n    });\n  }\n}\n\n// -- for method-based effects (complexObserver & computed) --------------\n\n/**\n * Adds property effects for each argument in the method signature (and\n * optionally, for the method name if `dynamic` is true) that calls the\n * provided effect function.\n *\n * @param {Element | Object} model Prototype or instance\n * @param {!MethodSignature} sig Method signature metadata\n * @param {string} type Type of property effect to add\n * @param {Function} effectFn Function to run when arguments change\n * @param {*=} methodInfo Effect-specific information to be included in\n *   method effect metadata\n * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n *   method names should be included as a dependency to the effect. Note,\n *   defaults to true if the signature is static (sig.static is true).\n * @private\n */\nfunction createMethodEffect(model, sig, type, effectFn, methodInfo, dynamicFn) {\n  dynamicFn = sig.static || (dynamicFn &&\n    (typeof dynamicFn !== 'object' || dynamicFn[sig.methodName]));\n  let info = {\n    methodName: sig.methodName,\n    args: sig.args,\n    methodInfo,\n    dynamicFn\n  };\n  for (let i=0, arg; (i<sig.args.length) && (arg=sig.args[i]); i++) {\n    if (!arg.literal) {\n      model._addPropertyEffect(arg.rootProperty, type, {\n        fn: effectFn, info: info, trigger: arg\n      });\n    }\n  }\n  if (dynamicFn) {\n    model._addPropertyEffect(sig.methodName, type, {\n      fn: effectFn, info: info\n    });\n  }\n}\n\n/**\n * Calls a method with arguments marshaled from properties on the instance\n * based on the method signature contained in the effect metadata.\n *\n * Multi-property observers, computed properties, and inline computing\n * functions call this function to invoke the method, then use the return\n * value accordingly.\n *\n * @param {!PropertyEffectsType} inst The instance the effect will be run on\n * @param {string} property Name of property\n * @param {Object} props Bag of current property changes\n * @param {Object} oldProps Bag of previous values for changed properties\n * @param {?} info Effect metadata\n * @return {*} Returns the return value from the method invocation\n * @private\n */\nfunction runMethodEffect(inst, property, props, oldProps, info) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  let context = inst._methodHost || inst;\n  let fn = context[info.methodName];\n  if (fn) {\n    let args = marshalArgs(inst.__data, info.args, property, props);\n    return fn.apply(context, args);\n  } else if (!info.dynamicFn) {\n    console.warn('method `' + info.methodName + '` not defined');\n  }\n}\n\nconst emptyArray = [];\n\n// Regular expressions used for binding\nconst IDENT  = '(?:' + '[a-zA-Z_$][\\\\w.:$\\\\-*]*' + ')';\nconst NUMBER = '(?:' + '[-+]?[0-9]*\\\\.?[0-9]+(?:[eE][-+]?[0-9]+)?' + ')';\nconst SQUOTE_STRING = '(?:' + '\\'(?:[^\\'\\\\\\\\]|\\\\\\\\.)*\\'' + ')';\nconst DQUOTE_STRING = '(?:' + '\"(?:[^\"\\\\\\\\]|\\\\\\\\.)*\"' + ')';\nconst STRING = '(?:' + SQUOTE_STRING + '|' + DQUOTE_STRING + ')';\nconst ARGUMENT = '(?:(' + IDENT + '|' + NUMBER + '|' +  STRING + ')\\\\s*' + ')';\nconst ARGUMENTS = '(?:' + ARGUMENT + '(?:,\\\\s*' + ARGUMENT + ')*' + ')';\nconst ARGUMENT_LIST = '(?:' + '\\\\(\\\\s*' +\n                              '(?:' + ARGUMENTS + '?' + ')' +\n                            '\\\\)\\\\s*' + ')';\nconst BINDING = '(' + IDENT + '\\\\s*' + ARGUMENT_LIST + '?' + ')'; // Group 3\nconst OPEN_BRACKET = '(\\\\[\\\\[|{{)' + '\\\\s*';\nconst CLOSE_BRACKET = '(?:]]|}})';\nconst NEGATE = '(?:(!)\\\\s*)?'; // Group 2\nconst EXPRESSION = OPEN_BRACKET + NEGATE + BINDING + CLOSE_BRACKET;\nconst bindingRegex = new RegExp(EXPRESSION, \"g\");\n\n/**\n * Create a string from binding parts of all the literal parts\n *\n * @param {!Array<BindingPart>} parts All parts to stringify\n * @return {string} String made from the literal parts\n */\nfunction literalFromParts(parts) {\n  let s = '';\n  for (let i=0; i<parts.length; i++) {\n    let literal = parts[i].literal;\n    s += literal || '';\n  }\n  return s;\n}\n\n/**\n * Parses an expression string for a method signature, and returns a metadata\n * describing the method in terms of `methodName`, `static` (whether all the\n * arguments are literals), and an array of `args`\n *\n * @param {string} expression The expression to parse\n * @return {?MethodSignature} The method metadata object if a method expression was\n *   found, otherwise `undefined`\n * @private\n */\nfunction parseMethod(expression) {\n  // tries to match valid javascript property names\n  let m = expression.match(/([^\\s]+?)\\(([\\s\\S]*)\\)/);\n  if (m) {\n    let methodName = m[1];\n    let sig = { methodName, static: true, args: emptyArray };\n    if (m[2].trim()) {\n      // replace escaped commas with comma entity, split on un-escaped commas\n      let args = m[2].replace(/\\\\,/g, '&comma;').split(',');\n      return parseArgs(args, sig);\n    } else {\n      return sig;\n    }\n  }\n  return null;\n}\n\n/**\n * Parses an array of arguments and sets the `args` property of the supplied\n * signature metadata object. Sets the `static` property to false if any\n * argument is a non-literal.\n *\n * @param {!Array<string>} argList Array of argument names\n * @param {!MethodSignature} sig Method signature metadata object\n * @return {!MethodSignature} The updated signature metadata object\n * @private\n */\nfunction parseArgs(argList, sig) {\n  sig.args = argList.map(function(rawArg) {\n    let arg = parseArg(rawArg);\n    if (!arg.literal) {\n      sig.static = false;\n    }\n    return arg;\n  }, this);\n  return sig;\n}\n\n/**\n * Parses an individual argument, and returns an argument metadata object\n * with the following fields:\n *\n *   {\n *     value: 'prop',        // property/path or literal value\n *     literal: false,       // whether argument is a literal\n *     structured: false,    // whether the property is a path\n *     rootProperty: 'prop', // the root property of the path\n *     wildcard: false       // whether the argument was a wildcard '.*' path\n *   }\n *\n * @param {string} rawArg The string value of the argument\n * @return {!MethodArg} Argument metadata object\n * @private\n */\nfunction parseArg(rawArg) {\n  // clean up whitespace\n  let arg = rawArg.trim()\n    // replace comma entity with comma\n    .replace(/&comma;/g, ',')\n    // repair extra escape sequences; note only commas strictly need\n    // escaping, but we allow any other char to be escaped since its\n    // likely users will do this\n    .replace(/\\\\(.)/g, '\\$1')\n    ;\n  // basic argument descriptor\n  let a = {\n    name: arg,\n    value: '',\n    literal: false\n  };\n  // detect literal value (must be String or Number)\n  let fc = arg[0];\n  if (fc === '-') {\n    fc = arg[1];\n  }\n  if (fc >= '0' && fc <= '9') {\n    fc = '#';\n  }\n  switch(fc) {\n    case \"'\":\n    case '\"':\n      a.value = arg.slice(1, -1);\n      a.literal = true;\n      break;\n    case '#':\n      a.value = Number(arg);\n      a.literal = true;\n      break;\n  }\n  // if not literal, look for structured path\n  if (!a.literal) {\n    a.rootProperty = root$0(arg);\n    // detect structured path (has dots)\n    a.structured = isPath$0(arg);\n    if (a.structured) {\n      a.wildcard = (arg.slice(-2) == '.*');\n      if (a.wildcard) {\n        a.name = arg.slice(0, -2);\n      }\n    }\n  }\n  return a;\n}\n\n/**\n * Gather the argument values for a method specified in the provided array\n * of argument metadata.\n *\n * The `path` and `value` arguments are used to fill in wildcard descriptor\n * when the method is being called as a result of a path notification.\n *\n * @param {Object} data Instance data storage object to read properties from\n * @param {!Array<!MethodArg>} args Array of argument metadata\n * @param {string} path Property/path name that triggered the method effect\n * @param {Object} props Bag of current property changes\n * @return {Array<*>} Array of argument values\n * @private\n */\nfunction marshalArgs(data, args, path, props) {\n  let values = [];\n  for (let i=0, l=args.length; i<l; i++) {\n    let arg = args[i];\n    let name = arg.name;\n    let v;\n    if (arg.literal) {\n      v = arg.value;\n    } else {\n      if (arg.structured) {\n        v = get$0(data, name);\n        // when data is not stored e.g. `splices`\n        if (v === undefined) {\n          v = props[name];\n        }\n      } else {\n        v = data[name];\n      }\n    }\n    if (arg.wildcard) {\n      // Only send the actual path changed info if the change that\n      // caused the observer to run matched the wildcard\n      let baseChanged = (name.indexOf(path + '.') === 0);\n      let matches = (path.indexOf(name) === 0 && !baseChanged);\n      values[i] = {\n        path: matches ? path : name,\n        value: matches ? props[path] : v,\n        base: v\n      };\n    } else {\n      values[i] = v;\n    }\n  }\n  return values;\n}\n\n// data api\n\n/**\n * Sends array splice notifications (`.splices` and `.length`)\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!PropertyEffectsType} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {Array} splices Array of splice records\n * @private\n */\nfunction notifySplices(inst, array, path, splices) {\n  let splicesPath = path + '.splices';\n  inst.notifyPath(splicesPath, { indexSplices: splices });\n  inst.notifyPath(path + '.length', array.length);\n  // Null here to allow potentially large splice records to be GC'ed.\n  inst.__data[splicesPath] = {indexSplices: null};\n}\n\n/**\n * Creates a splice record and sends an array splice notification for\n * the described mutation\n *\n * Note: this implementation only accepts normalized paths\n *\n * @param {!PropertyEffectsType} inst Instance to send notifications to\n * @param {Array} array The array the mutations occurred on\n * @param {string} path The path to the array that was mutated\n * @param {number} index Index at which the array mutation occurred\n * @param {number} addedCount Number of added items\n * @param {Array} removed Array of removed items\n * @private\n */\nfunction notifySplice(inst, array, path, index, addedCount, removed) {\n  notifySplices(inst, array, path, [{\n    index: index,\n    addedCount: addedCount,\n    removed: removed,\n    object: array,\n    type: 'splice'\n  }]);\n}\n\n/**\n * Returns an upper-cased version of the string.\n *\n * @param {string} name String to uppercase\n * @return {string} Uppercased string\n * @private\n */\nfunction upper(name) {\n  return name[0].toUpperCase() + name.substring(1);\n}\n\nexport const PropertyEffects = dedupingMixin(superClass => {\n\n  /**\n   * @constructor\n   * @extends {superClass}\n   * @implements {Polymer_PropertyAccessors}\n   * @implements {Polymer_TemplateStamp}\n   * @unrestricted\n   */\n  const propertyEffectsBase = TemplateStamp(PropertyAccessors(superClass));\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyEffects}\n   * @extends {propertyEffectsBase}\n   * @unrestricted\n   */\n  class PropertyEffects extends propertyEffectsBase {\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      this.__dataClientsReady;\n      /** @type {Array} */\n      this.__dataPendingClients;\n      /** @type {Object} */\n      this.__dataToNotify;\n      /** @type {Object} */\n      this.__dataLinkedPaths;\n      /** @type {boolean} */\n      this.__dataHasPaths;\n      /** @type {Object} */\n      this.__dataCompoundStorage;\n      /** @type {Polymer_PropertyEffects} */\n      this.__dataHost;\n      /** @type {!Object} */\n      this.__dataTemp;\n      /** @type {boolean} */\n      this.__dataClientsInitialized;\n      /** @type {!Object} */\n      this.__data;\n      /** @type {!Object} */\n      this.__dataPending;\n      /** @type {!Object} */\n      this.__dataOld;\n      /** @type {Object} */\n      this.__computeEffects;\n      /** @type {Object} */\n      this.__reflectEffects;\n      /** @type {Object} */\n      this.__notifyEffects;\n      /** @type {Object} */\n      this.__propagateEffects;\n      /** @type {Object} */\n      this.__observeEffects;\n      /** @type {Object} */\n      this.__readOnly;\n      /** @type {number} */\n      this.__dataCounter;\n      /** @type {!TemplateInfo} */\n      this.__templateInfo;\n    }\n\n    get PROPERTY_EFFECT_TYPES() {\n      return TYPES;\n    }\n\n    _initializeProperties() {\n      super._initializeProperties();\n      hostStack.registerHost(this);\n      this.__dataClientsReady = false;\n      this.__dataPendingClients = null;\n      this.__dataToNotify = null;\n      this.__dataLinkedPaths = null;\n      this.__dataHasPaths = false;\n      // May be set on instance prior to upgrade\n      this.__dataCompoundStorage = this.__dataCompoundStorage || null;\n      this.__dataHost = this.__dataHost || null;\n      this.__dataTemp = {};\n      this.__dataClientsInitialized = false;\n    }\n\n    /**\n     * Overrides `Polymer.PropertyAccessors` implementation to provide a\n     * more efficient implementation of initializing properties from\n     * the prototype on the instance.\n     *\n     * @override\n     * @param {Object} props Properties to initialize on the prototype\n     */\n    _initializeProtoProperties(props) {\n      this.__data = Object.create(props);\n      this.__dataPending = Object.create(props);\n      this.__dataOld = {};\n    }\n\n    /**\n     * Overrides `Polymer.PropertyAccessors` implementation to avoid setting\n     * `_setProperty`'s `shouldNotify: true`.\n     *\n     * @override\n     * @param {Object} props Properties to initialize on the instance\n     */\n    _initializeInstanceProperties(props) {\n      let readOnly = this[TYPES.READ_ONLY];\n      for (let prop in props) {\n        if (!readOnly || !readOnly[prop]) {\n          this.__dataPending = this.__dataPending || {};\n          this.__dataOld = this.__dataOld || {};\n          this.__data[prop] = this.__dataPending[prop] = props[prop];\n        }\n      }\n    }\n\n    // Prototype setup ----------------------------------------\n\n    /**\n     * Equivalent to static `addPropertyEffect` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property that should trigger the effect\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object\n     * @protected\n     */\n    _addPropertyEffect(property, type, effect) {\n      this._createPropertyAccessor(property, type == TYPES.READ_ONLY);\n      // effects are accumulated into arrays per property based on type\n      let effects = ensureOwnEffectMap(this, type)[property];\n      if (!effects) {\n        effects = this[type][property] = [];\n      }\n      effects.push(effect);\n    }\n\n    /**\n     * Removes the given property effect.\n     *\n     * @param {string} property Property the effect was associated with\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object to remove\n     */\n    _removePropertyEffect(property, type, effect) {\n      let effects = ensureOwnEffectMap(this, type)[property];\n      let idx = effects.indexOf(effect);\n      if (idx >= 0) {\n        effects.splice(idx, 1);\n      }\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a property effect\n     * of a certain type.\n     *\n     * @param {string} property Property name\n     * @param {string=} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasPropertyEffect(property, type) {\n      let effects = this[type];\n      return Boolean(effects && effects[property]);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"read only\"\n     * accessor for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasReadOnlyEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.READ_ONLY);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"notify\"\n     * property effect for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasNotifyEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.NOTIFY);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"reflect to attribute\"\n     * property effect for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasReflectEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.REFLECT);\n    }\n\n    /**\n     * Returns whether the current prototype/instance has a \"computed\"\n     * property effect for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if the prototype/instance has an effect of this type\n     * @protected\n     */\n    _hasComputedEffect(property) {\n      return this._hasPropertyEffect(property, TYPES.COMPUTE);\n    }\n\n    // Runtime ----------------------------------------\n\n    /**\n     * Sets a pending property or path.  If the root property of the path in\n     * question had no accessor, the path is set, otherwise it is enqueued\n     * via `_setPendingProperty`.\n     *\n     * This function isolates relatively expensive functionality necessary\n     * for the public API (`set`, `setProperties`, `notifyPath`, and property\n     * change listeners via {{...}} bindings), such that it is only done\n     * when paths enter the system, and not at every propagation step.  It\n     * also sets a `__dataHasPaths` flag on the instance which is used to\n     * fast-path slower path-matching code in the property effects host paths.\n     *\n     * `path` can be a path string or array of path parts as accepted by the\n     * public API.\n     *\n     * @param {string | !Array<number|string>} path Path to set\n     * @param {*} value Value to set\n     * @param {boolean=} shouldNotify Set to true if this change should\n     *  cause a property notification event dispatch\n     * @param {boolean=} isPathNotification If the path being set is a path\n     *   notification of an already changed value, as opposed to a request\n     *   to set and notify the change.  In the latter `false` case, a dirty\n     *   check is performed and then the value is set to the path before\n     *   enqueuing the pending property change.\n     * @return {boolean} Returns true if the property/path was enqueued in\n     *   the pending changes bag.\n     * @protected\n     */\n    _setPendingPropertyOrPath(path, value, shouldNotify, isPathNotification) {\n      if (isPathNotification ||\n          root$0(Array.isArray(path) ? path[0] : path) !== path) {\n        // Dirty check changes being set to a path against the actual object,\n        // since this is the entry point for paths into the system; from here\n        // the only dirty checks are against the `__dataTemp` cache to prevent\n        // duplicate work in the same turn only. Note, if this was a notification\n        // of a change already set to a path (isPathNotification: true),\n        // we always let the change through and skip the `set` since it was\n        // already dirty checked at the point of entry and the underlying\n        // object has already been updated\n        if (!isPathNotification) {\n          let old = get$0(this, path);\n          path = /** @type {string} */ (set$0(this, path, value));\n          // Use property-accessor's simpler dirty check\n          if (!path || !super._shouldPropertyChange(path, value, old)) {\n            return false;\n          }\n        }\n        this.__dataHasPaths = true;\n        if (this._setPendingProperty(/**@type{string}*/(path), value, shouldNotify)) {\n          computeLinkedPaths(this, path, value);\n          return true;\n        }\n      } else {\n        if (this.__dataHasAccessor && this.__dataHasAccessor[path]) {\n          return this._setPendingProperty(/**@type{string}*/(path), value, shouldNotify);\n        } else {\n          this[path] = value;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * Applies a value to a non-Polymer element/node's property.\n     *\n     * The implementation makes a best-effort at binding interop:\n     * Some native element properties have side-effects when\n     * re-setting the same value (e.g. setting `<input>.value` resets the\n     * cursor position), so we do a dirty-check before setting the value.\n     * However, for better interop with non-Polymer custom elements that\n     * accept objects, we explicitly re-set object changes coming from the\n     * Polymer world (which may include deep object changes without the\n     * top reference changing), erring on the side of providing more\n     * information.\n     *\n     * Users may override this method to provide alternate approaches.\n     *\n     * @param {Node} node The node to set a property on\n     * @param {string} prop The property to set\n     * @param {*} value The value to set\n     * @protected\n     */\n    _setUnmanagedPropertyToNode(node, prop, value) {\n      // It is a judgment call that resetting primitives is\n      // \"bad\" and resettings objects is also \"good\"; alternatively we could\n      // implement a whitelist of tag & property values that should never\n      // be reset (e.g. <input>.value && <select>.value)\n      if (value !== node[prop] || typeof value == 'object') {\n        node[prop] = value;\n      }\n    }\n\n    /**\n     * Overrides the `PropertyAccessors` implementation to introduce special\n     * dirty check logic depending on the property & value being set:\n     *\n     * 1. Any value set to a path (e.g. 'obj.prop': 42 or 'obj.prop': {...})\n     *    Stored in `__dataTemp`, dirty checked against `__dataTemp`\n     * 2. Object set to simple property (e.g. 'prop': {...})\n     *    Stored in `__dataTemp` and `__data`, dirty checked against\n     *    `__dataTemp` by default implementation of `_shouldPropertyChange`\n     * 3. Primitive value set to simple property (e.g. 'prop': 42)\n     *    Stored in `__data`, dirty checked against `__data`\n     *\n     * The dirty-check is important to prevent cycles due to two-way\n     * notification, but paths and objects are only dirty checked against any\n     * previous value set during this turn via a \"temporary cache\" that is\n     * cleared when the last `_propertiesChaged` exits. This is so:\n     * a. any cached array paths (e.g. 'array.3.prop') may be invalidated\n     *    due to array mutations like shift/unshift/splice; this is fine\n     *    since path changes are dirty-checked at user entry points like `set`\n     * b. dirty-checking for objects only lasts one turn to allow the user\n     *    to mutate the object in-place and re-set it with the same identity\n     *    and have all sub-properties re-propagated in a subsequent turn.\n     *\n     * The temp cache is not necessarily sufficient to prevent invalid array\n     * paths, since a splice can happen during the same turn (with pathological\n     * user code); we could introduce a \"fixup\" for temporarily cached array\n     * paths if needed: https://github.com/Polymer/polymer/issues/4227\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @param {boolean=} shouldNotify True if property should fire notification\n     *   event (applies only for `notify: true` properties)\n     * @return {boolean} Returns true if the property changed\n     * @override\n     */\n    _setPendingProperty(property, value, shouldNotify) {\n      let isPath = this.__dataHasPaths && isPath$0(property);\n      let prevProps = isPath ? this.__dataTemp : this.__data;\n      if (this._shouldPropertyChange(property, value, prevProps[property])) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (!(property in this.__dataOld)) {\n          this.__dataOld[property] = this.__data[property];\n        }\n        // Paths are stored in temporary cache (cleared at end of turn),\n        // which is used for dirty-checking, all others stored in __data\n        if (isPath) {\n          this.__dataTemp[property] = value;\n        } else {\n          this.__data[property] = value;\n        }\n        // All changes go into pending property bag, passed to _propertiesChanged\n        this.__dataPending[property] = value;\n        // Track properties that should notify separately\n        if (isPath || (this[TYPES.NOTIFY] && this[TYPES.NOTIFY][property])) {\n          this.__dataToNotify = this.__dataToNotify || {};\n          this.__dataToNotify[property] = shouldNotify;\n        }\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Overrides base implementation to ensure all accessors set `shouldNotify`\n     * to true, for per-property notification tracking.\n     *\n     * @override\n     */\n    _setProperty(property, value) {\n      if (this._setPendingProperty(property, value, true)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Overrides `PropertyAccessor`'s default async queuing of\n     * `_propertiesChanged`: if `__dataReady` is false (has not yet been\n     * manually flushed), the function no-ops; otherwise flushes\n     * `_propertiesChanged` synchronously.\n     *\n     * @override\n     */\n    _invalidateProperties() {\n      if (this.__dataReady) {\n        this._flushProperties();\n      }\n    }\n\n    /**\n     * Enqueues the given client on a list of pending clients, whose\n     * pending property changes can later be flushed via a call to\n     * `_flushClients`.\n     *\n     * @param {Object} client PropertyEffects client to enqueue\n     * @protected\n     */\n    _enqueueClient(client) {\n      this.__dataPendingClients = this.__dataPendingClients || [];\n      if (client !== this) {\n        this.__dataPendingClients.push(client);\n      }\n    }\n\n    /**\n     * Flushes any clients previously enqueued via `_enqueueClient`, causing\n     * their `_flushProperties` method to run.\n     *\n     * @protected\n     */\n    _flushClients() {\n      if (!this.__dataClientsReady) {\n        this.__dataClientsReady = true;\n        this._readyClients();\n        // Override point where accessors are turned on; importantly,\n        // this is after clients have fully readied, providing a guarantee\n        // that any property effects occur only after all clients are ready.\n        this.__dataReady = true;\n      } else {\n        this.__enableOrFlushClients();\n      }\n    }\n\n    // NOTE: We ensure clients either enable or flush as appropriate. This\n    // handles two corner cases:\n    // (1) clients flush properly when connected/enabled before the host\n    // enables; e.g.\n    //   (a) Templatize stamps with no properties and does not flush and\n    //   (b) the instance is inserted into dom and\n    //   (c) then the instance flushes.\n    // (2) clients enable properly when not connected/enabled when the host\n    // flushes; e.g.\n    //   (a) a template is runtime stamped and not yet connected/enabled\n    //   (b) a host sets a property, causing stamped dom to flush\n    //   (c) the stamped dom enables.\n    __enableOrFlushClients() {\n      let clients = this.__dataPendingClients;\n      if (clients) {\n        this.__dataPendingClients = null;\n        for (let i=0; i < clients.length; i++) {\n          let client = clients[i];\n          if (!client.__dataEnabled) {\n            client._enableProperties();\n          } else if (client.__dataPending) {\n            client._flushProperties();\n          }\n        }\n      }\n    }\n\n    /**\n     * Perform any initial setup on client dom. Called before the first\n     * `_flushProperties` call on client dom and before any element\n     * observers are called.\n     *\n     * @protected\n     */\n    _readyClients() {\n      this.__enableOrFlushClients();\n    }\n\n    /**\n     * Sets a bag of property changes to this instance, and\n     * synchronously processes all effects of the properties as a batch.\n     *\n     * Property names must be simple properties, not paths.  Batched\n     * path propagation is not supported.\n     *\n     * @param {Object} props Bag of one or more key-value pairs whose key is\n     *   a property and value is the new value to set for that property.\n     * @param {boolean=} setReadOnly When true, any private values set in\n     *   `props` will be set. By default, `setProperties` will not set\n     *   `readOnly: true` root properties.\n     * @public\n     */\n    setProperties(props, setReadOnly) {\n      for (let path in props) {\n        if (setReadOnly || !this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][path]) {\n          //TODO(kschaaf): explicitly disallow paths in setProperty?\n          // wildcard observers currently only pass the first changed path\n          // in the `info` object, and you could do some odd things batching\n          // paths, e.g. {'foo.bar': {...}, 'foo': null}\n          this._setPendingPropertyOrPath(path, props[path], true);\n        }\n      }\n      this._invalidateProperties();\n    }\n\n    /**\n     * Overrides `PropertyAccessors` so that property accessor\n     * side effects are not enabled until after client dom is fully ready.\n     * Also calls `_flushClients` callback to ensure client dom is enabled\n     * that was not enabled as a result of flushing properties.\n     *\n     * @override\n     */\n    ready() {\n      // It is important that `super.ready()` is not called here as it\n      // immediately turns on accessors. Instead, we wait until `readyClients`\n      // to enable accessors to provide a guarantee that clients are ready\n      // before processing any accessors side effects.\n      this._flushProperties();\n      // If no data was pending, `_flushProperties` will not `flushClients`\n      // so ensure this is done.\n      if (!this.__dataClientsReady) {\n        this._flushClients();\n      }\n      // Before ready, client notifications do not trigger _flushProperties.\n      // Therefore a flush is necessary here if data has been set.\n      if (this.__dataPending) {\n        this._flushProperties();\n      }\n    }\n\n    /**\n     * Implements `PropertyAccessors`'s properties changed callback.\n     *\n     * Runs each class of effects for the batch of changed properties in\n     * a specific order (compute, propagate, reflect, observe, notify).\n     *\n     * @override\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) {\n      // ----------------------------\n      // let c = Object.getOwnPropertyNames(changedProps || {});\n      // window.debug && console.group(this.localName + '#' + this.id + ': ' + c);\n      // if (window.debug) { debugger; }\n      // ----------------------------\n      let hasPaths = this.__dataHasPaths;\n      this.__dataHasPaths = false;\n      // Compute properties\n      runComputedEffects(this, changedProps, oldProps, hasPaths);\n      // Clear notify properties prior to possible reentry (propagate, observe),\n      // but after computing effects have a chance to add to them\n      let notifyProps = this.__dataToNotify;\n      this.__dataToNotify = null;\n      // Propagate properties to clients\n      this._propagatePropertyChanges(changedProps, oldProps, hasPaths);\n      // Flush clients\n      this._flushClients();\n      // Reflect properties\n      runEffects(this, this[TYPES.REFLECT], changedProps, oldProps, hasPaths);\n      // Observe properties\n      runEffects(this, this[TYPES.OBSERVE], changedProps, oldProps, hasPaths);\n      // Notify properties to host\n      if (notifyProps) {\n        runNotifyEffects(this, notifyProps, changedProps, oldProps, hasPaths);\n      }\n      // Clear temporary cache at end of turn\n      if (this.__dataCounter == 1) {\n        this.__dataTemp = {};\n      }\n      // ----------------------------\n      // window.debug && console.groupEnd(this.localName + '#' + this.id + ': ' + c);\n      // ----------------------------\n    }\n\n    /**\n     * Called to propagate any property changes to stamped template nodes\n     * managed by this element.\n     *\n     * @param {Object} changedProps Bag of changed properties\n     * @param {Object} oldProps Bag of previous values for changed properties\n     * @param {boolean} hasPaths True with `props` contains one or more paths\n     * @protected\n     */\n    _propagatePropertyChanges(changedProps, oldProps, hasPaths) {\n      if (this[TYPES.PROPAGATE]) {\n        runEffects(this, this[TYPES.PROPAGATE], changedProps, oldProps, hasPaths);\n      }\n      let templateInfo = this.__templateInfo;\n      while (templateInfo) {\n        runEffects(this, templateInfo.propertyEffects, changedProps, oldProps,\n          hasPaths, templateInfo.nodeList);\n        templateInfo = templateInfo.nextTemplateInfo;\n      }\n    }\n\n    /**\n     * Aliases one data path as another, such that path notifications from one\n     * are routed to the other.\n     *\n     * @param {string | !Array<string|number>} to Target path to link.\n     * @param {string | !Array<string|number>} from Source path to link.\n     * @public\n     */\n    linkPaths(to, from) {\n      to = normalize(to);\n      from = normalize(from);\n      this.__dataLinkedPaths = this.__dataLinkedPaths || {};\n      this.__dataLinkedPaths[to] = from;\n    }\n\n    /**\n     * Removes a data path alias previously established with `_linkPaths`.\n     *\n     * Note, the path to unlink should be the target (`to`) used when\n     * linking the paths.\n     *\n     * @param {string | !Array<string|number>} path Target path to unlink.\n     * @public\n     */\n    unlinkPaths(path) {\n      path = normalize(path);\n      if (this.__dataLinkedPaths) {\n        delete this.__dataLinkedPaths[path];\n      }\n    }\n\n    /**\n     * Notify that an array has changed.\n     *\n     * Example:\n     *\n     *     this.items = [ {name: 'Jim'}, {name: 'Todd'}, {name: 'Bill'} ];\n     *     ...\n     *     this.items.splice(1, 1, {name: 'Sam'});\n     *     this.items.push({name: 'Bob'});\n     *     this.notifySplices('items', [\n     *       { index: 1, removed: [{name: 'Todd'}], addedCount: 1, obect: this.items, type: 'splice' },\n     *       { index: 3, removed: [], addedCount: 1, object: this.items, type: 'splice'}\n     *     ]);\n     *\n     * @param {string} path Path that should be notified.\n     * @param {Array} splices Array of splice records indicating ordered\n     *   changes that occurred to the array. Each record should have the\n     *   following fields:\n     *    * index: index at which the change occurred\n     *    * removed: array of items that were removed from this index\n     *    * addedCount: number of new items added at this index\n     *    * object: a reference to the array in question\n     *    * type: the string literal 'splice'\n     *\n     *   Note that splice records _must_ be normalized such that they are\n     *   reported in index order (raw results from `Object.observe` are not\n     *   ordered and must be normalized/merged before notifying).\n     * @public\n    */\n    notifySplices(path, splices) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get$0(this, path, info));\n      notifySplices(this, array, info.path, splices);\n    }\n\n    /**\n     * Convenience method for reading a value from a path.\n     *\n     * Note, if any part in the path is undefined, this method returns\n     * `undefined` (this method does not throw when dereferencing undefined\n     * paths).\n     *\n     * @param {(string|!Array<(string|number)>)} path Path to the value\n     *   to read.  The path may be specified as a string (e.g. `foo.bar.baz`)\n     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n     *   bracketed expressions are not supported; string-based path parts\n     *   *must* be separated by dots.  Note that when dereferencing array\n     *   indices, the index may be used as a dotted part directly\n     *   (e.g. `users.12.name` or `['users', 12, 'name']`).\n     * @param {Object=} root Root object from which the path is evaluated.\n     * @return {*} Value at the path, or `undefined` if any part of the path\n     *   is undefined.\n     * @public\n     */\n    get(path, root) {\n      return get$0(root || this, path);\n    }\n\n    /**\n     * Convenience method for setting a value to a path and notifying any\n     * elements bound to the same path.\n     *\n     * Note, if any part in the path except for the last is undefined,\n     * this method does nothing (this method does not throw when\n     * dereferencing undefined paths).\n     *\n     * @param {(string|!Array<(string|number)>)} path Path to the value\n     *   to write.  The path may be specified as a string (e.g. `'foo.bar.baz'`)\n     *   or an array of path parts (e.g. `['foo.bar', 'baz']`).  Note that\n     *   bracketed expressions are not supported; string-based path parts\n     *   *must* be separated by dots.  Note that when dereferencing array\n     *   indices, the index may be used as a dotted part directly\n     *   (e.g. `'users.12.name'` or `['users', 12, 'name']`).\n     * @param {*} value Value to set at the specified path.\n     * @param {Object=} root Root object from which the path is evaluated.\n     *   When specified, no notification will occur.\n     * @public\n    */\n    set(path, value, root) {\n      if (root) {\n        set$0(root, path, value);\n      } else {\n        if (!this[TYPES.READ_ONLY] || !this[TYPES.READ_ONLY][/** @type {string} */(path)]) {\n          if (this._setPendingPropertyOrPath(path, value, true)) {\n            this._invalidateProperties();\n          }\n        }\n      }\n    }\n\n    /**\n     * Adds items onto the end of the array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.push`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {...*} items Items to push onto array\n     * @return {number} New length of the array.\n     * @public\n     */\n    push(path, ...items) {\n      let info = {path: ''};\n      let array = /** @type {Array}*/(get$0(this, path, info));\n      let len = array.length;\n      let ret = array.push(...items);\n      if (items.length) {\n        notifySplice(this, array, info.path, len, items.length, []);\n      }\n      return ret;\n    }\n\n    /**\n     * Removes an item from the end of array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.pop`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @return {*} Item that was removed.\n     * @public\n     */\n    pop(path) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get$0(this, path, info));\n      let hadLength = Boolean(array.length);\n      let ret = array.pop();\n      if (hadLength) {\n        notifySplice(this, array, info.path, array.length, 0, [ret]);\n      }\n      return ret;\n    }\n\n    /**\n     * Starting from the start index specified, removes 0 or more items\n     * from the array and inserts 0 or more new items in their place.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.splice`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {number} start Index from which to start removing/inserting.\n     * @param {number} deleteCount Number of items to remove.\n     * @param {...*} items Items to insert into array.\n     * @return {Array} Array of removed items.\n     * @public\n     */\n    splice(path, start, deleteCount, ...items) {\n      let info = {path : ''};\n      let array = /** @type {Array} */(get$0(this, path, info));\n      // Normalize fancy native splice handling of crazy start values\n      if (start < 0) {\n        start = array.length - Math.floor(-start);\n      } else {\n        start = Math.floor(start);\n      }\n      if (!start) {\n        start = 0;\n      }\n      let ret = array.splice(start, deleteCount, ...items);\n      if (items.length || ret.length) {\n        notifySplice(this, array, info.path, start, items.length, ret);\n      }\n      return ret;\n    }\n\n    /**\n     * Removes an item from the beginning of array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.pop`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @return {*} Item that was removed.\n     * @public\n     */\n    shift(path) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get$0(this, path, info));\n      let hadLength = Boolean(array.length);\n      let ret = array.shift();\n      if (hadLength) {\n        notifySplice(this, array, info.path, 0, 0, [ret]);\n      }\n      return ret;\n    }\n\n    /**\n     * Adds items onto the beginning of the array at the path specified.\n     *\n     * The arguments after `path` and return value match that of\n     * `Array.prototype.push`.\n     *\n     * This method notifies other paths to the same array that a\n     * splice occurred to the array.\n     *\n     * @param {string | !Array<string|number>} path Path to array.\n     * @param {...*} items Items to insert info array\n     * @return {number} New length of the array.\n     * @public\n     */\n    unshift(path, ...items) {\n      let info = {path: ''};\n      let array = /** @type {Array} */(get$0(this, path, info));\n      let ret = array.unshift(...items);\n      if (items.length) {\n        notifySplice(this, array, info.path, 0, items.length, []);\n      }\n      return ret;\n    }\n\n    /**\n     * Notify that a path has changed.\n     *\n     * Example:\n     *\n     *     this.item.user.name = 'Bob';\n     *     this.notifyPath('item.user.name');\n     *\n     * @param {string} path Path that should be notified.\n     * @param {*=} value Value at the path (optional).\n     * @public\n    */\n    notifyPath(path, value) {\n      /** @type {string} */\n      let propPath;\n      if (arguments.length == 1) {\n        // Get value if not supplied\n        let info = {path: ''};\n        value = get$0(this, path, info);\n        propPath = info.path;\n      } else if (Array.isArray(path)) {\n        // Normalize path if needed\n        propPath = normalize(path);\n      } else {\n        propPath = /** @type{string} */(path);\n      }\n      if (this._setPendingPropertyOrPath(propPath, value, true, true)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Equivalent to static `createReadOnlyProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property name\n     * @param {boolean=} protectedSetter Creates a custom protected setter\n     *   when `true`.\n     * @protected\n     */\n    _createReadOnlyProperty(property, protectedSetter) {\n      this._addPropertyEffect(property, TYPES.READ_ONLY);\n      if (protectedSetter) {\n        this['_set' + upper(property)] = /** @this {PropertyEffects} */function(value) {\n          this._setProperty(property, value);\n        };\n      }\n    }\n\n    /**\n     * Equivalent to static `createPropertyObserver` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property name\n     * @param {string} methodName Name of observer method to call\n     * @param {boolean=} dynamicFn Whether the method name should be included as\n     *   a dependency to the effect.\n     * @protected\n     */\n    _createPropertyObserver(property, methodName, dynamicFn) {\n      let info = { property, methodName, dynamicFn: Boolean(dynamicFn) };\n      this._addPropertyEffect(property, TYPES.OBSERVE, {\n        fn: runObserverEffect, info, trigger: {name: property}\n      });\n      if (dynamicFn) {\n        this._addPropertyEffect(methodName, TYPES.OBSERVE, {\n          fn: runObserverEffect, info, trigger: {name: methodName}\n        });\n      }\n    }\n\n    /**\n     * Equivalent to static `createMethodObserver` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @protected\n     */\n    _createMethodObserver(expression, dynamicFn) {\n      let sig = parseMethod(expression);\n      if (!sig) {\n        throw new Error(\"Malformed observer expression '\" + expression + \"'\");\n      }\n      createMethodEffect(this, sig, TYPES.OBSERVE, runMethodEffect, null, dynamicFn);\n    }\n\n    /**\n     * Equivalent to static `createNotifyingProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property name\n     * @protected\n     */\n    _createNotifyingProperty(property) {\n      this._addPropertyEffect(property, TYPES.NOTIFY, {\n        fn: runNotifyEffect,\n        info: {\n          eventName: CaseMap.camelToDashCase(property) + '-changed',\n          property: property\n        }\n      });\n    }\n\n    /**\n     * Equivalent to static `createReflectedProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Property name\n     * @protected\n     */\n    _createReflectedProperty(property) {\n      let attr = CaseMap.camelToDashCase(property);\n      if (attr[0] === '-') {\n        console.warn('Property ' + property + ' cannot be reflected to attribute ' +\n          attr + ' because \"-\" is not a valid starting attribute name. Use a lowercase first letter for the property thisead.');\n      } else {\n        this._addPropertyEffect(property, TYPES.REFLECT, {\n          fn: runReflectEffect,\n          info: {\n            attrName: attr\n          }\n        });\n      }\n    }\n\n    /**\n     * Equivalent to static `createComputedProperty` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * @param {string} property Name of computed property to set\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @protected\n     */\n    _createComputedProperty(property, expression, dynamicFn) {\n      let sig = parseMethod(expression);\n      if (!sig) {\n        throw new Error(\"Malformed computed expression '\" + expression + \"'\");\n      }\n      createMethodEffect(this, sig, TYPES.COMPUTE, runComputedEffect, property, dynamicFn);\n    }\n\n    // -- static class methods ------------\n\n    /**\n     * Ensures an accessor exists for the specified property, and adds\n     * to a list of \"property effects\" that will run when the accessor for\n     * the specified property is set.  Effects are grouped by \"type\", which\n     * roughly corresponds to a phase in effect processing.  The effect\n     * metadata should be in the following form:\n     *\n     *     {\n     *       fn: effectFunction, // Reference to function to call to perform effect\n     *       info: { ... }       // Effect metadata passed to function\n     *       trigger: {          // Optional triggering metadata; if not provided\n     *         name: string      // the property is treated as a wildcard\n     *         structured: boolean\n     *         wildcard: boolean\n     *       }\n     *     }\n     *\n     * Effects are called from `_propertiesChanged` in the following order by\n     * type:\n     *\n     * 1. COMPUTE\n     * 2. PROPAGATE\n     * 3. REFLECT\n     * 4. OBSERVE\n     * 5. NOTIFY\n     *\n     * Effect functions are called with the following signature:\n     *\n     *     effectFunction(inst, path, props, oldProps, info, hasPaths)\n     *\n     * @param {string} property Property that should trigger the effect\n     * @param {string} type Effect type, from this.PROPERTY_EFFECT_TYPES\n     * @param {Object=} effect Effect metadata object\n     * @protected\n     */\n    static addPropertyEffect(property, type, effect) {\n      this.prototype._addPropertyEffect(property, type, effect);\n    }\n\n    /**\n     * Creates a single-property observer for the given property.\n     *\n     * @param {string} property Property name\n     * @param {string} methodName Name of observer method to call\n     * @param {boolean=} dynamicFn Whether the method name should be included as\n     *   a dependency to the effect.\n     * @protected\n     */\n    static createPropertyObserver(property, methodName, dynamicFn) {\n      this.prototype._createPropertyObserver(property, methodName, dynamicFn);\n    }\n\n    /**\n     * Creates a multi-property \"method observer\" based on the provided\n     * expression, which should be a string in the form of a normal Javascript\n     * function signature: `'methodName(arg1, [..., argn])'`.  Each argument\n     * should correspond to a property or path in the context of this\n     * prototype (or instance), or may be a literal string or number.\n     *\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating\n     *   whether method names should be included as a dependency to the effect.\n     * @protected\n     */\n    static createMethodObserver(expression, dynamicFn) {\n      this.prototype._createMethodObserver(expression, dynamicFn);\n    }\n\n    /**\n     * Causes the setter for the given property to dispatch `<property>-changed`\n     * events to notify of changes to the property.\n     *\n     * @param {string} property Property name\n     * @protected\n     */\n    static createNotifyingProperty(property) {\n      this.prototype._createNotifyingProperty(property);\n    }\n\n    /**\n     * Creates a read-only accessor for the given property.\n     *\n     * To set the property, use the protected `_setProperty` API.\n     * To create a custom protected setter (e.g. `_setMyProp()` for\n     * property `myProp`), pass `true` for `protectedSetter`.\n     *\n     * Note, if the property will have other property effects, this method\n     * should be called first, before adding other effects.\n     *\n     * @param {string} property Property name\n     * @param {boolean=} protectedSetter Creates a custom protected setter\n     *   when `true`.\n     * @protected\n     */\n    static createReadOnlyProperty(property, protectedSetter) {\n      this.prototype._createReadOnlyProperty(property, protectedSetter);\n    }\n\n    /**\n     * Causes the setter for the given property to reflect the property value\n     * to a (dash-cased) attribute of the same name.\n     *\n     * @param {string} property Property name\n     * @protected\n     */\n    static createReflectedProperty(property) {\n      this.prototype._createReflectedProperty(property);\n    }\n\n    /**\n     * Creates a computed property whose value is set to the result of the\n     * method described by the given `expression` each time one or more\n     * arguments to the method changes.  The expression should be a string\n     * in the form of a normal Javascript function signature:\n     * `'methodName(arg1, [..., argn])'`\n     *\n     * @param {string} property Name of computed property to set\n     * @param {string} expression Method expression\n     * @param {boolean|Object=} dynamicFn Boolean or object map indicating whether\n     *   method names should be included as a dependency to the effect.\n     * @protected\n     */\n    static createComputedProperty(property, expression, dynamicFn) {\n      this.prototype._createComputedProperty(property, expression, dynamicFn);\n    }\n\n    /**\n     * Parses the provided template to ensure binding effects are created\n     * for them, and then ensures property accessors are created for any\n     * dependent properties in the template.  Binding effects for bound\n     * templates are stored in a linked list on the instance so that\n     * templates can be efficiently stamped and unstamped.\n     *\n     * @param {HTMLTemplateElement} template Template containing binding\n     *   bindings\n     * @return {Object} Template metadata object\n     * @protected\n     */\n    static bindTemplate(template) {\n      return this.prototype._bindTemplate(template);\n    }\n\n    // -- binding ----------------------------------------------\n\n    /**\n     * Equivalent to static `bindTemplate` API but can be called on\n     * an instance to add effects at runtime.  See that method for\n     * full API docs.\n     *\n     * This method may be called on the prototype (for prototypical template\n     * binding, to avoid creating accessors every instance) once per prototype,\n     * and will be called with `runtimeBinding: true` by `_stampTemplate` to\n     * create and link an instance of the template metadata associated with a\n     * particular stamping.\n     *\n     * @param {HTMLTemplateElement} template Template containing binding\n     *   bindings\n     * @param {boolean=} instanceBinding When false (default), performs\n     *   \"prototypical\" binding of the template and overwrites any previously\n     *   bound template for the class. When true (as passed from\n     *   `_stampTemplate`), the template info is instanced and linked into\n     *   the list of bound templates.\n     * @return {!TemplateInfo} Template metadata object; for `runtimeBinding`,\n     *   this is an instance of the prototypical template info\n     * @protected\n     */\n    _bindTemplate(template, instanceBinding) {\n      let templateInfo = this.constructor._parseTemplate(template);\n      let wasPreBound = this.__templateInfo == templateInfo;\n      // Optimization: since this is called twice for proto-bound templates,\n      // don't attempt to recreate accessors if this template was pre-bound\n      if (!wasPreBound) {\n        for (let prop in templateInfo.propertyEffects) {\n          this._createPropertyAccessor(prop);\n        }\n      }\n      if (instanceBinding) {\n        // For instance-time binding, create instance of template metadata\n        // and link into list of templates if necessary\n        templateInfo = /** @type {!TemplateInfo} */(Object.create(templateInfo));\n        templateInfo.wasPreBound = wasPreBound;\n        if (!wasPreBound && this.__templateInfo) {\n          let last = this.__templateInfoLast || this.__templateInfo;\n          this.__templateInfoLast = last.nextTemplateInfo = templateInfo;\n          templateInfo.previousTemplateInfo = last;\n          return templateInfo;\n        }\n      }\n      return this.__templateInfo = templateInfo;\n    }\n\n    /**\n     * Adds a property effect to the given template metadata, which is run\n     * at the \"propagate\" stage of `_propertiesChanged` when the template\n     * has been bound to the element via `_bindTemplate`.\n     *\n     * The `effect` object should match the format in `_addPropertyEffect`.\n     *\n     * @param {Object} templateInfo Template metadata to add effect to\n     * @param {string} prop Property that should trigger the effect\n     * @param {Object=} effect Effect metadata object\n     * @protected\n     */\n    static _addTemplatePropertyEffect(templateInfo, prop, effect) {\n      let hostProps = templateInfo.hostProps = templateInfo.hostProps || {};\n      hostProps[prop] = true;\n      let effects = templateInfo.propertyEffects = templateInfo.propertyEffects || {};\n      let propEffects = effects[prop] = effects[prop] || [];\n      propEffects.push(effect);\n    }\n\n    /**\n     * Stamps the provided template and performs instance-time setup for\n     * Polymer template features, including data bindings, declarative event\n     * listeners, and the `this.$` map of `id`'s to nodes.  A document fragment\n     * is returned containing the stamped DOM, ready for insertion into the\n     * DOM.\n     *\n     * This method may be called more than once; however note that due to\n     * `shadycss` polyfill limitations, only styles from templates prepared\n     * using `ShadyCSS.prepareTemplate` will be correctly polyfilled (scoped\n     * to the shadow root and support CSS custom properties), and note that\n     * `ShadyCSS.prepareTemplate` may only be called once per element. As such,\n     * any styles required by in runtime-stamped templates must be included\n     * in the main element template.\n     *\n     * @param {!HTMLTemplateElement} template Template to stamp\n     * @return {!StampedTemplate} Cloned template content\n     * @override\n     * @protected\n     */\n    _stampTemplate(template) {\n      // Ensures that created dom is `_enqueueClient`'d to this element so\n      // that it can be flushed on next call to `_flushProperties`\n      hostStack.beginHosting(this);\n      let dom = super._stampTemplate(template);\n      hostStack.endHosting(this);\n      let templateInfo = /** @type {!TemplateInfo} */(this._bindTemplate(template, true));\n      // Add template-instance-specific data to instanced templateInfo\n      templateInfo.nodeList = dom.nodeList;\n      // Capture child nodes to allow unstamping of non-prototypical templates\n      if (!templateInfo.wasPreBound) {\n        let nodes = templateInfo.childNodes = [];\n        for (let n=dom.firstChild; n; n=n.nextSibling) {\n          nodes.push(n);\n        }\n      }\n      dom.templateInfo = templateInfo;\n      // Setup compound storage, 2-way listeners, and dataHost for bindings\n      setupBindings(this, templateInfo);\n      // Flush properties into template nodes if already booted\n      if (this.__dataReady) {\n        runEffects(this, templateInfo.propertyEffects, this.__data, null,\n          false, templateInfo.nodeList);\n      }\n      return dom;\n    }\n\n    /**\n     * Removes and unbinds the nodes previously contained in the provided\n     * DocumentFragment returned from `_stampTemplate`.\n     *\n     * @param {!StampedTemplate} dom DocumentFragment previously returned\n     *   from `_stampTemplate` associated with the nodes to be removed\n     * @protected\n     */\n    _removeBoundDom(dom) {\n      // Unlink template info\n      let templateInfo = dom.templateInfo;\n      if (templateInfo.previousTemplateInfo) {\n        templateInfo.previousTemplateInfo.nextTemplateInfo =\n          templateInfo.nextTemplateInfo;\n      }\n      if (templateInfo.nextTemplateInfo) {\n        templateInfo.nextTemplateInfo.previousTemplateInfo =\n          templateInfo.previousTemplateInfo;\n      }\n      if (this.__templateInfoLast == templateInfo) {\n        this.__templateInfoLast = templateInfo.previousTemplateInfo;\n      }\n      templateInfo.previousTemplateInfo = templateInfo.nextTemplateInfo = null;\n      // Remove stamped nodes\n      let nodes = templateInfo.childNodes;\n      for (let i=0; i<nodes.length; i++) {\n        let node = nodes[i];\n        node.parentNode.removeChild(node);\n      }\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * parsing bindings from `TextNode`'s' `textContent`.  A `bindings`\n     * array is added to `nodeInfo` and populated with binding metadata\n     * with information capturing the binding target, and a `parts` array\n     * with one or more metadata objects capturing the source(s) of the\n     * binding.\n     *\n     * @override\n     * @param {Node} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _parseTemplateNode(node, templateInfo, nodeInfo) {\n      let noted = super._parseTemplateNode(node, templateInfo, nodeInfo);\n      if (node.nodeType === Node.TEXT_NODE) {\n        let parts = this._parseBindings(node.textContent, templateInfo);\n        if (parts) {\n          // Initialize the textContent with any literal parts\n          // NOTE: default to a space here so the textNode remains; some browsers\n          // (IE) evacipate an empty textNode following cloneNode/importNode.\n          node.textContent = literalFromParts(parts) || ' ';\n          addBinding(this, templateInfo, nodeInfo, 'text', 'textContent', parts);\n          noted = true;\n        }\n      }\n      return noted;\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * parsing bindings from attributes.  A `bindings`\n     * array is added to `nodeInfo` and populated with binding metadata\n     * with information capturing the binding target, and a `parts` array\n     * with one or more metadata objects capturing the source(s) of the\n     * binding.\n     *\n     * @override\n     * @param {Element} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n      let parts = this._parseBindings(value, templateInfo);\n      if (parts) {\n        // Attribute or property\n        let origName = name;\n        let kind = 'property';\n        if (name[name.length-1] == '$') {\n          name = name.slice(0, -1);\n          kind = 'attribute';\n        }\n        // Initialize attribute bindings with any literal parts\n        let literal = literalFromParts(parts);\n        if (literal && kind == 'attribute') {\n          node.setAttribute(name, literal);\n        }\n        // Clear attribute before removing, since IE won't allow removing\n        // `value` attribute if it previously had a value (can't\n        // unconditionally set '' before removing since attributes with `$`\n        // can't be set using setAttribute)\n        if (node.localName === 'input' && origName === 'value') {\n          node.setAttribute(origName, '');\n        }\n        // Remove annotation\n        node.removeAttribute(origName);\n        // Case hackery: attributes are lower-case, but bind targets\n        // (properties) are case sensitive. Gambit is to map dash-case to\n        // camel-case: `foo-bar` becomes `fooBar`.\n        // Attribute bindings are excepted.\n        if (kind === 'property') {\n          name = dashToCamelCase(name);\n        }\n        addBinding(this, templateInfo, nodeInfo, kind, name, parts, literal);\n        return true;\n      } else {\n        return super._parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value);\n      }\n    }\n\n    /**\n     * Overrides default `TemplateStamp` implementation to add support for\n     * binding the properties that a nested template depends on to the template\n     * as `_host_<property>`.\n     *\n     * @override\n     * @param {Node} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template node\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     * @protected\n     * @suppress {missingProperties} Interfaces in closure do not inherit statics, but classes do\n     */\n    static _parseTemplateNestedTemplate(node, templateInfo, nodeInfo) {\n      let noted = super._parseTemplateNestedTemplate(node, templateInfo, nodeInfo);\n      // Merge host props into outer template and add bindings\n      let hostProps = nodeInfo.templateInfo.hostProps;\n      let mode = '{';\n      for (let source in hostProps) {\n        let parts = [{ mode, source, dependencies: [source] }];\n        addBinding(this, templateInfo, nodeInfo, 'property', '_host_' + source, parts);\n      }\n      return noted;\n    }\n\n    /**\n     * Called to parse text in a template (either attribute values or\n     * textContent) into binding metadata.\n     *\n     * Any overrides of this method should return an array of binding part\n     * metadata  representing one or more bindings found in the provided text\n     * and any \"literal\" text in between.  Any non-literal parts will be passed\n     * to `_evaluateBinding` when any dependencies change.  The only required\n     * fields of each \"part\" in the returned array are as follows:\n     *\n     * - `dependencies` - Array containing trigger metadata for each property\n     *   that should trigger the binding to update\n     * - `literal` - String containing text if the part represents a literal;\n     *   in this case no `dependencies` are needed\n     *\n     * Additional metadata for use by `_evaluateBinding` may be provided in\n     * each part object as needed.\n     *\n     * The default implementation handles the following types of bindings\n     * (one or more may be intermixed with literal strings):\n     * - Property binding: `[[prop]]`\n     * - Path binding: `[[object.prop]]`\n     * - Negated property or path bindings: `[[!prop]]` or `[[!object.prop]]`\n     * - Two-way property or path bindings (supports negation):\n     *   `{{prop}}`, `{{object.prop}}`, `{{!prop}}` or `{{!object.prop}}`\n     * - Inline computed method (supports negation):\n     *   `[[compute(a, 'literal', b)]]`, `[[!compute(a, 'literal', b)]]`\n     *\n     * @param {string} text Text to parse from attribute or textContent\n     * @param {Object} templateInfo Current template metadata\n     * @return {Array<!BindingPart>} Array of binding part metadata\n     * @protected\n     */\n    static _parseBindings(text, templateInfo) {\n      let parts = [];\n      let lastIndex = 0;\n      let m;\n      // Example: \"literal1{{prop}}literal2[[!compute(foo,bar)]]final\"\n      // Regex matches:\n      //        Iteration 1:  Iteration 2:\n      // m[1]: '{{'          '[['\n      // m[2]: ''            '!'\n      // m[3]: 'prop'        'compute(foo,bar)'\n      while ((m = bindingRegex.exec(text)) !== null) {\n        // Add literal part\n        if (m.index > lastIndex) {\n          parts.push({literal: text.slice(lastIndex, m.index)});\n        }\n        // Add binding part\n        let mode = m[1][0];\n        let negate = Boolean(m[2]);\n        let source = m[3].trim();\n        let customEvent = false, notifyEvent = '', colon = -1;\n        if (mode == '{' && (colon = source.indexOf('::')) > 0) {\n          notifyEvent = source.substring(colon + 2);\n          source = source.substring(0, colon);\n          customEvent = true;\n        }\n        let signature = parseMethod(source);\n        let dependencies = [];\n        if (signature) {\n          // Inline computed function\n          let {args, methodName} = signature;\n          for (let i=0; i<args.length; i++) {\n            let arg = args[i];\n            if (!arg.literal) {\n              dependencies.push(arg);\n            }\n          }\n          let dynamicFns = templateInfo.dynamicFns;\n          if (dynamicFns && dynamicFns[methodName] || signature.static) {\n            dependencies.push(methodName);\n            signature.dynamicFn = true;\n          }\n        } else {\n          // Property or path\n          dependencies.push(source);\n        }\n        parts.push({\n          source, mode, negate, customEvent, signature, dependencies,\n          event: notifyEvent\n        });\n        lastIndex = bindingRegex.lastIndex;\n      }\n      // Add a final literal part\n      if (lastIndex && lastIndex < text.length) {\n        let literal = text.substring(lastIndex);\n        if (literal) {\n          parts.push({\n            literal: literal\n          });\n        }\n      }\n      if (parts.length) {\n        return parts;\n      } else {\n        return null;\n      }\n    }\n\n    /**\n     * Called to evaluate a previously parsed binding part based on a set of\n     * one or more changed dependencies.\n     *\n     * @param {this} inst Element that should be used as scope for\n     *   binding dependencies\n     * @param {BindingPart} part Binding part metadata\n     * @param {string} path Property/path that triggered this effect\n     * @param {Object} props Bag of current property changes\n     * @param {Object} oldProps Bag of previous values for changed properties\n     * @param {boolean} hasPaths True with `props` contains one or more paths\n     * @return {*} Value the binding part evaluated to\n     * @protected\n     */\n    static _evaluateBinding(inst, part, path, props, oldProps, hasPaths) {\n      let value;\n      if (part.signature) {\n        value = runMethodEffect(inst, path, props, oldProps, part.signature);\n      } else if (path != part.source) {\n        value = get$0(inst, part.source);\n      } else {\n        if (hasPaths && isPath$0(path)) {\n          value = get$0(inst, path);\n        } else {\n          value = inst.__data[path];\n        }\n      }\n      if (part.negate) {\n        value = !value;\n      }\n      return value;\n    }\n\n  }\n\n  // make a typing for closure :P\n  PropertyEffectsType = PropertyEffects;\n\n  return PropertyEffects;\n});\n\n/**\n * Helper api for enqueing client dom created by a host element.\n *\n * By default elements are flushed via `_flushProperties` when\n * `connectedCallback` is called. Elements attach their client dom to\n * themselves at `ready` time which results from this first flush.\n * This provides an ordering guarantee that the client dom an element\n * creates is flushed before the element itself (i.e. client `ready`\n * fires before host `ready`).\n *\n * However, if `_flushProperties` is called *before* an element is connected,\n * as for example `Templatize` does, this ordering guarantee cannot be\n * satisfied because no elements are connected. (Note: Bound elements that\n * receive data do become enqueued clients and are properly ordered but\n * unbound elements are not.)\n *\n * To maintain the desired \"client before host\" ordering guarantee for this\n * case we rely on the \"host stack. Client nodes registers themselves with\n * the creating host element when created. This ensures that all client dom\n * is readied in the proper order, maintaining the desired guarantee.\n *\n * @private\n */\nlet hostStack = {\n\n  stack: [],\n\n  /**\n   * @param {*} inst Instance to add to hostStack\n   * @this {hostStack}\n   */\n  registerHost(inst) {\n    if (this.stack.length) {\n      let host = this.stack[this.stack.length-1];\n      host._enqueueClient(inst);\n    }\n  },\n\n  /**\n   * @param {*} inst Instance to begin hosting\n   * @this {hostStack}\n   */\n  beginHosting(inst) {\n    this.stack.push(inst);\n  },\n\n  /**\n   * @param {*} inst Instance to end hosting\n   * @this {hostStack}\n   */\n  endHosting(inst) {\n    let stackLen = this.stack.length;\n    if (stackLen && this.stack[stackLen-1] == inst) {\n      this.stack.pop();\n    }\n  }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/mixins/property-effects.js","import '../utils/boot.js';\nimport { dedupingMixin } from '../utils/mixin.js';\nimport * as caseMap$0 from '../utils/case-map.js';\nimport { microTask } from '../utils/async.js';\n\nlet caseMap = caseMap$0;\n\nlet microtask = microTask;\n\n// Save map of native properties; this forms a blacklist or properties\n// that won't have their values \"saved\" by `saveAccessorValue`, since\n// reading from an HTMLElement accessor from the context of a prototype throws\nconst nativeProperties = {};\nlet proto = HTMLElement.prototype;\nwhile (proto) {\n  let props = Object.getOwnPropertyNames(proto);\n  for (let i=0; i<props.length; i++) {\n    nativeProperties[props[i]] = true;\n  }\n  proto = Object.getPrototypeOf(proto);\n}\n\n/**\n * Used to save the value of a property that will be overridden with\n * an accessor. If the `model` is a prototype, the values will be saved\n * in `__dataProto`, and it's up to the user (or downstream mixin) to\n * decide how/when to set these values back into the accessors.\n * If `model` is already an instance (it has a `__data` property), then\n * the value will be set as a pending property, meaning the user should\n * call `_invalidateProperties` or `_flushProperties` to take effect\n *\n * @param {Object} model Prototype or instance\n * @param {string} property Name of property\n * @private\n */\nfunction saveAccessorValue(model, property) {\n  // Don't read/store value for any native properties since they could throw\n  if (!nativeProperties[property]) {\n    let value = model[property];\n    if (value !== undefined) {\n      if (model.__data) {\n        // Adding accessor to instance; update the property\n        // It is the user's responsibility to call _flushProperties\n        model._setPendingProperty(property, value);\n      } else {\n        // Adding accessor to proto; save proto's value for instance-time use\n        if (!model.__dataProto) {\n          model.__dataProto = {};\n        } else if (!model.hasOwnProperty(JSCompiler_renameProperty('__dataProto', model))) {\n          model.__dataProto = Object.create(model.__dataProto);\n        }\n        model.__dataProto[property] = value;\n      }\n    }\n  }\n}\n\nexport const PropertyAccessors = dedupingMixin(superClass => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_PropertyAccessors}\n   * @extends HTMLElement\n   * @unrestricted\n   */\n  class PropertyAccessors extends superClass {\n\n    /**\n     * Generates property accessors for all attributes in the standard\n     * static `observedAttributes` array.\n     *\n     * Attribute names are mapped to property names using the `dash-case` to\n     * `camelCase` convention\n     *\n     */\n    static createPropertiesForAttributes() {\n      let a$ = this.observedAttributes;\n      for (let i=0; i < a$.length; i++) {\n        this.prototype._createPropertyAccessor(caseMap.dashToCamelCase(a$[i]));\n      }\n    }\n\n    constructor() {\n      super();\n      /** @type {boolean} */\n      this.__serializing;\n      /** @type {number} */\n      this.__dataCounter;\n      /** @type {boolean} */\n      this.__dataEnabled;\n      /** @type {boolean} */\n      this.__dataReady;\n      /** @type {boolean} */\n      this.__dataInvalid;\n      /** @type {!Object} */\n      this.__data;\n      /** @type {Object} */\n      this.__dataPending;\n      /** @type {Object} */\n      this.__dataOld;\n      /** @type {Object} */\n      this.__dataProto;\n      /** @type {Object} */\n      this.__dataHasAccessor;\n      /** @type {Object} */\n      this.__dataInstanceProps;\n      this._initializeProperties();\n    }\n\n    /**\n     * Implements native Custom Elements `attributeChangedCallback` to\n     * set an attribute value to a property via `_attributeToProperty`.\n     *\n     * @param {string} name Name of attribute that changed\n     * @param {?string} old Old attribute value\n     * @param {?string} value New attribute value\n     */\n    attributeChangedCallback(name, old, value) {\n      if (old !== value) {\n        this._attributeToProperty(name, value);\n      }\n    }\n\n    /**\n     * Initializes the local storage for property accessors.\n     *\n     * Provided as an override point for performing any setup work prior\n     * to initializing the property accessor system.\n     *\n     * @protected\n     */\n    _initializeProperties() {\n      this.__serializing = false;\n      this.__dataCounter = 0;\n      this.__dataEnabled = false;\n      this.__dataReady = false;\n      this.__dataInvalid = false;\n      this.__data = {};\n      this.__dataPending = null;\n      this.__dataOld = null;\n      if (this.__dataProto) {\n        this._initializeProtoProperties(this.__dataProto);\n        this.__dataProto = null;\n      }\n      // Capture instance properties; these will be set into accessors\n      // during first flush. Don't set them here, since we want\n      // these to overwrite defaults/constructor assignments\n      for (let p in this.__dataHasAccessor) {\n        if (this.hasOwnProperty(p)) {\n          this.__dataInstanceProps = this.__dataInstanceProps || {};\n          this.__dataInstanceProps[p] = this[p];\n          delete this[p];\n        }\n      }\n    }\n\n    /**\n     * Called at instance time with bag of properties that were overwritten\n     * by accessors on the prototype when accessors were created.\n     *\n     * The default implementation sets these properties back into the\n     * setter at instance time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @protected\n     */\n    _initializeProtoProperties(props) {\n      for (let p in props) {\n        this._setProperty(p, props[p]);\n      }\n    }\n\n    /**\n     * Called at ready time with bag of instance properties that overwrote\n     * accessors when the element upgraded.\n     *\n     * The default implementation sets these properties back into the\n     * setter at ready time.  This method is provided as an override\n     * point for customizing or providing more efficient initialization.\n     *\n     * @param {Object} props Bag of property values that were overwritten\n     *   when creating property accessors.\n     * @protected\n     */\n    _initializeInstanceProperties(props) {\n      Object.assign(this, props);\n    }\n\n    /**\n     * Ensures the element has the given attribute. If it does not,\n     * assigns the given value to the attribute.\n     *\n     *\n     * @param {string} attribute Name of attribute to ensure is set.\n     * @param {string} value of the attribute.\n     */\n    _ensureAttribute(attribute, value) {\n      if (!this.hasAttribute(attribute)) {\n        this._valueToNodeAttribute(this, value, attribute);\n      }\n    }\n\n    /**\n     * Deserializes an attribute to its associated property.\n     *\n     * This method calls the `_deserializeValue` method to convert the string to\n     * a typed value.\n     *\n     * @param {string} attribute Name of attribute to deserialize.\n     * @param {?string} value of the attribute.\n     * @param {*=} type type to deserialize to.\n     */\n    _attributeToProperty(attribute, value, type) {\n      // Don't deserialize back to property if currently reflecting\n      if (!this.__serializing) {\n        let property = caseMap.dashToCamelCase(attribute);\n        this[property] = this._deserializeValue(value, type);\n      }\n    }\n\n    /**\n     * Serializes a property to its associated attribute.\n     *\n     * @param {string} property Property name to reflect.\n     * @param {string=} attribute Attribute name to reflect.\n     * @param {*=} value Property value to refect.\n     */\n    _propertyToAttribute(property, attribute, value) {\n      this.__serializing = true;\n      value = (arguments.length < 3) ? this[property] : value;\n      this._valueToNodeAttribute(this, value,\n        attribute || caseMap.camelToDashCase(property));\n      this.__serializing = false;\n    }\n\n    /**\n     * Sets a typed value to an HTML attribute on a node.\n     *\n     * This method calls the `_serializeValue` method to convert the typed\n     * value to a string.  If the `_serializeValue` method returns `undefined`,\n     * the attribute will be removed (this is the default for boolean\n     * type `false`).\n     *\n     * @param {Element} node Element to set attribute to.\n     * @param {*} value Value to serialize.\n     * @param {string} attribute Attribute name to serialize to.\n     */\n    _valueToNodeAttribute(node, value, attribute) {\n      let str = this._serializeValue(value);\n      if (str === undefined) {\n        node.removeAttribute(attribute);\n      } else {\n        node.setAttribute(attribute, str);\n      }\n    }\n\n    /**\n     * Converts a typed JavaScript value to a string.\n     *\n     * This method is called by Polymer when setting JS property values to\n     * HTML attributes.  Users may override this method on Polymer element\n     * prototypes to provide serialization for custom types.\n     *\n     * @param {*} value Property value to serialize.\n     * @return {string | undefined} String serialized from the provided property value.\n     */\n    _serializeValue(value) {\n      /* eslint-disable no-fallthrough */\n      switch (typeof value) {\n        case 'boolean':\n          return value ? '' : undefined;\n\n        case 'object':\n          if (value instanceof Date) {\n            return value.toString();\n          } else if (value) {\n            try {\n              return JSON.stringify(value);\n            } catch(x) {\n              return '';\n            }\n          }\n\n        default:\n          return value != null ? value.toString() : undefined;\n      }\n    }\n\n    /**\n     * Converts a string to a typed JavaScript value.\n     *\n     * This method is called by Polymer when reading HTML attribute values to\n     * JS properties.  Users may override this method on Polymer element\n     * prototypes to provide deserialization for custom `type`s.  Note,\n     * the `type` argument is the value of the `type` field provided in the\n     * `properties` configuration object for a given property, and is\n     * by convention the constructor for the type to deserialize.\n     *\n     * Note: The return value of `undefined` is used as a sentinel value to\n     * indicate the attribute should be removed.\n     *\n     * @param {?string} value Attribute value to deserialize.\n     * @param {*=} type Type to deserialize the string to.\n     * @return {*} Typed value deserialized from the provided string.\n     */\n    _deserializeValue(value, type) {\n      /**\n       * @type {*}\n       */\n      let outValue;\n      switch (type) {\n        case Number:\n          outValue = Number(value);\n          break;\n\n        case Boolean:\n          outValue = (value !== null);\n          break;\n\n        case Object:\n          try {\n            outValue = JSON.parse(/** @type string */(value));\n          } catch(x) {\n            // allow non-JSON literals like Strings and Numbers\n          }\n          break;\n\n        case Array:\n          try {\n            outValue = JSON.parse(/** @type string */(value));\n          } catch(x) {\n            outValue = null;\n            console.warn(`Polymer::Attributes: couldn't decode Array as JSON: ${value}`);\n          }\n          break;\n\n        case Date:\n          outValue = new Date(value);\n          break;\n\n        case String:\n        default:\n          outValue = value;\n          break;\n      }\n\n      return outValue;\n    }\n    /* eslint-enable no-fallthrough */\n\n    /**\n     * Creates a setter/getter pair for the named property with its own\n     * local storage.  The getter returns the value in the local storage,\n     * and the setter calls `_setProperty`, which updates the local storage\n     * for the property and enqueues a `_propertiesChanged` callback.\n     *\n     * This method may be called on a prototype or an instance.  Calling\n     * this method may overwrite a property value that already exists on\n     * the prototype/instance by creating the accessor.  When calling on\n     * a prototype, any overwritten values are saved in `__dataProto`,\n     * and it is up to the subclasser to decide how/when to set those\n     * properties back into the accessor.  When calling on an instance,\n     * the overwritten value is set via `_setPendingProperty`, and the\n     * user should call `_invalidateProperties` or `_flushProperties`\n     * for the values to take effect.\n     *\n     * @param {string} property Name of the property\n     * @param {boolean=} readOnly When true, no setter is created; the\n     *   protected `_setProperty` function must be used to set the property\n     * @protected\n     */\n    _createPropertyAccessor(property, readOnly) {\n      if (!this.hasOwnProperty('__dataHasAccessor')) {\n        this.__dataHasAccessor = Object.assign({}, this.__dataHasAccessor);\n      }\n      if (!this.__dataHasAccessor[property]) {\n        this.__dataHasAccessor[property] = true;\n        saveAccessorValue(this, property);\n        Object.defineProperty(this, property, {\n          /* eslint-disable valid-jsdoc */\n          /** @this {PropertyAccessors} */\n          get: function() {\n            return this.__data[property];\n          },\n          /** @this {PropertyAccessors} */\n          set: readOnly ? function() {} : function(value) {\n            this._setProperty(property, value);\n          }\n          /* eslint-enable */\n        });\n      }\n    }\n\n    /**\n     * Returns true if this library created an accessor for the given property.\n     *\n     * @param {string} property Property name\n     * @return {boolean} True if an accessor was created\n     */\n    _hasAccessor(property) {\n      return this.__dataHasAccessor && this.__dataHasAccessor[property];\n    }\n\n    /**\n     * Updates the local storage for a property (via `_setPendingProperty`)\n     * and enqueues a `_proeprtiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @protected\n     */\n    _setProperty(property, value) {\n      if (this._setPendingProperty(property, value)) {\n        this._invalidateProperties();\n      }\n    }\n\n    /**\n     * Updates the local storage for a property, records the previous value,\n     * and adds it to the set of \"pending changes\" that will be passed to the\n     * `_propertiesChanged` callback.  This method does not enqueue the\n     * `_propertiesChanged` callback.\n     *\n     * @param {string} property Name of the property\n     * @param {*} value Value to set\n     * @return {boolean} Returns true if the property changed\n     * @protected\n     */\n    _setPendingProperty(property, value) {\n      let old = this.__data[property];\n      let changed = this._shouldPropertyChange(property, value, old);\n      if (changed) {\n        if (!this.__dataPending) {\n          this.__dataPending = {};\n          this.__dataOld = {};\n        }\n        // Ensure old is captured from the last turn\n        if (this.__dataOld && !(property in this.__dataOld)) {\n          this.__dataOld[property] = old;\n        }\n        this.__data[property] = value;\n        this.__dataPending[property] = value;\n      }\n      return changed;\n    }\n\n    /**\n     * Returns true if the specified property has a pending change.\n     *\n     * @param {string} prop Property name\n     * @return {boolean} True if property has a pending change\n     * @protected\n     */\n    _isPropertyPending(prop) {\n      return Boolean(this.__dataPending && (prop in this.__dataPending));\n    }\n\n    /**\n     * Marks the properties as invalid, and enqueues an async\n     * `_propertiesChanged` callback.\n     *\n     * @protected\n     */\n    _invalidateProperties() {\n      if (!this.__dataInvalid && this.__dataReady) {\n        this.__dataInvalid = true;\n        microtask.run(() => {\n          if (this.__dataInvalid) {\n            this.__dataInvalid = false;\n            this._flushProperties();\n          }\n        });\n      }\n    }\n\n    /**\n     * Call to enable property accessor processing. Before this method is\n     * called accessor values will be set but side effects are\n     * queued. When called, any pending side effects occur immediately.\n     * For elements, generally `connectedCallback` is a normal spot to do so.\n     * It is safe to call this method multiple times as it only turns on\n     * property accessors once.\n     */\n    _enableProperties() {\n      if (!this.__dataEnabled) {\n        this.__dataEnabled = true;\n        if (this.__dataInstanceProps) {\n          this._initializeInstanceProperties(this.__dataInstanceProps);\n          this.__dataInstanceProps = null;\n        }\n        this.ready();\n      }\n    }\n\n    /**\n     * Calls the `_propertiesChanged` callback with the current set of\n     * pending changes (and old values recorded when pending changes were\n     * set), and resets the pending set of changes. Generally, this method\n     * should not be called in user code.\n     *\n     *\n     * @protected\n     */\n    _flushProperties() {\n      if (this.__dataPending && this.__dataOld) {\n        let changedProps = this.__dataPending;\n        this.__dataPending = null;\n        this.__dataCounter++;\n        this._propertiesChanged(this.__data, changedProps, this.__dataOld);\n        this.__dataCounter--;\n      }\n    }\n\n    /**\n     * Lifecycle callback called the first time properties are being flushed.\n     * Prior to `ready`, all property sets through accessors are queued and\n     * their effects are flushed after this method returns.\n     *\n     * Users may override this function to implement behavior that is\n     * dependent on the element having its properties initialized, e.g.\n     * from defaults (initialized from `constructor`, `_initializeProperties`),\n     * `attributeChangedCallback`, or values propagated from host e.g. via\n     * bindings.  `super.ready()` must be called to ensure the data system\n     * becomes enabled.\n     *\n     * @public\n     */\n    ready() {\n      this.__dataReady = true;\n      // Run normal flush\n      this._flushProperties();\n    }\n\n    /**\n     * Callback called when any properties with accessors created via\n     * `_createPropertyAccessor` have been set.\n     *\n     * @param {!Object} currentProps Bag of all current accessor values\n     * @param {!Object} changedProps Bag of properties changed since the last\n     *   call to `_propertiesChanged`\n     * @param {!Object} oldProps Bag of previous values for each property\n     *   in `changedProps`\n     * @protected\n     */\n    _propertiesChanged(currentProps, changedProps, oldProps) { // eslint-disable-line no-unused-vars\n    }\n\n    /**\n     * Method called to determine whether a property value should be\n     * considered as a change and cause the `_propertiesChanged` callback\n     * to be enqueued.\n     *\n     * The default implementation returns `true` for primitive types if a\n     * strict equality check fails, and returns `true` for all Object/Arrays.\n     * The method always returns false for `NaN`.\n     *\n     * Override this method to e.g. provide stricter checking for\n     * Objects/Arrays when using immutable patterns.\n     *\n     * @param {string} property Property name\n     * @param {*} value New property value\n     * @param {*} old Previous property value\n     * @return {boolean} Whether the property should be considered a change\n     *   and enqueue a `_proeprtiesChanged` callback\n     * @protected\n     */\n    _shouldPropertyChange(property, value, old) {\n      return (\n        // Strict equality check\n        (old !== value &&\n         // This ensures (old==NaN, value==NaN) always returns false\n         (old === old || value === value))\n      );\n    }\n\n  }\n\n  return PropertyAccessors;\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/mixins/property-accessors.js","import './boot.js';\n\n/** @typedef {{run: function(function(), number=):number, cancel: function(number)}} */\nlet AsyncInterface; // eslint-disable-line no-unused-vars\n\n// Microtask implemented using Mutation Observer\nlet microtaskCurrHandle = 0;\nlet microtaskLastHandle = 0;\nlet microtaskCallbacks = [];\nlet microtaskNodeContent = 0;\nlet microtaskNode = document.createTextNode('');\nnew window.MutationObserver(microtaskFlush).observe(microtaskNode, {characterData: true});\n\nfunction microtaskFlush() {\n  const len = microtaskCallbacks.length;\n  for (let i = 0; i < len; i++) {\n    let cb = microtaskCallbacks[i];\n    if (cb) {\n      try {\n        cb();\n      } catch (e) {\n        setTimeout(() => { throw e; });\n      }\n    }\n  }\n  microtaskCallbacks.splice(0, len);\n  microtaskLastHandle += len;\n}\n\nexport const timeOut = {\n  /**\n   * Returns a sub-module with the async interface providing the provided\n   * delay.\n   *\n   * @memberof Polymer.Async.timeOut\n   * @param {number} delay Time to wait before calling callbacks in ms\n   * @return {AsyncInterface} An async timeout interface\n   */\n  after(delay) {\n    return  {\n      run(fn) { return setTimeout(fn, delay); },\n      cancel: window.clearTimeout.bind(window)\n    };\n  },\n  /**\n   * Enqueues a function called in the next task.\n   *\n   * @memberof Polymer.Async.timeOut\n   * @param {Function} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run: window.setTimeout.bind(window),\n  /**\n   * Cancels a previously enqueued `timeOut` callback.\n   *\n   * @memberof Polymer.Async.timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   */\n  cancel: window.clearTimeout.bind(window)\n};\n\nexport const animationFrame = {\n  /**\n   * Enqueues a function called at `requestAnimationFrame` timing.\n   *\n   * @memberof Polymer.Async.animationFrame\n   * @param {Function} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run: window.requestAnimationFrame.bind(window),\n  /**\n   * Cancels a previously enqueued `animationFrame` callback.\n   *\n   * @memberof Polymer.Async.timeOut\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   */\n  cancel: window.cancelAnimationFrame.bind(window)\n};\n\nexport const idlePeriod = {\n  /**\n   * Enqueues a function called at `requestIdleCallback` timing.\n   *\n   * @memberof Polymer.Async.idlePeriod\n   * @param {function(IdleDeadline)} fn Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(fn) {\n    return window.requestIdleCallback ?\n      window.requestIdleCallback(fn) :\n      window.setTimeout(fn, 16);\n  },\n  /**\n   * Cancels a previously enqueued `idlePeriod` callback.\n   *\n   * @memberof Polymer.Async.idlePeriod\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   */\n  cancel(handle) {\n    window.cancelIdleCallback ?\n      window.cancelIdleCallback(handle) :\n      window.clearTimeout(handle);\n  }\n};\n\nexport const microTask = {\n\n  /**\n   * Enqueues a function called at microtask timing.\n   *\n   * @memberof Polymer.Async.microTask\n   * @param {Function} callback Callback to run\n   * @return {number} Handle used for canceling task\n   */\n  run(callback) {\n    microtaskNode.textContent = microtaskNodeContent++;\n    microtaskCallbacks.push(callback);\n    return microtaskCurrHandle++;\n  },\n\n  /**\n   * Cancels a previously enqueued `microTask` callback.\n   *\n   * @memberof Polymer.Async.microTask\n   * @param {number} handle Handle returned from `run` of callback to cancel\n   */\n  cancel(handle) {\n    const idx = handle - microtaskLastHandle;\n    if (idx >= 0) {\n      if (!microtaskCallbacks[idx]) {\n        throw new Error('invalid async handle: ' + handle);\n      }\n      microtaskCallbacks[idx] = null;\n    }\n  }\n\n};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/async.js","import '../utils/boot.js';\nimport { dedupingMixin } from '../utils/mixin.js';\n\n// 1.x backwards-compatible auto-wrapper for template type extensions\n// This is a clear layering violation and gives favored-nation status to\n// dom-if and dom-repeat templates.  This is a conceit we're choosing to keep\n// a.) to ease 1.x backwards-compatibility due to loss of `is`, and\n// b.) to maintain if/repeat capability in parser-constrained elements\n//     (e.g. table, select) in lieu of native CE type extensions without\n//     massive new invention in this space (e.g. directive system)\nconst templateExtensions = {\n  'dom-if': true,\n  'dom-repeat': true\n};\nfunction wrapTemplateExtension(node) {\n  let is = node.getAttribute('is');\n  if (is && templateExtensions[is]) {\n    let t = node;\n    t.removeAttribute('is');\n    node = t.ownerDocument.createElement(is);\n    t.parentNode.replaceChild(node, t);\n    node.appendChild(t);\n    while(t.attributes.length) {\n      node.setAttribute(t.attributes[0].name, t.attributes[0].value);\n      t.removeAttribute(t.attributes[0].name);\n    }\n  }\n  return node;\n}\n\nfunction findTemplateNode(root, nodeInfo) {\n  // recursively ascend tree until we hit root\n  let parent = nodeInfo.parentInfo && findTemplateNode(root, nodeInfo.parentInfo);\n  // unwind the stack, returning the indexed node at each level\n  if (parent) {\n    // note: marginally faster than indexing via childNodes\n    // (http://jsperf.com/childnodes-lookup)\n    for (let n=parent.firstChild, i=0; n; n=n.nextSibling) {\n      if (nodeInfo.parentIndex === i++) {\n        return n;\n      }\n    }\n  } else {\n    return root;\n  }\n}\n\n// construct `$` map (from id annotations)\nfunction applyIdToMap(inst, map, node, nodeInfo) {\n  if (nodeInfo.id) {\n    map[nodeInfo.id] = node;\n  }\n}\n\n// install event listeners (from event annotations)\nfunction applyEventListener(inst, node, nodeInfo) {\n  if (nodeInfo.events && nodeInfo.events.length) {\n    for (let j=0, e$=nodeInfo.events, e; (j<e$.length) && (e=e$[j]); j++) {\n      inst._addMethodEventListenerToNode(node, e.name, e.value, inst);\n    }\n  }\n}\n\n// push configuration references at configure time\nfunction applyTemplateContent(inst, node, nodeInfo) {\n  if (nodeInfo.templateInfo) {\n    node._templateInfo = nodeInfo.templateInfo;\n  }\n}\n\nfunction createNodeEventHandler(context, eventName, methodName) {\n  // Instances can optionally have a _methodHost which allows redirecting where\n  // to find methods. Currently used by `templatize`.\n  context = context._methodHost || context;\n  let handler = function(e) {\n    if (context[methodName]) {\n      context[methodName](e, e.detail);\n    } else {\n      console.warn('listener method `' + methodName + '` not defined');\n    }\n  };\n  return handler;\n}\n\nexport const TemplateStamp = dedupingMixin(superClass => {\n\n  /**\n   * @polymer\n   * @mixinClass\n   * @implements {Polymer_TemplateStamp}\n   */\n  class TemplateStamp extends superClass {\n\n    /**\n     * Scans a template to produce template metadata.\n     *\n     * Template-specific metadata are stored in the object returned, and node-\n     * specific metadata are stored in objects in its flattened `nodeInfoList`\n     * array.  Only nodes in the template that were parsed as nodes of\n     * interest contain an object in `nodeInfoList`.  Each `nodeInfo` object\n     * contains an `index` (`childNodes` index in parent) and optionally\n     * `parent`, which points to node info of its parent (including its index).\n     *\n     * The template metadata object returned from this method has the following\n     * structure (many fields optional):\n     *\n     * ```js\n     *   {\n     *     // Flattened list of node metadata (for nodes that generated metadata)\n     *     nodeInfoList: [\n     *       {\n     *         // `id` attribute for any nodes with id's for generating `$` map\n     *         id: {string},\n     *         // `on-event=\"handler\"` metadata\n     *         events: [\n     *           {\n     *             name: {string},   // event name\n     *             value: {string},  // handler method name\n     *           }, ...\n     *         ],\n     *         // Notes when the template contained a `<slot>` for shady DOM\n     *         // optimization purposes\n     *         hasInsertionPoint: {boolean},\n     *         // For nested `<template>`` nodes, nested template metadata\n     *         templateInfo: {object}, // nested template metadata\n     *         // Metadata to allow efficient retrieval of instanced node\n     *         // corresponding to this metadata\n     *         parentInfo: {number},   // reference to parent nodeInfo>\n     *         parentIndex: {number},  // index in parent's `childNodes` collection\n     *         infoIndex: {number},    // index of this `nodeInfo` in `templateInfo.nodeInfoList`\n     *       },\n     *       ...\n     *     ],\n     *     // When true, the template had the `strip-whitespace` attribute\n     *     // or was nested in a template with that setting\n     *     stripWhitespace: {boolean},\n     *     // For nested templates, nested template content is moved into\n     *     // a document fragment stored here; this is an optimization to\n     *     // avoid the cost of nested template cloning\n     *     content: {DocumentFragment}\n     *   }\n     * ```\n     *\n     * This method kicks off a recursive treewalk as follows:\n     *\n     * ```\n     *    _parseTemplate <---------------------+\n     *      _parseTemplateContent              |\n     *        _parseTemplateNode  <------------|--+\n     *          _parseTemplateNestedTemplate --+  |\n     *          _parseTemplateChildNodes ---------+\n     *          _parseTemplateNodeAttributes\n     *            _parseTemplateNodeAttribute\n     *\n     * ```\n     *\n     * These methods may be overridden to add custom metadata about templates\n     * to either `templateInfo` or `nodeInfo`.\n     *\n     * Note that this method may be destructive to the template, in that\n     * e.g. event annotations may be removed after being noted in the\n     * template metadata.\n     *\n     * @param {!HTMLTemplateElement} template Template to parse\n     * @param {TemplateInfo=} outerTemplateInfo Template metadata from the outer\n     *   template, for parsing nested templates\n     * @return {!TemplateInfo} Parsed template metadata\n     */\n    static _parseTemplate(template, outerTemplateInfo) {\n      // since a template may be re-used, memo-ize metadata\n      if (!template._templateInfo) {\n        let templateInfo = template._templateInfo = {};\n        templateInfo.nodeInfoList = [];\n        templateInfo.stripWhiteSpace =\n          (outerTemplateInfo && outerTemplateInfo.stripWhiteSpace) ||\n          template.hasAttribute('strip-whitespace');\n        this._parseTemplateContent(template, templateInfo, {parent: null});\n      }\n      return template._templateInfo;\n    }\n\n    static _parseTemplateContent(template, templateInfo, nodeInfo) {\n      return this._parseTemplateNode(template.content, templateInfo, nodeInfo);\n    }\n\n    /**\n     * Parses template node and adds template and node metadata based on\n     * the current node, and its `childNodes` and `attributes`.\n     *\n     * This method may be overridden to add custom node or template specific\n     * metadata based on this node.\n     *\n     * @param {Node} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     */\n    static _parseTemplateNode(node, templateInfo, nodeInfo) {\n      let noted;\n      let element = /** @type Element */(node);\n      if (element.localName == 'template' && !element.hasAttribute('preserve-content')) {\n        noted = this._parseTemplateNestedTemplate(element, templateInfo, nodeInfo) || noted;\n      } else if (element.localName === 'slot') {\n        // For ShadyDom optimization, indicating there is an insertion point\n        templateInfo.hasInsertionPoint = true;\n      }\n      if (element.firstChild) {\n        noted = this._parseTemplateChildNodes(element, templateInfo, nodeInfo) || noted;\n      }\n      if (element.hasAttributes && element.hasAttributes()) {\n        noted = this._parseTemplateNodeAttributes(element, templateInfo, nodeInfo) || noted;\n      }\n      return noted;\n    }\n\n    /**\n     * Parses template child nodes for the given root node.\n     *\n     * This method also wraps whitelisted legacy template extensions\n     * (`is=\"dom-if\"` and `is=\"dom-repeat\"`) with their equivalent element\n     * wrappers, collapses text nodes, and strips whitespace from the template\n     * if the `templateInfo.stripWhitespace` setting was provided.\n     *\n     * @param {Node} root Root node whose `childNodes` will be parsed\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     */\n    static _parseTemplateChildNodes(root, templateInfo, nodeInfo) {\n      for (let node=root.firstChild, parentIndex=0, next; node; node=next) {\n        // Wrap templates\n        if (node.localName == 'template') {\n          node = wrapTemplateExtension(node);\n        }\n        // collapse adjacent textNodes: fixes an IE issue that can cause\n        // text nodes to be inexplicably split =(\n        // note that root.normalize() should work but does not so we do this\n        // manually.\n        next = node.nextSibling;\n        if (node.nodeType === Node.TEXT_NODE) {\n          let /** Node */ n = next;\n          while (n && (n.nodeType === Node.TEXT_NODE)) {\n            node.textContent += n.textContent;\n            next = n.nextSibling;\n            root.removeChild(n);\n            n = next;\n          }\n          // optionally strip whitespace\n          if (templateInfo.stripWhiteSpace && !node.textContent.trim()) {\n            root.removeChild(node);\n            continue;\n          }\n        }\n        let childInfo = { parentIndex, parentInfo: nodeInfo };\n        if (this._parseTemplateNode(node, templateInfo, childInfo)) {\n          childInfo.infoIndex = templateInfo.nodeInfoList.push(/** @type {!NodeInfo} */(childInfo)) - 1;\n        }\n        // Increment if not removed\n        if (node.parentNode) {\n          parentIndex++;\n        }\n      }\n    }\n\n    /**\n     * Parses template content for the given nested `<template>`.\n     *\n     * Nested template info is stored as `templateInfo` in the current node's\n     * `nodeInfo`. `template.content` is removed and stored in `templateInfo`.\n     * It will then be the responsibility of the host to set it back to the\n     * template and for users stamping nested templates to use the\n     * `_contentForTemplate` method to retrieve the content for this template\n     * (an optimization to avoid the cost of cloning nested template content).\n     *\n     * @param {HTMLTemplateElement} node Node to parse (a <template>)\n     * @param {TemplateInfo} outerTemplateInfo Template metadata for current template\n     *   that includes the template `node`\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     */\n    static _parseTemplateNestedTemplate(node, outerTemplateInfo, nodeInfo) {\n      let templateInfo = this._parseTemplate(node, outerTemplateInfo);\n      let content = templateInfo.content =\n        node.content.ownerDocument.createDocumentFragment();\n      content.appendChild(node.content);\n      nodeInfo.templateInfo = templateInfo;\n      return true;\n    }\n\n    /**\n     * Parses template node attributes and adds node metadata to `nodeInfo`\n     * for nodes of interest.\n     *\n     * @param {Element} node Node to parse\n     * @param {TemplateInfo} templateInfo Template metadata for current template\n     * @param {NodeInfo} nodeInfo Node metadata for current template.\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     */\n    static _parseTemplateNodeAttributes(node, templateInfo, nodeInfo) {\n      // Make copy of original attribute list, since the order may change\n      // as attributes are added and removed\n      let noted = false;\n      let attrs = Array.from(node.attributes);\n      for (let i=attrs.length-1, a; (a=attrs[i]); i--) {\n        noted = this._parseTemplateNodeAttribute(node, templateInfo, nodeInfo, a.name, a.value) || noted;\n      }\n      return noted;\n    }\n\n    /**\n     * Parses a single template node attribute and adds node metadata to\n     * `nodeInfo` for attributes of interest.\n     *\n     * This implementation adds metadata for `on-event=\"handler\"` attributes\n     * and `id` attributes.\n     *\n     * @param {Element} node Node to parse\n     * @param {!TemplateInfo} templateInfo Template metadata for current template\n     * @param {!NodeInfo} nodeInfo Node metadata for current template.\n     * @param {string} name Attribute name\n     * @param {string} value Attribute value\n     * @return {boolean} `true` if the visited node added node-specific\n     *   metadata to `nodeInfo`\n     */\n    static _parseTemplateNodeAttribute(node, templateInfo, nodeInfo, name, value) {\n      // events (on-*)\n      if (name.slice(0, 3) === 'on-') {\n        node.removeAttribute(name);\n        nodeInfo.events = nodeInfo.events || [];\n        nodeInfo.events.push({\n          name: name.slice(3),\n          value\n        });\n        return true;\n      }\n      // static id\n      else if (name === 'id') {\n        nodeInfo.id = value;\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Returns the `content` document fragment for a given template.\n     *\n     * For nested templates, Polymer performs an optimization to cache nested\n     * template content to avoid the cost of cloning deeply nested templates.\n     * This method retrieves the cached content for a given template.\n     *\n     * @param {HTMLTemplateElement} template Template to retrieve `content` for\n     * @return {DocumentFragment} Content fragment\n     */\n    static _contentForTemplate(template) {\n      let templateInfo = /** @type {HTMLTemplateElementWithInfo} */ (template)._templateInfo;\n      return (templateInfo && templateInfo.content) || template.content;\n    }\n\n    /**\n     * Clones the provided template content and returns a document fragment\n     * containing the cloned dom.\n     *\n     * The template is parsed (once and memoized) using this library's\n     * template parsing features, and provides the following value-added\n     * features:\n     * * Adds declarative event listeners for `on-event=\"handler\"` attributes\n     * * Generates an \"id map\" for all nodes with id's under `$` on returned\n     *   document fragment\n     * * Passes template info including `content` back to templates as\n     *   `_templateInfo` (a performance optimization to avoid deep template\n     *   cloning)\n     *\n     * Note that the memoized template parsing process is destructive to the\n     * template: attributes for bindings and declarative event listeners are\n     * removed after being noted in notes, and any nested `<template>.content`\n     * is removed and stored in notes as well.\n     *\n     * @param {!HTMLTemplateElement} template Template to stamp\n     * @return {!StampedTemplate} Cloned template content\n     */\n    _stampTemplate(template) {\n      // Polyfill support: bootstrap the template if it has not already been\n      if (template && !template.content &&\n          window.HTMLTemplateElement && HTMLTemplateElement.decorate) {\n        HTMLTemplateElement.decorate(template);\n      }\n      let templateInfo = this.constructor._parseTemplate(template);\n      let nodeInfo = templateInfo.nodeInfoList;\n      let content = templateInfo.content || template.content;\n      let dom = /** @type DocumentFragment */ (document.importNode(content, true));\n      // NOTE: ShadyDom optimization indicating there is an insertion point\n      dom.__noInsertionPoint = !templateInfo.hasInsertionPoint;\n      let nodes = dom.nodeList = new Array(nodeInfo.length);\n      dom.$ = {};\n      for (let i=0, l=nodeInfo.length, info; (i<l) && (info=nodeInfo[i]); i++) {\n        let node = nodes[i] = findTemplateNode(dom, info);\n        applyIdToMap(this, dom.$, node, info);\n        applyTemplateContent(this, node, info);\n        applyEventListener(this, node, info);\n      }\n      return /** @type {!StampedTemplate} */(dom);\n    }\n\n    /**\n     * Adds an event listener by method name for the event provided.\n     *\n     * This method generates a handler function that looks up the method\n     * name at handling time.\n     *\n     * @param {Node} node Node to add listener on\n     * @param {string} eventName Name of event\n     * @param {string} methodName Name of method\n     * @param {*=} context Context the method will be called on (defaults\n     *   to `node`)\n     * @return {Function} Generated handler function\n     */\n    _addMethodEventListenerToNode(node, eventName, methodName, context) {\n      context = context || node;\n      let handler = createNodeEventHandler(context, eventName, methodName);\n      this._addEventListenerToNode(node, eventName, handler);\n      return handler;\n    }\n\n    /**\n     * Override point for adding custom or simulated event handling.\n     *\n     * @param {Node} node Node to add event listener to\n     * @param {string} eventName Name of event\n     * @param {Function} handler Listener function to add\n     */\n    _addEventListenerToNode(node, eventName, handler) {\n      node.addEventListener(eventName, handler);\n    }\n\n    /**\n     * Override point for adding custom or simulated event handling.\n     *\n     * @param {Node} node Node to remove event listener from\n     * @param {string} eventName Name of event\n     * @param {Function} handler Listener function to remove\n     */\n    _removeEventListenerFromNode(node, eventName, handler) {\n      node.removeEventListener(eventName, handler);\n    }\n\n  }\n\n  return TemplateStamp;\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/mixins/template-stamp.js","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/_baseGetTag.js","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/_root.js","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/_freeGlobal.js","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/_getRawTag.js","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/_objectToString.js","import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/_getPrototype.js","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/_overArg.js","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/lodash-es/isObjectLike.js","module.exports = require('./lib/index');\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/symbol-observable/index.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ponyfill = require('./ponyfill');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar root; /* global window */\n\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = (0, _ponyfill2['default'])(root);\nexports['default'] = result;\n\n\n// WEBPACK FOOTER //\n// ../node_modules/symbol-observable/lib/index.js","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif(!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/module.js","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports['default'] = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n// WEBPACK FOOTER //\n// ../node_modules/symbol-observable/lib/ponyfill.js","import { ActionTypes } from './createStore';\nimport isPlainObject from 'lodash-es/isPlainObject';\nimport warning from './utils/warning';\n\nfunction getUndefinedStateErrorMessage(key, action) {\n  var actionType = action && action.type;\n  var actionName = actionType && '\"' + actionType.toString() + '\"' || 'an action';\n\n  return 'Given action ' + actionName + ', reducer \"' + key + '\" returned undefined. ' + 'To ignore an action, you must explicitly return the previous state. ' + 'If you want this reducer to hold no value, you can return null instead of undefined.';\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return 'The ' + argumentName + ' has unexpected type of \"' + {}.toString.call(inputState).match(/\\s([a-z|A-Z]+)/)[1] + '\". Expected argument to be an object with the following ' + ('keys: \"' + reducerKeys.join('\", \"') + '\"');\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n\n  if (unexpectedKeys.length > 0) {\n    return 'Unexpected ' + (unexpectedKeys.length > 1 ? 'keys' : 'key') + ' ' + ('\"' + unexpectedKeys.join('\", \"') + '\" found in ' + argumentName + '. ') + 'Expected to find one of the known reducer keys instead: ' + ('\"' + reducerKeys.join('\", \"') + '\". Unexpected keys will be ignored.');\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, { type: ActionTypes.INIT });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined during initialization. ' + 'If the state passed to the reducer is undefined, you must ' + 'explicitly return the initial state. The initial state may ' + 'not be undefined. If you don\\'t want to set a value for this reducer, ' + 'you can use null instead of undefined.');\n    }\n\n    var type = '@@redux/PROBE_UNKNOWN_ACTION_' + Math.random().toString(36).substring(7).split('').join('.');\n    if (typeof reducer(undefined, { type: type }) === 'undefined') {\n      throw new Error('Reducer \"' + key + '\" returned undefined when probed with a random type. ' + ('Don\\'t try to handle ' + ActionTypes.INIT + ' or other actions in \"redux/*\" ') + 'namespace. They are considered private. Instead, you must return the ' + 'current state for any unknown actions, unless it is undefined, ' + 'in which case you must return the initial state, regardless of the ' + 'action type. The initial state may not be undefined, but can be null.');\n    }\n  });\n}\n\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\nexport default function combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning('No reducer provided for key \"' + key + '\"');\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n  var finalReducerKeys = Object.keys(finalReducers);\n\n  var unexpectedKeyCache = void 0;\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError = void 0;\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination() {\n    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var action = arguments[1];\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n      if (typeof nextStateForKey === 'undefined') {\n        var errorMessage = getUndefinedStateErrorMessage(_key, action);\n        throw new Error(errorMessage);\n      }\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n    return hasChanged ? nextState : state;\n  };\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/redux/es/combineReducers.js","function bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(undefined, arguments));\n  };\n}\n\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass a single function as the first argument,\n * and get a function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\nexport default function bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error('bindActionCreators expected an object or a function, instead received ' + (actionCreators === null ? 'null' : typeof actionCreators) + '. ' + 'Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');\n  }\n\n  var keys = Object.keys(actionCreators);\n  var boundActionCreators = {};\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var actionCreator = actionCreators[key];\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n  return boundActionCreators;\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/redux/es/bindActionCreators.js","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport compose from './compose';\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\nexport default function applyMiddleware() {\n  for (var _len = arguments.length, middlewares = Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function (reducer, preloadedState, enhancer) {\n      var store = createStore(reducer, preloadedState, enhancer);\n      var _dispatch = store.dispatch;\n      var chain = [];\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch(action) {\n          return _dispatch(action);\n        }\n      };\n      chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(undefined, chain)(store.dispatch);\n\n      return _extends({}, store, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\n\n// WEBPACK FOOTER //\n// ../node_modules/redux/es/applyMiddleware.js","import { get } from '@polymer/polymer/lib/utils/path';\n\n/**\n * Polymer Redux\n *\n * Creates a Class mixin for decorating Elements with a given Redux store.\n *\n * @polymerMixin\n *\n * @param {Object} store Redux store.\n * @return {Function} Class mixin.\n */\nexport default function PolymerRedux (store) {\n  if (!store) {\n    throw new TypeError('PolymerRedux: expecting a redux store.');\n  } else if (!['getState', 'dispatch', 'subscribe'].every(k => typeof store[k] === 'function')) {\n    throw new TypeError('PolymerRedux: invalid store object.');\n  }\n\n  const subscribers = new Map();\n\n  /**\n   * Binds element's properties to state changes from the Redux store.\n   *\n   * @example\n   *     const update = bind(el, props) // set bindings\n   *     update(state) // manual update\n   *\n   * @private\n   * @param {HTMLElement} element\n   * @param {Object} properties\n   * @return {Function} Update function.\n   */\n  const bind = (element, properties) => {\n    const bindings = Object.keys(properties)\n      .filter(name => {\n        const property = properties[name];\n        if (Object.prototype.hasOwnProperty.call(property, 'statePath')) {\n          if (!property.readOnly && property.notify) {\n            console.warn(`PolymerRedux: <${element.constructor.is}>.${name} has \"notify\" enabled, two-way bindings goes against Redux's paradigm`);\n          }\n          return true;\n        }\n        return false;\n      });\n\n    /**\n     * Updates an element's properties with the given state.\n     *\n     * @private\n     * @param {Object} state\n     */\n    const update = state => {\n      let propertiesChanged = false;\n      bindings.forEach(name => { // Perhaps .reduce() to a boolean?\n        const {statePath} = properties[name];\n        const value = (typeof statePath === 'function')\n          ? statePath.call(element, state)\n          : get(state, statePath);\n\n        const changed = element._setPendingPropertyOrPath(name, value, true);\n        propertiesChanged = propertiesChanged || changed;\n      });\n      if (propertiesChanged) {\n        element._invalidateProperties();\n      }\n    };\n\n    // Redux listener\n    const unsubscribe = store.subscribe(() => {\n      const detail = store.getState();\n      update(detail);\n\n      element.dispatchEvent(new window.CustomEvent('state-changed', {detail}));\n    });\n\n    subscribers.set(element, unsubscribe);\n\n    return update(store.getState());\n  };\n\n  /**\n   * Unbinds an element from state changes in the Redux store.\n   *\n   * @private\n   * @param {HTMLElement} element\n   */\n  const unbind = element => {\n    const off = subscribers.get(element);\n    if (typeof off === 'function') {\n      off();\n    }\n  };\n\n  /**\n   * Merges a property's object value using the defaults way.\n   *\n   * @private\n   * @param {Object} what Initial prototype\n   * @param {String} which Property to collect.\n   * @return {Object} the collected values\n   */\n  const collect = (what, which) => {\n    let res = {};\n    while (what) {\n      res = Object.assign({}, what[which], res); // Respect prototype priority\n      what = Object.getPrototypeOf(what);\n    }\n    return res;\n  };\n\n  /**\n   * ReduxMixin\n   *\n   * @example\n   *     const ReduxMixin = PolymerRedux(store)\n   *     class Foo extends ReduxMixin(Polymer.Element) { }\n   *\n   * @polymerMixinClass\n   *\n   * @param {Polymer.Element} parent The polymer parent element.\n   * @return {Function} PolymerRedux mixed class.\n   */\n  return parent => class ReduxMixin extends parent {\n    constructor () {\n      super();\n\n      // Collect the action creators first as property changes trigger\n      // dispatches from observers, see #65, #66, #67\n      const actions = collect(this.constructor, 'actions');\n      Object.defineProperty(this, '_reduxActions', {\n        configurable: true,\n        value: actions\n      });\n    }\n\n    connectedCallback () {\n      super.connectedCallback();\n      const properties = collect(this.constructor, 'properties');\n      bind(this, properties);\n    }\n\n    disconnectedCallback () {\n      super.disconnectedCallback();\n      unbind(this);\n    }\n\n    /**\n     * Dispatches an action to the Redux store.\n     *\n     * @example\n     *     element.dispatch({ type: 'ACTION' })\n     *\n     * @example\n     *     element.dispatch('actionCreator', 'foo', 'bar')\n     *\n     * @example\n     *     element.dispatch((dispatch) => {\n     *         dispatch({ type: 'MIDDLEWARE'})\n     *     })\n     *\n     * @param  {...*} args\n     * @return {Object} The action.\n     */\n    dispatch (...args) {\n      const actions = this._reduxActions;\n\n      // Action creator\n      let [action] = args;\n      if (typeof action === 'string') {\n        if (typeof actions[action] !== 'function') {\n          throw new TypeError(`PolymerRedux: <${this.constructor.is}> invalid action creator \"${action}\"`);\n        }\n        action = actions[action](...args.slice(1));\n      }\n\n      // Proxy async dispatch\n      if (typeof action === 'function') {\n        const originalAction = action;\n        action = (...args) => {\n          // Replace redux dispatch\n          args.splice(0, 1, (...args) => {\n            return this.dispatch(...args);\n          });\n          return originalAction(...args);\n        };\n\n        // Copy props from the original action to the proxy.\n        // see https://github.com/tur-nr/polymer-redux/issues/98\n        Object.keys(originalAction).forEach(prop => {\n          action[prop] = originalAction[prop];\n        });\n      }\n\n      return store.dispatch(action);\n    }\n\n    /**\n     * Gets the current state in the Redux store.\n     *\n     * @return {*}\n     */\n    getState () {\n      return store.getState();\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@littleq/state-manager/mixins/polymer-redux.js","import { URL } from 'global/window';\nvar workingURL;\nvar urlDoc, urlBase, anchor;\n\n/**\n * @param {string} path\n * @param {string=} base\n * @return {!URL|!HTMLAnchorElement}\n */\nexport default (path, base) => {\n  if (workingURL === undefined) {\n    workingURL = false;\n    try {\n      var u = new URL('b', 'http://a');\n      u.pathname = 'c%20d';\n      workingURL = (u.href === 'http://a/c%20d');\n      workingURL = workingURL && (new URL('http://www.google.com/?foo bar').href === 'http://www.google.com/?foo%20bar');\n    } catch (e) {}\n  }\n  if (workingURL) {\n    return new URL(path, base);\n  }\n  if (!urlDoc) {\n    urlDoc = document.implementation.createHTMLDocument('url');\n    urlBase = urlDoc.createElement('base');\n    urlDoc.head.appendChild(urlBase);\n    anchor = /** @type {HTMLAnchorElement} */(urlDoc.createElement('a'));\n  }\n  urlBase.href = base;\n  anchor.href = path.replace(/ /g, '%20');\n  return anchor;\n};\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@littleq/location-mixin/lib/resolve-url.js","import { reducers, store, ReduxMixin } from '@littleq/state-manager';\nimport { combineReducers } from 'redux';\n\nconst QUERYPARAMS_ACTION = {\n  UPDATE: 'QUERYPARAMS_UPDATE'\n};\n\nreducers.query = (query = {}, action) => {\n  switch (action.type) {\n    case QUERYPARAMS_ACTION.UPDATE:\n      return Object.assign({}, query, {\n        params: action.params\n      });\n    default:\n      return query;\n  }\n};\n\nstore.replaceReducer(combineReducers(reducers));\n\nexport { QUERYPARAMS_ACTION };\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@littleq/query-params-mixin/lib/reducer.js","import { Element } from '@polymer/polymer/polymer-element';\nimport { ReduxMixin } from '@littleq/state-manager';\nimport LocationMixin from '@littleq/location-mixin';\nimport QueryParamsMixin from '@littleq/query-params-mixin';\nimport pathToRegexp from 'path-to-regexp';\nimport { customElements } from 'global/window';\nimport { ROUTER_ACTION } from './lib/reducer';\nimport getRoutes from './lib/get-routes';\n\nclass LittleqRoute extends ReduxMixin(QueryParamsMixin(LocationMixin(Element))) {\n  static get is () { return 'littleq-route'; }\n\n  static get properties () {\n    return {\n      page: {\n        type: String\n      },\n\n      route: {\n        type: String,\n        value: 'not-found'\n      },\n\n      params: {\n        type: Object,\n        statePath: 'router.params'\n      },\n\n      currentRoute: {\n        type: String,\n        observer: '_checkRoute',\n        statePath: 'router.route'\n      }\n    };\n  }\n\n  _processPage () {\n    let router = this;\n    do {\n      router = router.parentNode;\n    } while (router.tagName.toLowerCase() !== 'littleq-router');\n    const page = router.querySelector('[slot=\"page\"]');\n    page ? router._removePage(page, this) : router._showPage(this);\n  }\n\n  _checkRoute (route) {\n    if (route === getRoutes(this)) this._processPage();\n  }\n\n  _routeMatches (route, exec, keys) {\n    const params = {};\n    keys.forEach((key, index) => {\n      const { name } = key;\n      params[name] = exec[index + 1] || null;\n    });\n\n    this.dispatch({\n      type: ROUTER_ACTION.PARAMS,\n      params\n    });\n\n    this.dispatch({\n      type: ROUTER_ACTION.ROUTE,\n      route\n    });\n  }\n\n  _checkIfRouteMatches (path) {\n    const route = getRoutes(this);\n    const keys = [];\n    const re = pathToRegexp(route, keys);\n    const exec = re.exec(path);\n    if (exec) this._routeMatches(route, exec, keys);\n  }\n\n  _pathChanged (path) {\n    path = path.replace(/index\\.html$/, '');\n    if (this.route) this._checkIfRouteMatches(path);\n  }\n}\n\nif (!customElements.get(LittleqRoute.is)) {\n  customElements.define(LittleqRoute.is, LittleqRoute);\n} else {\n  console.warn(`${LittleqRoute.is} is already defined`);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../littleq-route.js","import { reducers, store } from '@littleq/state-manager';\nimport { combineReducers } from 'redux';\n\nconst ROUTER_ACTION = {\n  PARAMS: 'ROUTER_UPDATE_PARAMS',\n  ROUTE: 'ROUTER_UPDATE_ROUTE'\n};\n\nreducers.router = (router = {}, action) => {\n  switch (action.type) {\n    case ROUTER_ACTION.PARAMS:\n      return Object.assign({}, router, {\n        params: action.params\n      });\n    case ROUTER_ACTION.ROUTE:\n      return Object.assign({}, router, {\n        route: action.route\n      });\n    default:\n      return router;\n  }\n};\n\nstore.replaceReducer(combineReducers(reducers));\n\nexport { ROUTER_ACTION };\n\n\n\n// WEBPACK FOOTER //\n// ../lib/reducer.js","const getRoutes = (el, route = '') => {\n  route = el.route + route;\n  return el.parentNode && el.parentNode.tagName.toLowerCase() === 'littleq-route' ? getRoutes(el.parentNode, route) : route;\n};\n\nexport default getRoutes;\n\n\n\n// WEBPACK FOOTER //\n// ../lib/get-routes.js","import './boot.js';\nimport './mixin.js';\nimport './async.js';\n\n/** @typedef {{run: function(function(), number=):number, cancel: function(number)}} */\nlet AsyncModule; // eslint-disable-line no-unused-vars\n\n/**\n * @summary Collapse multiple callbacks into one invocation after a timer.\n * @memberof Polymer\n */\nclass Debouncer {\n  constructor() {\n    this._asyncModule = null;\n    this._callback = null;\n    this._timer = null;\n  }\n  /**\n   * Sets the scheduler; that is, a module with the Async interface,\n   * a callback and optional arguments to be passed to the run function\n   * from the async module.\n   *\n   * @param {!AsyncModule} asyncModule Object with Async interface.\n   * @param {function()} callback Callback to run.\n   */\n  setConfig(asyncModule, callback) {\n    this._asyncModule = asyncModule;\n    this._callback = callback;\n    this._timer = this._asyncModule.run(() => {\n      this._timer = null;\n      this._callback();\n    });\n  }\n  /**\n   * Cancels an active debouncer and returns a reference to itself.\n   */\n  cancel() {\n    if (this.isActive()) {\n      this._asyncModule.cancel(this._timer);\n      this._timer = null;\n    }\n  }\n  /**\n   * Flushes an active debouncer and returns a reference to itself.\n   */\n  flush() {\n    if (this.isActive()) {\n      this.cancel();\n      this._callback();\n    }\n  }\n  /**\n   * Returns true if the debouncer is active.\n   *\n   * @return {boolean} True if active.\n   */\n  isActive() {\n    return this._timer != null;\n  }\n/**\n * Creates a debouncer if no debouncer is passed as a parameter\n * or it cancels an active debouncer otherwise. The following\n * example shows how a debouncer can be called multiple times within a\n * microtask and \"debounced\" such that the provided callback function is\n * called once. Add this method to a custom element:\n *\n * _debounceWork() {\n *   this._debounceJob = Polymer.Debouncer.debounce(this._debounceJob,\n *       Polymer.Async.microTask, () => {\n *     this._doWork();\n *   });\n * }\n *\n * If the `_debounceWork` method is called multiple times within the same\n * microtask, the `_doWork` function will be called only once at the next\n * microtask checkpoint.\n *\n * Note: In testing it is often convenient to avoid asynchrony. To accomplish\n * this with a debouncer, you can use `Polymer.enqueueDebouncer` and\n * `Polymer.flush`. For example, extend the above example by adding\n * `Polymer.enqueueDebouncer(this._debounceJob)` at the end of the\n * `_debounceWork` method. Then in a test, call `Polymer.flush` to ensure\n * the debouncer has completed.\n *\n * @param {Debouncer?} debouncer Debouncer object.\n * @param {!AsyncModule} asyncModule Object with Async interface\n * @param {function()} callback Callback to run.\n * @return {!Debouncer} Returns a debouncer object.\n */\n  static debounce(debouncer, asyncModule, callback) {\n    if (debouncer instanceof Debouncer) {\n      debouncer.cancel();\n    } else {\n      debouncer = new Debouncer();\n    }\n    debouncer.setConfig(asyncModule, callback);\n    return debouncer;\n  }\n}\n\nexport { Debouncer };\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/@polymer/polymer/lib/utils/debounce.js","import { Element } from '@polymer/polymer/polymer-element';\nimport { customElements } from 'global/window';\nimport './index.html';\n\nclass Landing extends Element {\n  static get is () { return 'landing-page'; }\n}\n\ncustomElements.define(Landing.is, Landing);\n\n\n\n// WEBPACK FOOTER //\n// ./pages/landing-page/index.js","\nconst RegisterHtmlTemplate = require('polymer-webpack-loader/register-html-template');\n\nRegisterHtmlTemplate.register(\"<dom-module id=landing-page> <template> Hello World; </template> </dom-module>\");\n\n\n\n// WEBPACK FOOTER //\n// ./pages/landing-page/index.html","/* eslint-env browser */\n\nclass RegisterHtmlTemplate {\n  /**\n   * Create a `<template>` element to hold `<dom-module>` content.\n   * This bit of code will execute in the context of the main document,\n   * calling `importNode` on the `<template>`, which in turn triggers\n   * the lifecycle of the `<dom-module>` and allows it to insert its\n   * content into Polymer's global module map. When a Polymer element\n   * boots up it will fetch its template from this module map.\n   * https://github.com/Polymer/polymer/blob/master/lib/mixins/element-mixin.html#L501-L538\n   * @param {string} val A `<dom-module>` as an HTML string\n   */\n  static register(val) {\n    let content;\n    const template = document.createElement('template');\n    template.innerHTML = val;\n    if (template.content) {\n      content = template.content; // eslint-disable-line prefer-destructuring\n    } else {\n      content = document.createDocumentFragment();\n      while (template.firstChild) {\n        content.appendChild(template.firstChild);\n      }\n    }\n    document.importNode(content, true);\n  }\n  /**\n   * Content that will be injected into the main document. This is primarily\n   * for things like `<iron-iconset>` and `<custom-style>` which do not have\n   * templates but rely on HTML Imports ability to apply content to the main\n   * document.\n   * @param {string} val An HTML string\n   */\n  static toBody(val) {\n    const trimmedVal = val.trim();\n    if (trimmedVal) {\n      const div = document.createElement('div');\n      div.innerHTML = trimmedVal;\n      if (div.firstChild) {\n        if (document.body) {\n          document.body.insertBefore(div.firstChild, document.body.firstChild);\n        } else {\n          document.addEventListener('DOMContentLoaded', () => {\n            document.body.insertBefore(div.firstChild, document.body.firstChild);\n          });\n        }\n      }\n    }\n  }\n}\n\nmodule.exports = RegisterHtmlTemplate;\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/polymer-webpack-loader/register-html-template.js","/* From Modernizr */\nexport default (el) => {\n  const animations = {\n    'animation': 'animationend',\n    'OAnimation': 'oAnimationEnd',\n    'MozAnimation': 'animationend',\n    'WebkitAnimation': 'webkitAnimationEnd'\n  };\n\n  for (var t in animations) {\n    if (el.style[t] !== undefined) {\n      return animations[t];\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ../lib/get-transition-event.js"],"sourceRoot":""}